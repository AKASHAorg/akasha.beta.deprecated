{"version":3,"file":"check-version.js","sourceRoot":"","sources":["check-version.ts"],"names":[],"mappings":";;AAAA,uCAA8C;AAC9C,oDAAoD;AACpD,kEAA8D;AAE9D;IAIW,SAAS,CAAC,YAAY;QACzB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,cAAc,GAAG,cAAG,CAAC,UAAU,EAAE,CAAC;IAC3C,CAAC;IAED,YAAY,CAAC,OAAe,EAAE,IAAY,EAAE,SAAiB;QACzD,EAAE,CAAC,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;YAC1C,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEO,UAAU,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS;QACvC,8BAAa,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,aAAa;YAC9D,iBAAM,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,EAAE;gBACtC,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,QAAQ;gBACf,OAAO,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;gBAC/B,OAAO,EAAE,+BAA+B,OAAO,EAAE;gBACjD,MAAM,EAAE;;EAEtB,aAAa;;;EAGb,IAAI;CACL;aACY,EAAE,CAAC,EAAE;gBACF,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;oBACX,gBAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBAC7B,CAAC;YACL,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAED,kBAAe,IAAI,aAAa,EAAE,CAAC","sourcesContent":["import { dialog, shell, app } from 'electron';\nimport * as compareVersions from 'compare-versions';\nimport { IpfsConnector } from '@akashaproject/ipfs-connector';\n\nclass UpdateChecker {\n    browserWindow: any;\n    currentVersion: string;\n\n    public setWindow(activeWindow) {\n        this.browserWindow = activeWindow;\n        this.currentVersion = app.getVersion();\n    }\n\n    checkVersion(version: string, repo: string, changeLog: string) {\n        if (compareVersions(version, this.currentVersion) === 1) {\n            this.emitDialog(version, repo, changeLog);\n            return true;\n        }\n        return false;\n    }\n\n    private emitDialog(version, repo, changeLog) {\n        IpfsConnector.getInstance().api.get(changeLog).then((changeLogData) => {\n            dialog.showMessageBox(this.browserWindow, {\n                type: 'info',\n                title: 'AKASHA',\n                buttons: ['Cancel', 'Download'],\n                message: `A new version is available: ${version}`,\n                detail: `\nChangelog: \n${changeLogData}\n\nSource: \n${repo}\n`\n            }, (cb) => {\n                if (cb === 1) {\n                    shell.openExternal(repo);\n                }\n            })\n        });\n    }\n}\n\nexport default new UpdateChecker();\n"]}