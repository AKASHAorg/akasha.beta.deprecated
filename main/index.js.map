{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"typings/main.d.ts\" />\nimport { app, crashReporter, BrowserWindow, shell } from 'electron';\nimport { GethConnector } from '@akashaproject/geth-connector';\nimport { IpfsConnector } from '@akashaproject/ipfs-connector';\nimport { resolve } from 'path';\nimport { initModules } from './lib/ipc/index';\nimport { initMenu } from './menu';\n\nconst stopServices = () => {\n    GethConnector.getInstance().stop();\n    IpfsConnector.getInstance().stop();\n    setTimeout(() => {\n        process.exit(0);\n    }, 1000);\n};\nexport function bootstrapApp() {\n    let mainWindow = null;\n    const viewHtml = resolve(__dirname, '../app');\n    crashReporter.start({\n        productName: 'Akasha',\n        companyName: 'Akasha Project',\n        submitURL: 'https://github.com/AkashaProject/node-app/',\n        autoSubmit: false\n    });\n\n    if (process.env.NODE_ENV === 'development') {\n        require('electron-debug')({ showDevTools: true });\n    }\n\n    app.on('window-all-closed', () => {\n        if (process.platform !== 'darwin') app.quit();\n    });\n\n    // prevent multiple instances of AKASHA\n    const shouldQuit = app.makeSingleInstance((commandLine, workingDirectory) => {\n        if (mainWindow) {\n            if (mainWindow.isMinimized()) mainWindow.restore();\n            mainWindow.focus()\n        }\n    });\n\n    if (shouldQuit) {\n        app.quit()\n    }\n\n    app.on('ready', () => {\n        const modules = initModules();\n        mainWindow = new BrowserWindow({\n            width: 1280,\n            height: 720,\n            resizable: true,\n            show: false,\n            webPreferences: {\n                // nodeIntegration: false,\n                preload: resolve(__dirname, 'preloader.js')\n            }\n        });\n\n        if (process.env.HOT) {\n            mainWindow.loadURL(`file://${viewHtml}/hot-dev-app.html`);\n        } else {\n            mainWindow.loadURL(`file://${viewHtml}/app.html`);\n        }\n\n        mainWindow.once('close', (ev: Event) => {\n            ev.preventDefault();\n            modules.flushAll();\n            GethConnector.getInstance().stop();\n            IpfsConnector.getInstance().stop();\n            setTimeout(() => app.quit(), 1000);\n        });\n        initMenu(mainWindow);\n        mainWindow.webContents.on('did-finish-load', () => {\n            modules.logger.registerLogger('APP');\n            modules.initListeners(mainWindow.webContents);\n        });\n\n        mainWindow.once('ready-to-show', () => {\n            mainWindow.show();\n            mainWindow.focus();\n        });\n\n        mainWindow.webContents.on('crashed', () => {\n            stopServices();\n            modules.logger.getLogger('APP').warn('APP CRASHED');\n        });\n\n        // prevent href link being opened inside app\n        const openDefault = (e, url) => {\n            e.preventDefault();\n            shell.openExternal(url);\n        };\n\n        mainWindow.webContents.on('will-navigate', openDefault);\n        mainWindow.webContents.on('new-window', openDefault);\n\n        mainWindow.on('unresponsive', () => {\n            modules.logger.getLogger('APP').warn('APP is unresponsive');\n        });\n        process.on('uncaughtException', (err: Error) => {\n            modules.logger.getLogger('APP').error(`${err.message} ${err.stack}`);\n        });\n        process.on('SIGINT', stopServices);\n        process.on('SIGTERM', stopServices);\n    });\n}\n\n\n"]}