{"version":3,"file":"RegistryIPC.test.js","sourceRoot":"","sources":["RegistryIPC.test.ts"],"names":[],"mappings":";AACA,8BAAwB,wBAAwB,CAAC,CAAA;AACjD,uBAAuB,MAAM,CAAC,CAAA;AAE9B,MAAY,OAAO,WAAM,WAAW,CAAC,CAAA;AAErC,8BAA8B,qBAAW;IAAzC;QAA8B,oBAAW;QAC9B,aAAQ,GAAqB,IAAI,GAAG,EAAE,CAAC;IAMlD,CAAC;IAJU,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK;QACjC,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACtC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IACvD,CAAC;AACL,CAAC;AAED,QAAQ,CAAC,aAAa,EAAE;IACpB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrB,IAAI,eAAgC,CAAC;IAErC,MAAM,CAAC,UAAU,IAAI;QACjB,aAAM,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;QACtC,UAAU,CAAC,MAAM,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE;QAC3B,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;QACxC,aAAM,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE;QACxB,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACpC,aAAM,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,UAAU,IAAI;QAChB,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { ipcMain } from 'electron';\nimport RegistryIPC from '../lib/ipc/RegistryIPC';\nimport { expect } from 'chai';\nimport channel from '../lib/channels';\nimport * as helpers from './helpers';\n\nclass RegistryIPCtest extends RegistryIPC {\n    public callTest: Map<string, any> = new Map();\n\n    public fireEvent(channel, data, event) {\n        const cb = this.callTest.get(channel);\n        return cb(helpers.fireEvent(channel, data, event));\n    }\n}\n\ndescribe('RegistryIPC', function () {\n    this.timeout(120000);\n    let registryChannel: RegistryIPCtest;\n\n    before(function (done) {\n        expect(helpers.initLogger()).to.exist;\n        setTimeout(() => helpers.startServices(done), 400);\n    });\n\n    it('--constructs channel api', function () {\n        registryChannel = new RegistryIPCtest();\n        expect(registryChannel).to.exist;\n    });\n\n    it('--can init listeneres', function () {\n        registryChannel.initListeners(null);\n        expect(registryChannel.listeners.size).to.be.above(0);\n    });\n\n    after(function (done) {\n        helpers.stopServices(done);\n    });\n});\n"]}