{"version":3,"file":"EntryIPC.test.js","sourceRoot":"","sources":["EntryIPC.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { ipcMain } from 'electron';\nimport EntryIPC from '../lib/ipc/EntryIPC';\nimport { expect } from 'chai';\nimport channel from '../lib/channels';\nimport * as helpers from './helpers';\nimport entryContent from './fixtures/entryContent';\n\nclass EntryIPCtest extends EntryIPC {\n    public callTest: Map<string, any> = new Map();\n\n    public fireEvent(channel, data, event) {\n        const cb = this.callTest.get(channel);\n        return cb(helpers.fireEvent(channel, data, event));\n    }\n}\n\ndescribe('EntryIPC', function () {\n    this.timeout(60000);\n    let entryChannel: EntryIPCtest;\n    let token: string;\n\n    before(function (done) {\n        expect(helpers.initLogger()).to.exist;\n        setTimeout(() => helpers.startServices(done), 400);\n    });\n\n    afterEach(function (done) {\n        setTimeout(done, 2000);\n    });\n\n    it('--constructs channel api', function () {\n        entryChannel = new EntryIPCtest();\n        expect(entryChannel).to.exist;\n    });\n\n    it('--can init listeneres', function () {\n        entryChannel.initListeners(null);\n        expect(entryChannel.listeners.size).to.be.above(0);\n    });\n\n    it('--waits for sync', function (done) {\n        helpers.checkSynced(done);\n    });\n\n    it('--should add to listened channels from #manager', function (done) {\n        let listenersNr = 0;\n        const listenOn = [\n            channel.server.entry.publish,\n            channel.server.entry.update,\n            channel.server.entry.upvote,\n            channel.server.entry.downvote,\n            channel.server.entry.isOpenedToVotes,\n            channel.server.entry.getVoteOf,\n            channel.server.entry.getEntriesCount,\n            channel.server.entry.getEntryOf,\n            channel.server.entry.getEntriesCreated,\n            channel.server.entry.getVotesEvent\n        ];\n        entryChannel.callTest.set(\n            channel.client.entry.manager,\n            (injected) => {\n                listenersNr++;\n                if (listenersNr === listenOn.length) {\n                    done()\n                }\n            }\n        );\n        listenOn.forEach((channelName) => {\n            ipcMain.emit(channel.server.entry.manager, '', { channel: channelName, listen: true });\n        });\n    });\n    it('--should get a token', function (done) {\n        helpers.getToken(done, {\n            account: helpers.mockedAddress,\n            password: helpers.pwd,\n            rememberTime: 4\n        }, (generated: string) => {\n            token = generated;\n        });\n    });\n\n    it.skip('--should publish an entry', function (done) {\n        const content = {\n            draft: entryContent,\n            title: 'Entry' + new Date().getTime(),\n            excerpt: 'Testing excerpt, bla bla bla, test O_O :D :D :D' + new Date().getTime(),\n            licence: Math.floor(Math.random() * 10) + 1,\n            author: helpers.profileAddress,\n            featuredImage: Buffer.alloc(200000, 33)\n        };\n        const tags = [helpers.tagName];\n\n        entryChannel.callTest.set(\n            channel.client.entry.publish,\n            (injected) => {\n                expect(injected.data.data).to.exist;\n                expect(injected.data.data.tx).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.publish, '', { content, tags, token, gas: 2000000 });\n    });\n\n    it('--should get entries created', (done) => {\n        entryChannel.callTest.set(\n            channel.client.entry.getEntriesCreated,\n            (injected) => {\n                expect(injected.data.data).to.exist;\n                expect(injected.data.data.collection).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.getEntriesCreated, '', { index: {}, fromBlock: 0 });\n    });\n\n    it('--should get an shortEntry by address', (done) => {\n        entryChannel.callTest.set(\n            channel.client.entry.getEntry,\n            (injected) => {\n                expect(injected.data.data.content).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.getEntry, '', { entryAddress: helpers.entryAddress });\n    });\n\n    it('--should get an entry of profile/position', (done) => {\n        entryChannel.callTest.set(\n            channel.client.entry.getEntryOf,\n            (injected) => {\n                expect(injected.data.data.content).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.getEntryOf, '', { profileAddress: helpers.profileAddress, position: 1 });\n    });\n\n    it('--should get an shortEntry much faster', (done) => {\n        const started = new Date().getTime();\n        entryChannel.callTest.set(\n            channel.client.entry.getEntry,\n            (injected) => {\n                const finished = new Date().getTime() - started;\n                expect(finished).to.be.below(50);\n                expect(injected.data.data.content).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.getEntry, '', { entryAddress: helpers.entryAddress });\n    });\n\n    it('--should get an fullEntry by address', (done) => {\n        entryChannel.callTest.set(\n            channel.client.entry.getEntry,\n            (injected) => {\n                expect(injected.data.data.content).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.getEntry, '', { entryAddress: helpers.entryAddress, full: true });\n    });\n\n    it('--should get fullEntry much faster', (done) => {\n        const started = new Date().getTime();\n        entryChannel.callTest.set(\n            channel.client.entry.getEntry,\n            (injected) => {\n                const finished = new Date().getTime() - started;\n                expect(finished).to.be.below(50);\n                expect(injected.data.data.content).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.getEntry, '', { entryAddress: helpers.entryAddress, full: true });\n    });\n\n    it('--should get number of entries published by profile', (done) => {\n        entryChannel.callTest.set(\n            channel.client.entry.getEntriesCount,\n            (injected) => {\n                expect(injected.data.data.count).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.getEntriesCount, '', { profileAddress: helpers.profileAddress });\n    });\n\n    it('--should get score of entry', (done) => {\n        entryChannel.callTest.set(\n            channel.client.entry.getScore,\n            (injected) => {\n                expect(injected.data.data.score).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.getScore, '', { address: helpers.entryAddress });\n    });\n\n    it('--checks if entry is opened to votes', (done) => {\n        entryChannel.callTest.set(\n            channel.client.entry.isOpenedToVotes,\n            (injected) => {\n                expect(injected.data.data.voting).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.isOpenedToVotes, '', { address: helpers.entryAddress });\n    });\n\n    it('--should upvote entry', (done) => {\n        entryChannel.callTest.set(\n            channel.client.entry.upvote,\n            (injected) => {\n                expect(injected.data.data.tx).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.upvote, '', {\n            address: helpers.entryAddress,\n            token,\n            weight: 1,\n            gas: 2000000\n        });\n    });\n\n    it('--should downvote entry', (done) => {\n        entryChannel.callTest.set(\n            channel.client.entry.downvote,\n            (injected) => {\n                expect(injected.data.data.tx).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.downvote, '', {\n            address: helpers.entryAddress,\n            token,\n            weight: 2,\n            gas: 2000000\n        });\n    });\n\n    it('--should get vote of', (done) => {\n        entryChannel.callTest.set(\n            channel.client.entry.getVoteOf,\n            (injected) => {\n                expect(injected.data.data.weight).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.getVoteOf, '', {\n            address: helpers.entryAddress,\n            profile: helpers.profileAddress\n        });\n    });\n\n    it('--should get votes of profile from event', (done) => {\n        entryChannel.callTest.set(\n            channel.client.entry.getVotesEvent,\n            (injected) => {\n                expect(injected.data.data.collection).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.entry.getVotesEvent, '', {\n            index: { profile: helpers.profileAddress },\n            fromBlock: 0\n        });\n    });\n    after(function (done) {\n        helpers.stopServices(done);\n    });\n});\n"]}