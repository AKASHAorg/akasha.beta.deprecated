{"version":3,"file":"TagIPC.test.js","sourceRoot":"","sources":["TagIPC.test.ts"],"names":[],"mappings":";;AAAA,uCAAmC;AACnC,gDAAyC;AACzC,+BAA8B;AAC9B,8CAAsC;AACtC,qCAAqC;AAErC,iBAAkB,SAAQ,iBAAO;IAAjC;;QACW,aAAQ,GAAqB,IAAI,GAAG,EAAE,CAAC;IAMlD,CAAC;IAJU,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK;QACjC,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACtC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IACvD,CAAC;CACJ;AAED,QAAQ,CAAC,SAAS,EAAE;IAChB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACpB,IAAI,WAAwB,CAAC;IAC7B,IAAI,KAAa,CAAC;IAClB,IAAI,SAAiB,CAAC;IACtB,IAAI,OAAe,CAAC;IACpB,MAAM,CAAC,UAAU,IAAI;QACjB,aAAM,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;QACtC,UAAU,CAAC,MAAM,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE;QAC3B,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;QAChC,aAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE;QACxB,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAChC,aAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kBAAkB,EAAE,UAAU,IAAI;QACjC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,UAAU,IAAI;QAChE,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,MAAM,QAAQ,GAAG;YACb,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM;YAC1B,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ;YAC5B,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU;YAC9B,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS;YAC7B,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW;YAC/B,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW;YAC/B,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS;YAC7B,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc;SACrC,CAAC;QACF,WAAW,CAAC,QAAQ,CAAC,GAAG,CACpB,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAC3B,CAAC,QAAQ;YACL,WAAW,EAAE,CAAC;YACd,EAAE,CAAC,CAAC,WAAW,KAAK,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;gBAClC,IAAI,EAAE,CAAA;YACV,CAAC;QACL,CAAC,CACJ,CAAC;QACF,QAAQ,CAAC,OAAO,CAAC,CAAC,WAAW;YACzB,kBAAO,CAAC,IAAI,CAAC,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1F,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,sBAAsB,EAAE,UAAU,IAAI;QACrC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE;YACnB,OAAO,EAAE,OAAO,CAAC,aAAa;YAC9B,QAAQ,EAAE,OAAO,CAAC,GAAG;YACrB,YAAY,EAAE,CAAC;SAClB,EAAE,CAAC,SAAiB;YACjB,KAAK,GAAG,SAAS,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,WAAW,EAAE,UAAU,IAAI;QAC1B,WAAW,CAAC,QAAQ,CAAC,GAAG,CACpB,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAC1B,CAAC,QAAQ;YACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC3B,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACvC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAClC,IAAI,EAAE,CAAC;QACX,CAAC,CACJ,CAAC;QACF,OAAO,GAAG,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAC1C,kBAAO,CAAC,IAAI,CAAC,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC;IAC5F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,UAAU,IAAI;QAClD,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,aAAa,EAAE,UAAU,IAAI;QAC5B,WAAW,CAAC,QAAQ,CAAC,GAAG,CACpB,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAC5B,CAAC,QAAQ;YACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1C,IAAI,EAAE,CAAC;QACX,CAAC,CACJ,CAAC;QACF,kBAAO,CAAC,IAAI,CAAC,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC,CAAC;IACvF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,eAAe,EAAE,UAAU,IAAI;QAC9B,WAAW,CAAC,QAAQ,CAAC,GAAG,CACpB,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAC9B,CAAC,QAAQ;YACL,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5C,IAAI,EAAE,CAAC;QACX,CAAC,CACJ,CAAC;QACF,kBAAO,CAAC,IAAI,CAAC,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,gBAAgB,EAAE,UAAU,IAAI;QAC/B,WAAW,CAAC,QAAQ,CAAC,GAAG,CACpB,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAC/B,CAAC,QAAQ;YACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChC,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1C,IAAI,EAAE,CAAC;QACX,CAAC,CACJ,CAAC;QACF,kBAAO,CAAC,IAAI,CAAC,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,UAAU,IAAI;QACrC,WAAW,CAAC,QAAQ,CAAC,GAAG,CACpB,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAChC,CAAC,QAAQ;YACL,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/C,IAAI,EAAE,CAAC;QACX,CAAC,CACJ,CAAC;QACF,kBAAO,CAAC,IAAI,CAAC,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC;IAClH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,cAAc,EAAE,UAAU,IAAI;QAC7B,WAAW,CAAC,QAAQ,CAAC,GAAG,CACpB,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAC7B,CAAC,QAAQ;YACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC3B,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACvC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAClC,IAAI,EAAE,CAAC;QACX,CAAC,CACJ,CAAC;QACF,kBAAO,CAAC,IAAI,CAAC,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC;IAC/F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,UAAU,IAAI;QACnD,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,UAAU,IAAI;QAClC,WAAW,CAAC,QAAQ,CAAC,GAAG,CACpB,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAC7B,CAAC,QAAQ;YACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC3B,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1C,IAAI,EAAE,CAAC;QACX,CAAC,CACJ,CAAC;QACF,kBAAO,CAAC,IAAI,CAAC,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,UAAU,IAAI;QACpC,WAAW,CAAC,QAAQ,CAAC,GAAG,CACpB,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAC/B,CAAC,QAAQ;YACL,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACpC,aAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACvC,IAAI,EAAE,CAAC;QACX,CAAC,CACJ,CAAC;QACF,kBAAO,CAAC,IAAI,CAAC,kBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE;YAC9C,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,WAAW,EAAE,CAAC;YACd,KAAK;YACL,GAAG,EAAE,OAAO;SACf,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,UAAU,IAAI;QAChB,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { ipcMain } from 'electron';\nimport TagsIPC from '../lib/ipc/TagsIPC';\nimport { expect } from 'chai';\nimport channel from '../lib/channels';\nimport * as helpers from './helpers';\n\nclass TagsIPCtest extends TagsIPC {\n    public callTest: Map<string, any> = new Map();\n\n    public fireEvent(channel, data, event) {\n        const cb = this.callTest.get(channel);\n        return cb(helpers.fireEvent(channel, data, event));\n    }\n}\n\ndescribe('TagsIPC', function () {\n    this.timeout(60000);\n    let tagsChannel: TagsIPCtest;\n    let token: string;\n    let txPending: string;\n    let tagName: string;\n    before(function (done) {\n        expect(helpers.initLogger()).to.exist;\n        setTimeout(() => helpers.startServices(done), 400);\n    });\n\n    it('--constructs channel api', function () {\n        tagsChannel = new TagsIPCtest();\n        expect(tagsChannel).to.exist;\n    });\n\n    it('--can init listeneres', function () {\n        tagsChannel.initListeners(null);\n        expect(tagsChannel.listeners.size).to.be.above(0);\n    });\n\n    it('--waits for sync', function (done) {\n        helpers.checkSynced(done);\n    });\n\n    it('--should add to listened channels from #manager', function (done) {\n        let listenersNr = 0;\n        const listenOn = [\n            channel.server.tags.create,\n            channel.server.tags.getTagId,\n            channel.server.tags.getTagName,\n            channel.server.tags.subscribe,\n            channel.server.tags.unSubscribe,\n            channel.server.tags.getTagCount,\n            channel.server.tags.subsCount,\n            channel.server.tags.getTagsCreated\n        ];\n        tagsChannel.callTest.set(\n            channel.client.tags.manager,\n            (injected) => {\n                listenersNr++;\n                if (listenersNr === listenOn.length) {\n                    done()\n                }\n            }\n        );\n        listenOn.forEach((channelName) => {\n            ipcMain.emit(channel.server.tags.manager, '', { channel: channelName, listen: true });\n        });\n    });\n    it('--should get a token', function (done) {\n        helpers.getToken(done, {\n            account: helpers.mockedAddress,\n            password: helpers.pwd,\n            rememberTime: 4\n        }, (generated: string) => {\n            token = generated;\n        });\n    });\n    it('--#create', function (done) {\n        tagsChannel.callTest.set(\n            channel.client.tags.create,\n            (injected) => {\n                console.log(injected.data);\n                expect(injected.data.data).to.exist;\n                expect(injected.data.data.tx).to.exist;\n                txPending = injected.data.data.tx;\n                done();\n            }\n        );\n        tagName = 'tag-no' + new Date().getTime();\n        ipcMain.emit(channel.server.tags.create, '', { token, tagName: tagName, gas: 2000000 });\n    });\n\n    it('--should wait for creating tag tx', function (done) {\n        helpers.confirmTx(done, txPending);\n    });\n\n    it('--#getTagId', function (done) {\n        tagsChannel.callTest.set(\n            channel.client.tags.getTagId,\n            (injected) => {\n                console.log(injected.data.data);\n                expect(injected.data.data).to.exist;\n                expect(injected.data.data.tagId).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.tags.getTagId, '', { tagName: 'tag-no1478868259923' });\n    });\n\n    it('--#getTagName', function (done) {\n        tagsChannel.callTest.set(\n            channel.client.tags.getTagName,\n            (injected) => {\n                expect(injected.data.data).to.exist;\n                expect(injected.data.data.tagName).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.tags.getTagName, '', { tagId: '2' });\n    });\n    it('--#getTagCount', function (done) {\n        tagsChannel.callTest.set(\n            channel.client.tags.getTagCount,\n            (injected) => {\n                console.log(injected.data.data);\n                expect(injected.data.data).to.exist;\n                expect(injected.data.data.count).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.tags.getTagCount, '', {});\n    });\n    it.skip('--#isSubscribed', function (done) {\n        tagsChannel.callTest.set(\n            channel.client.tags.isSubscribed,\n            (injected) => {\n                expect(injected.data.data).to.exist;\n                expect(injected.data.data.subscribed).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.tags.isSubscribed, '', { tagId: helpers.tagId, address: helpers.profileAddress });\n    });\n\n    it('--#subscribe', function (done) {\n        tagsChannel.callTest.set(\n            channel.client.tags.subscribe,\n            (injected) => {\n                console.log(injected.data);\n                expect(injected.data.data).to.exist;\n                expect(injected.data.data.tx).to.exist;\n                txPending = injected.data.data.tx;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.tags.subscribe, '', { tagName: tagName, token, gas: 2000000 });\n    });\n\n    it('--should wait for subscribe tag tx', function (done) {\n        helpers.confirmTx(done, txPending);\n    });\n\n    it('--gets #subsCount', function (done) {\n        tagsChannel.callTest.set(\n            channel.client.tags.subsCount,\n            (injected) => {\n                console.log(injected.data);\n                expect(injected.data.data).to.exist;\n                expect(injected.data.data.count).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.tags.subsCount, '', { akashaId: helpers.akashaId });\n    });\n\n    it.skip('--#unsubscribe', function (done) {\n        tagsChannel.callTest.set(\n            channel.client.tags.unsubscribe,\n            (injected) => {\n                expect(injected.data.data).to.exist;\n                expect(injected.data.data.tx).to.exist;\n                done();\n            }\n        );\n        ipcMain.emit(channel.server.tags.unsubscribe, '', {\n            tagName: helpers.tagName,\n            subPosition: 0,\n            token,\n            gas: 2000000\n        });\n    });\n\n    after(function (done) {\n        helpers.stopServices(done);\n    });\n});\n"]}