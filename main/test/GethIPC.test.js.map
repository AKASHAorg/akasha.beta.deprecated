{"version":3,"file":"GethIPC.test.js","sourceRoot":"","sources":["GethIPC.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { ipcMain } from 'electron';\nimport { initLogger, GethIPCtest } from './helpers';\nimport { expect } from 'chai';\nimport channel from '../lib/channels';\n\n\ndescribe('GethIPC', function () {\n    this.timeout(60000);\n    let gethChannel: GethIPCtest;\n\n    before(function (done) {\n        expect(initLogger()).to.exist;\n        setTimeout(done, 200);\n    });\n\n    it('--constructs channel api', function () {\n        gethChannel = new GethIPCtest();\n        expect(gethChannel).to.exist;\n    });\n\n    it('--can init listeneres', function () {\n        gethChannel.initListeners(null);\n        expect(gethChannel.listeners.size).to.be.above(0);\n    });\n\n    it('--should add to listened channels from #manager', function (done) {\n        let listenersNr = 0;\n        const listenOn = [\n            channel.server.geth.syncStatus,\n            channel.server.geth.logs,\n            channel.server.geth.options\n        ];\n        gethChannel.callTest.set(\n            channel.client.geth.manager,\n            (injected) => {\n                listenersNr++;\n                if (listenersNr === listenOn.length) {\n                    done()\n                }\n            }\n        );\n        listenOn.forEach((channelName) => {\n            ipcMain.emit(channel.server.geth.manager, '', { channel: channelName, listen: true });\n        });\n    });\n\n    it('--should #startService', function (done) {\n        gethChannel.callTest.set(channel.client.geth.startService, (injected) => {\n            expect(injected.data).to.exist;\n            expect(injected.data.error).to.not.exist;\n            if (injected.data.data.started) {\n                done();\n            }\n        });\n        ipcMain.emit(channel.server.geth.startService, '', {});\n    });\n\n    it('--should get #syncStatus', function (done) {\n        gethChannel.callTest.set(channel.client.geth.syncStatus, (injected) => {\n            expect(injected.data).to.exist;\n            expect(injected.data.data.synced).to.exist;\n            done();\n        });\n        ipcMain.emit(channel.server.geth.syncStatus, '', {});\n    });\n\n    it('--should get #logs', function (done) {\n        gethChannel.callTest.set(channel.client.geth.logs, (injected) => {\n            expect(injected.data).to.exist;\n            expect(injected.data.error).to.not.exist;\n            expect(injected.data.data.gethInfo).to.exist;\n            done();\n        });\n        ipcMain.emit(channel.server.geth.logs, '', {});\n    });\n\n    it('--should get service #status', function (done) {\n        gethChannel.callTest.set(channel.client.geth.status, (injected) => {\n            expect(injected.data).to.exist;\n            expect(injected.data.error).to.not.exist;\n            expect(injected.data.data.api).to.exist;\n            expect(injected.data.data.spawned).to.exist;\n            done();\n        });\n        ipcMain.emit(channel.server.geth.status, '', {});\n    });\n\n    it('--should set geth starting #options', function (done) {\n        const fakePath = '/fake/path';\n       gethChannel.callTest.set(channel.client.geth.options, (injected) => {\n           expect(injected.data).to.exist;\n           expect(injected.data.error).to.not.exist;\n           expect(injected.data.data.datadir).to.equal(fakePath);\n           done();\n\n       });\n        ipcMain.emit(channel.server.geth.options, '', {datadir: fakePath});\n    });\n\n    after(function (done) {\n        gethChannel.callTest.set(channel.client.geth.stopService, (data) => {\n            expect(data.data).to.exist;\n            gethChannel.callTest.clear();\n            done();\n        });\n        ipcMain.emit(channel.server.geth.stopService);\n    });\n\n});\n"]}