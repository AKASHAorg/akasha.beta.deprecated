{"version":3,"file":"IpfsIPC.js","sourceRoot":"","sources":["IpfsIPC.ts"],"names":[],"mappings":";AAAA,8BAAwB,qBAAqB,CAAC,CAAA;AAE9C,iCAA8B,+BAA+B,CAAC,CAAA;AAC9D,yBAAsB,UAAU,CAAC,CAAA;AAEjC,sBAAsB,qBAAW;IAI7B;QACI,OAAO,CAAC;QAJL,WAAM,GAAG,MAAM,CAAC;QACf,oBAAe,GAAa,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;QAIhE,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,aAAa,CAAC,WAAwB;QAClC,8BAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CACnC,gBAAS,CAAC,WAAW,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CACpD,CAAC;QACF,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;AAEL,CAAC;AAED;kBAAe,OAAO,CAAC","sourcesContent":["import IpfsEmitter from './event/IpfsEmitter';\nimport WebContents = Electron.WebContents;\nimport { IpfsConnector } from '@akashaproject/ipfs-connector';\nimport AppLogger from './Logger';\n\nclass IpfsIPC extends IpfsEmitter {\n    public logger = 'ipfs';\n    private DEFAULT_MANAGED: string[] = ['startService', 'stopService'];\n\n    constructor() {\n        super();\n        this.attachEmitters();\n    }\n\n    initListeners(webContents: WebContents) {\n        IpfsConnector.getInstance().setLogger(\n          AppLogger.getInstance().registerLogger(this.logger)\n        );\n        this.webContents = webContents;\n    }\n\n}\n\nexport default IpfsIPC;\n"]}