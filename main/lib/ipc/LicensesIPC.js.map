{"version":3,"file":"LicensesIPC.js","sourceRoot":"","sources":["LicensesIPC.ts"],"names":[],"mappings":";AAAA,gCAA0B,uBAAuB,CAAC,CAAA;AAClD,2BAAqB,aAAa,CAAC,CAAA;AACnC,4BAA6B,mBAAmB,CAAC,CAAA;AACjD,2BAAyC,2BAA2B,CAAC,CAAA;AAGrE,0BAA0B,uBAAa;IAEnC;QACI,OAAO,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,eAAe,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC9C,CAAC;IAEM,aAAa,CAAC,WAAwB;QACzC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI;aACC,YAAY,EAAE;aACd,eAAe,EAAE;aACjB,QAAQ,EAAE,CAAC;IACpB,CAAC;IAEO,YAAY;QAChB,IAAI,CAAC,gBAAgB,CACjB,kBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,WAAW,EAC7C,CAAC,KAAU;YACP,MAAM,QAAQ,GAAG,wBAAY,CAAC,EAAE,QAAQ,EAAE,uBAAY,EAAE,CAAC,CAAC;YAC1D,IAAI,CAAC,SAAS,CACV,kBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,WAAW,EAC7C,QAAQ,EACR,KAAK,CACR,CAAC;QACN,CAAC,CACJ,CAAC;QACF,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEO,eAAe;QACnB,IAAI,CAAC,gBAAgB,CACjB,kBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,cAAc,EAChD,CAAC,KAAU,EAAE,IAA2B;YACpC,MAAM,QAAQ,GAAG,wBAAY,CAAC,EAAE,OAAO,EAAE,qBAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAChE,IAAI,CAAC,SAAS,CACV,kBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,cAAc,EAChD,QAAQ,EACR,KAAK,CACR,CAAC;QACN,CAAC,CACJ,CAAC;QACF,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;AACL,CAAC;AACD;kBAAe,WAAW,CAAC","sourcesContent":["import ModuleEmitter from './event/ModuleEmitter';\nimport channels from '../channels';\nimport { mainResponse } from './event/responses';\nimport { LicencesList, getLicence } from './modules/models/Licenses';\nimport WebContents = Electron.WebContents;\n\nclass LicensesIPC extends ModuleEmitter {\n\n    constructor() {\n        super();\n        this.MODULE_NAME = 'licenses';\n        this.DEFAULT_MANAGED = ['getLicenceById'];\n    }\n\n    public initListeners(webContents: WebContents) {\n        this.webContents = webContents;\n        this\n            ._getLicenses()\n            ._getLicenceById()\n            ._manager();\n    }\n\n    private _getLicenses() {\n        this.registerListener(\n            channels.server[this.MODULE_NAME].getLicenses,\n            (event: any) => {\n                const response = mainResponse({ licenses: LicencesList });\n                this.fireEvent(\n                    channels.client[this.MODULE_NAME].getLicenses,\n                    response,\n                    event\n                );\n            }\n        );\n        return this;\n    }\n\n    private _getLicenceById() {\n        this.registerListener(\n            channels.server[this.MODULE_NAME].getLicenceById,\n            (event: any, data: {id: string | number}) => {\n                const response = mainResponse({ license: getLicence(data.id) });\n                this.fireEvent(\n                    channels.client[this.MODULE_NAME].getLicenceById,\n                    response,\n                    event\n                );\n            }\n        );\n        return this;\n    }\n}\nexport default LicensesIPC;\n"]}