{"version":3,"file":"get-entry-balance.js","sourceRoot":"","sources":["get-entry-balance.ts"],"names":[],"mappings":";AAAA,oCAAoC;AACpC,iDAAiE;AACjE,kEAA8D;AAM9D,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAU,IAAuB;IAC/D,MAAM,cAAc,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnF,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;IACnE,CAAC;IACD,MAAM,SAAS,GAAG,MAAM,8BAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;IAC7F,MAAM,OAAO,GAAG,8BAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAE7E,MAAM,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;AACnF,CAAC,CAAC,CAAC;;AAEH,kBAAe,EAAE,OAAO,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { constructed as contracts } from '../../contracts/index';\nimport { GethConnector } from '@akashaproject/geth-connector';\n\n/**\n * Get current balance of an entry\n * @type {Function}\n */\nconst execute = Promise.coroutine(function*(data: {entryId: string}) {\n    const balanceAddress = yield contracts.instance.entries.getEntryFund(data.entryId);\n    if (!balanceAddress) {\n        return { balance: 'claimed', unit: '', entryId: data.entryId };\n    }\n    const weiAmount = yield GethConnector.getInstance().web3.eth.getBalanceAsync(balanceAddress);\n    const balance = GethConnector.getInstance().web3.fromWei(weiAmount, 'ether');\n\n    return { balance: balance.toString(10), unit: 'ether', entryId: data.entryId };\n});\n\nexport default { execute, name: 'getEntryBalance' };\n"]}