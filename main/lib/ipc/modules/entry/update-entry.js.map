{"version":3,"file":"update-entry.js","sourceRoot":"","sources":["update-entry.ts"],"names":[],"mappings":";AAAA,wBAAqC,eAAe,CAAC,CAAA;AACrD,uBAAsB,QAAQ,CAAC,CAAA;AAC/B,MAAY,OAAO,WAAM,UAAU,CAAC,CAAA;AACpC,wBAAyC,uBAAuB,CAAC,CAAA;AAMjE,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,IAAwB;IACjE,MAAM,SAAS,GAAG,IAAI,cAAS,EAAE,CAAC;IAClC,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7D,MAAM,MAAM,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACjG,MAAM,EAAE,GAAG,MAAM,cAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9D,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;AAClB,CAAC,CAAC,CAAC;AAEH;kBAAe,EAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC","sourcesContent":["import { module as userModule } from '../auth/index';\nimport IpfsEntry from './ipfs';\nimport * as Promise from 'bluebird';\nimport { constructed as contracts } from '../../contracts/index';\n\n/**\n * Update ipfsHash for entry\n * @type {Function}\n */\nconst execute = Promise.coroutine(function* (data: EntryUpdateRequest) {\n    const ipfsEntry = new IpfsEntry();\n    const hash = yield ipfsEntry.create(data.content, data.tags);\n    const txData = yield contracts.instance.entries.updateEntryContent(hash, data.entryId, data.gas);\n    const tx = yield userModule.auth.signData(txData, data.token);\n    return { tx };\n});\n\nexport default {execute, name: 'update'};\n"]}