{"version":3,"file":"can-claim.js","sourceRoot":"","sources":["can-claim.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,iDAAiE;AAMjE,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAU,IAAwB;IAChE,MAAM,SAAS,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9E,MAAM,MAAM,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxE,MAAM,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;AACzE,CAAC,CAAC,CAAC;AAEH,kBAAe,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { constructed as contracts } from '../../contracts/index';\n\n/**\n * Check if can claim deposit from entry\n * @type {Function}\n */\nconst execute = Promise.coroutine(function*(data: { entryId: string}) {\n    const entryFund = yield contracts.instance.entries.getEntryFund(data.entryId);\n    const active = yield contracts.instance.entries.isMutable(data.entryId);\n    return { canClaim: !!(entryFund && !active), entryId: data.entryId };\n});\n\nexport default { execute, name: 'canClaim' };\n"]}