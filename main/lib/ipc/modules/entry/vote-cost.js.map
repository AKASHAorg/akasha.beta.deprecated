{"version":3,"file":"vote-cost.js","sourceRoot":"","sources":["vote-cost.ts"],"names":[],"mappings":";AAAA,MAAY,OAAO,WAAM,UAAU,CAAC,CAAA;AACpC,wBAAyC,uBAAuB,CAAC,CAAA;AAMjE,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAU,IAAuB;IAC/D,MAAM,IAAI,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrE,MAAM,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;AACzC,CAAC,CAAC,CAAC;AAEH;kBAAe,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { constructed as contracts } from '../../contracts/index';\n\n/**\n * Get cost value for vote weight\n * @type {Function}\n */\nconst execute = Promise.coroutine(function*(data: { weight: number}) {\n    const cost = yield contracts.instance.votes.getVoteCost(data.weight); // expressed in ethers\n    return { cost, weight: data.weight };\n});\n\nexport default { execute, name: 'voteCost' };\n"]}