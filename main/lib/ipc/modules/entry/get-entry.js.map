{"version":3,"file":"get-entry.js","sourceRoot":"","sources":["get-entry.ts"],"names":[],"mappings":";AAAA,MAAY,OAAO,WAAM,UAAU,CAAC,CAAA;AACpC,wBAAyC,uBAAuB,CAAC,CAAA;AACjE,uBAA8C,QAAQ,CAAC,CAAA;AACvD,2BAA0C,uBAAuB,CAAC,CAAA;AAMlE,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,IAAqB;IAC9D,MAAM,QAAQ,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzE,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,qBAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAE,MAAM,sBAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAChH,MAAM,CAAC,EAAE,CAAC,mBAAQ,CAAC,EAAE,0BAAe,CAAC,GAAG,CAAC,mBAAQ,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;AACnG,CAAC,CAAC,CAAC;AAEH;kBAAe,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAC,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { constructed as contracts } from '../../contracts/index';\nimport {getShortContent, getFullContent} from './ipfs';\nimport { generalSettings, BASE_URL } from '../../config/settings';\n\n/**\n * Fetch entry from entryId\n * @type {Function}\n */\nconst execute = Promise.coroutine(function* (data: EntryGetRequest) {\n    const entryEth = yield contracts.instance.entries.getEntry(data.entryId);\n    const content = (data.full) ? yield getFullContent(entryEth.ipfsHash): yield getShortContent(entryEth.ipfsHash);\n    return { [BASE_URL]: generalSettings.get(BASE_URL), content, entryEth, entryId: data.entryId };\n});\n\nexport default { execute, name: 'getEntry'};\n\n"]}