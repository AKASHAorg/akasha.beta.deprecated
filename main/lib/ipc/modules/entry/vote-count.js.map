{"version":3,"file":"vote-count.js","sourceRoot":"","sources":["vote-count.ts"],"names":[],"mappings":";AAAA,oCAAoC;AACpC,iDAAiE;AAMjE,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAU,IAAwB;IAChE,MAAM,KAAK,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzE,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;AAC5C,CAAC,CAAC,CAAC;;AAEH,kBAAe,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { constructed as contracts } from '../../contracts/index';\n\n/**\n * Get total number of votes for an entry\n * @type {Function}\n */\nconst execute = Promise.coroutine(function*(data: { entryId: string}) {\n    const count = yield contracts.instance.votes.getVotesCount(data.entryId);\n    return { count, entryId: data.entryId };\n});\n\nexport default { execute, name: 'voteCount' };\n"]}