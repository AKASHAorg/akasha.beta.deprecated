{"version":3,"file":"backup-keystore.js","sourceRoot":"","sources":["backup-keystore.ts"],"names":[],"mappings":";AAAA,oCAAoC;AACpC,kEAA8D;AAC9D,oDAAyD;AACzD,+BAA4B;AAC5B,2BAAuC;AACvC,uCAA+B;AAC/B,qCAAqC;AAErC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAU,IAAwB;IAChE,MAAM,OAAO,GAAG,MAAM,8BAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;IAC/E,MAAM,MAAM,GAAG,WAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAE1C,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAE,IAAI,CAAC,MAAM,GAAE,cAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IACvE,MAAM,MAAM,GAAG,WAAI,CAAC,SAAS,EAAE,2BAAgB,CAAC,CAAC;IAEjD,MAAM,MAAM,GAAG,sBAAiB,CAAC,MAAM,CAAC,CAAC;IACzC,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;IAEjD,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,GAAG;QAC5B,MAAM,GAAG,CAAC;IACd,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAErB,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACjC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAEnB,MAAM,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC1B,MAAM,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAA;AAC7B,CAAC,CAAC,CAAC;;AAEH,kBAAe,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { GethConnector } from '@akashaproject/geth-connector';\nimport { BACKUP_KEYS_NAME } from '../../config/settings';\nimport { join } from 'path';\nimport { createWriteStream } from 'fs';\nimport { app } from 'electron';\nimport * as archiver from 'archiver';\n\nconst execute = Promise.coroutine(function*(data:{ target?: string }) {\n    const dataDir = yield GethConnector.getInstance().web3.admin.getDatadirAsync();\n    const keyDir = join(dataDir, 'keystore/');\n\n    const downloads = (data.target)? data.target: app.getPath('downloads');\n    const target = join(downloads, BACKUP_KEYS_NAME);\n\n    const output = createWriteStream(target);\n    const archive = archiver('zip', { store: true });\n\n    archive.on('error', function(err) {\n        throw err;\n    });\n\n    archive.pipe(output);\n\n    archive.directory(keyDir, false);\n    archive.finalize();\n\n    yield Promise.delay(2000);\n    return { target: target }\n});\n\nexport default { execute, name: 'backupKeys' };\n"]}