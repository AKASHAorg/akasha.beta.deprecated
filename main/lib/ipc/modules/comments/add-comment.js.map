{"version":3,"file":"add-comment.js","sourceRoot":"","sources":["add-comment.ts"],"names":[],"mappings":";;AAAA,yCAAqD;AACrD,iCAAgC;AAChC,oCAAoC;AACpC,iDAAiE;AAMjE,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAU,IAAS;IACjD,MAAM,IAAI,GAAG,MAAM,aAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxC,MAAM,MAAM,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACpG,MAAM,EAAE,GAAG,MAAM,cAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9D,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;AAClB,CAAC,CAAC,CAAC;AAEH,kBAAe,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC","sourcesContent":["import { module as userModule } from '../auth/index';\nimport { create } from './ipfs';\nimport * as Promise from 'bluebird';\nimport { constructed as contracts } from '../../contracts/index';\n\n/**\n * Create a new comment\n * @type {Function}\n */\nconst execute = Promise.coroutine(function*(data: any) {\n    const hash = yield create(data.content);\n    const txData = yield contracts.instance.comments.comment(data.entryId, hash, data.gas, data.parent);\n    const tx = yield userModule.auth.signData(txData, data.token);\n    return { tx };\n});\n\nexport default { execute, name: 'comment' };\n"]}