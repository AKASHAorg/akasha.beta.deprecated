{"version":3,"file":"comments-count.js","sourceRoot":"","sources":["comments-count.ts"],"names":[],"mappings":";AAAA,MAAY,OAAO,WAAM,UAAU,CAAC,CAAA;AACpC,wBAAyC,uBAAuB,CAAC,CAAA;AAMjE,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,IAAwB;IACjE,MAAM,KAAK,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/E,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;AAC5C,CAAC,CAAC,CAAC;AAEH;kBAAe,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAC,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { constructed as contracts } from '../../contracts/index';\n\n/**\n * Get total number of comments for an entry\n * @type {Function}\n */\nconst execute = Promise.coroutine(function* (data: { entryId: string}) {\n    const count = yield contracts.instance.comments.getCommentsCount(data.entryId);\n    return { count, entryId: data.entryId };\n});\n\nexport default { execute, name: 'commentsCount'};\n"]}