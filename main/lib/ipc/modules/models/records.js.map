{"version":3,"file":"records.js","sourceRoot":"","sources":["records.ts"],"names":[],"mappings":";AAAA,iCAAkC;AAElC;IAOI;QALO,YAAO,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;QAC7C,gBAAW,GAAG,IAAI,CAAC;QACnB,iBAAY,GAAG,IAAI,CAAC;QAIxB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,UAAU,CAAC,UAAc;QACrB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAC3D,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,WAAW;QACP,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QAC1B,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,OAAO,CAAC,IAAI,EAAE,IAAI;QACd,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,OAAO,CAAC,IAAI;QACR,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,OAAO,CAAC,IAAI;QACR,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,QAAQ,CAAC,IAAI,EAAE,IAAI;QACf,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED,QAAQ,CAAC,IAAI;QACT,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,QAAQ,CAAC,IAAI;QACT,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,UAAU,CAAC,IAAI;QACX,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,WAAW,CAAC,IAAI;QACZ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,KAAK;QACD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,IAAI,OAAO;QACP,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;CAEJ;AACY,QAAA,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;AACxB,QAAA,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;AACzB,QAAA,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;AACzB,QAAA,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC;AACnC,aAAK,CAAC,UAAU,CAAC,EAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAAC,CAAC,CAAC","sourcesContent":["import LRU = require('lru-cache');\n\nclass Entries {\n\n    public options = { max: 64, maxAge: 1000 * 60 * 60 };\n    private FULL_PREFIX = 'F-';\n    private SHORT_PREFIX = 'S-';\n    private _entries;\n\n    constructor() {\n        this.loadOptions();\n    }\n\n    setOptions(newOptions: {}) {\n        this.options = Object.assign({}, this.options, newOptions);\n        return this;\n    }\n\n    loadOptions() {\n        if (this._entries) {\n            this._entries.reset();\n        }\n        this._entries = LRU(this.options);\n    }\n\n    setFull(hash, data) {\n        this._entries.set(`${this.FULL_PREFIX}${hash}`, data);\n    }\n\n    getFull(hash) {\n        return this._entries.get(`${this.FULL_PREFIX}${hash}`);\n    }\n\n    hasFull(hash) {\n        return this._entries.has(`${this.FULL_PREFIX}${hash}`);\n    }\n\n    setShort(hash, data) {\n        this._entries.set(`${this.SHORT_PREFIX}${hash}`, data);\n    }\n\n    getShort(hash) {\n        return this._entries.get(`${this.SHORT_PREFIX}${hash}`);\n    }\n\n    hasShort(hash) {\n        return this._entries.has(`${this.SHORT_PREFIX}${hash}`);\n    }\n\n    removeFull(hash) {\n        this._entries.del(`${this.FULL_PREFIX}${hash}`);\n    }\n\n    removeShort(hash) {\n        this._entries.del(`${this.SHORT_PREFIX}${hash}`);\n    }\n\n    flush() {\n        this._entries.reset();\n    }\n\n    get records() {\n        return this._entries;\n    }\n\n}\nexport const entries = new Entries();\nexport const profiles = new Entries();\nexport const comments = new Entries();\nexport const mixed = new Entries();\nmixed.setOptions({max: 256, maxAge: 1000 * 60 * 15});\n"]}