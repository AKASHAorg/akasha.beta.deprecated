{"version":3,"file":"feed.js","sourceRoot":"","sources":["feed.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Promise from 'bluebird';\nimport { constructed as contracts } from '../../contracts/index';\nimport { filter } from './set-filter';\nimport { GethConnector } from '@akashaproject/geth-connector';\nimport getProfileData from '../profile/profile-data';\nimport getEntry from '../entry/get-entry';\nimport currentProfile from '../registry/current-profile';\nimport resolveProfile from '../registry/resolve-ethaddress';\nimport queue from './queue';\n\nlet entries;\nlet comments;\nlet votes;\nlet following;\nlet tipping;\n\nconst eventTypes = {\n    VOTE: 'vote',\n    COMMENT: 'comment',\n    PUBLISH: 'publish',\n    FOLLOWING: 'following',\n    TIPPED: 'gotTipped'\n};\n\nconst VALUE_UNIT = 'ether';\nconst hydrateWithProfile = (cb, profile, entry, extra) => {\n    const batch = [];\n    batch.push(getProfileData.execute({ profile: profile }));\n    batch.push(getEntry.execute({ entryId: entry }));\n    Promise.all(batch)\n        .then((result) => {\n            queue.push(cb, Object.assign(extra, { author: result[0], entry: result[1] }));\n        })\n        .catch((error) => {\n            cb({ message: error.message }, extra)\n        });\n};\n/**\n * Get total number of your follows\n * @type {Function}\n */\nconst execute = Promise.coroutine(function*(data: { stop?: boolean }, cb) {\n    if (!contracts.instance) {\n        return { running: false };\n    }\n\n    if (data.stop && entries) {\n        entries.stopWatching(() => {\n            entries = null;\n        });\n        comments.stopWatching(() => {\n            comments = null;\n        });\n        votes.stopWatching(() => {\n            votes = null;\n        });\n        following.stopWatching(() => {\n            following = null;\n        });\n        tipping.stopWatching(() => {\n            tipping = null;\n        });\n        return { running: false };\n    }\n\n    if (entries) {\n        return { running: true, warn: true };\n    }\n\n    const filterBlock = { fromBlock: filter.getBlockNr(), toBlock: 'latest' };\n    const myProfile = yield currentProfile.execute();\n    const profileInstance = contracts.instance.profile.contract.at(myProfile.profileAddress);\n    entries = contracts.instance.entries.contract.Publish({}, filterBlock);\n    comments = contracts.instance.comments.contract.Commented({}, filterBlock);\n    votes = contracts.instance.votes.contract.Vote({}, filterBlock);\n    following = contracts.instance.feed.contract.Follow({ following: filter.getMyAddress() }, filterBlock);\n    tipping = profileInstance.Tip({}, filterBlock);\n\n    entries.watch((err, entry) => {\n        if (err) {\n            cb({ message: err.message, type: eventTypes.PUBLISH });\n        }\n        if (filter.hasAddress(entry.args.author)) {\n            hydrateWithProfile(\n                cb,\n                entry.args.author,\n                (entry.args.entryId).toString(),\n                {\n                    type: eventTypes.PUBLISH,\n                    profileAddress: entry.args.author,\n                    blockNumber: entry.blockNumber,\n                    tag: GethConnector.getInstance().web3.toUtf8(entry.args.tag)\n                }\n            );\n        }\n    });\n\n    comments.watch((err, comment) => {\n        if (err) {\n            cb({ message: err.message, type: eventTypes.COMMENT });\n        }\n        if (filter.hasAddress(comment.args.profile)) {\n\n            hydrateWithProfile(\n                cb,\n                comment.args.profile,\n                (comment.args.entryId).toString(),\n                {\n                    type: eventTypes.COMMENT,\n                    profileAddress: comment.args.profile,\n                    blockNumber: comment.blockNumber,\n                    commentId: (comment.args.commentId).toString()\n                }\n            );\n        }\n    });\n\n    votes.watch((err, vote) => {\n        if (err) {\n            cb({ message: err.message, type: eventTypes.VOTE });\n        }\n        if (filter.hasAddress(vote.args.profile)) {\n            hydrateWithProfile(\n                cb,\n                vote.args.profile,\n                (vote.args.entry).toString(),\n                {\n                    type: eventTypes.VOTE,\n                    profileAddress: vote.args.profile,\n                    blockNumber: vote.blockNumber,\n                    weight: (vote.args.weight).toNumber()\n                }\n            );\n        }\n    });\n\n    following.watch((err, event) => {\n        if (err) {\n            cb({ message: err.message, type: eventTypes.FOLLOWING });\n        }\n        getProfileData\n            .execute({ profile: event.args.follower })\n            .then((data) => {\n                queue.push(\n                    cb,\n                    {\n                        type: eventTypes.FOLLOWING,\n                        blockNumber: event.blockNumber,\n                        follower: data,\n                        profileAddress: event.args.following\n                    }\n                )\n            });\n    });\n\n    tipping.watch((err, event) => {\n        if (err) {\n            cb({ message: err.message, type: eventTypes.TIPPED });\n        }\n        resolveProfile\n            .execute({ ethAddress: event.args.from })\n            .then((profile) => {\n                const ethers = GethConnector.getInstance().web3.fromWei(event.args.value, VALUE_UNIT);\n                return getProfileData.execute({ profile: profile.profileAddress })\n                    .then((resolvedProfile) => {\n                        queue.push(\n                            cb,\n                            {\n                                profile: resolvedProfile,\n                                blockNumber: event.blockNumber,\n                                value: ethers.toString(10),\n                                unit: VALUE_UNIT,\n                                type: eventTypes.TIPPED\n                            }\n                        );\n                    });\n            })\n            .catch((e) => {\n                cb({ message: e.message, type: eventTypes.TIPPED });\n            });\n    });\n    return { running: true }\n});\n\nexport default { execute, name: 'feed' };\n"]}