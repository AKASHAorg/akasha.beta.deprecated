{"version":3,"file":"set-filter.js","sourceRoot":"","sources":["set-filter.ts"],"names":[],"mappings":";AAAA,MAAY,OAAO,WAAM,UAAU,CAAC,CAAA;AACpC,iCAA8B,+BAA+B,CAAC,CAAA;AAO9D,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAU,IAA6C;IACrF,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,GAAE,MAAM,8BAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC;IAChH,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;IACzE,MAAM,CAAC,EAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,gBAAgB,CAAC,EAAC,CAAC;AAC5D,CAAC,CAAC,CAAC;AAEH;kBAAe,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { GethConnector } from '@akashaproject/geth-connector';\n\n/**\n * Set which profiles to watch for changes\n * @param data\n * @returns {Bluebird<{done: boolean, watching: any}>}\n */\nconst execute = Promise.coroutine(function*(data: { profiles: string[], blockNr?: number} ) {\n    const blockNr = (data.blockNr) ? data.blockNr: yield GethConnector.getInstance().web3.eth.getBlockNumberAsync();\n    global['profilesFilter'] = { profiles: data.profiles, blockNr: blockNr };\n    return {done: true, watching: global['profilesFilter']};\n});\n\nexport default { execute, name: 'setFilter' };\n"]}