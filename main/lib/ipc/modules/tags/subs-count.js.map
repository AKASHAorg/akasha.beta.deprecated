{"version":3,"file":"subs-count.js","sourceRoot":"","sources":["subs-count.ts"],"names":[],"mappings":";AAAA,MAAY,OAAO,WAAM,UAAU,CAAC,CAAA;AACpC,wBAAyC,uBAAuB,CAAC,CAAA;AAMjE,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,IAA8B;IACvE,MAAM,KAAK,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC3E,MAAM,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC;AAC1D,CAAC,CAAC,CAAC;AAEH;kBAAe,EAAC,OAAO,EAAE,IAAI,EAAE,WAAW,EAAC,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { constructed as contracts } from '../../contracts/index';\n\n/**\n * Get subscription size for a profile address\n * @type {Function}\n */\nconst execute = Promise.coroutine(function* (data: {profileAddress: string}) {\n    const count = yield contracts.instance.feed.subsCount(data.profileAddress);\n    return { count, profileAddress: data.profileAddress };\n});\n\nexport default {execute, name: 'subsCount'};\n"]}