{"version":3,"file":"create-tag.js","sourceRoot":"","sources":["create-tag.ts"],"names":[],"mappings":";AAAA,wBAAqC,eAAe,CAAC,CAAA;AAErD,MAAY,OAAO,WAAM,UAAU,CAAC,CAAA;AACpC,wBAAyC,uBAAuB,CAAC,CAAA;AAMjE,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,IAAsB;IAC/D,MAAM,MAAM,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACzE,MAAM,EAAE,GAAG,MAAM,cAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9D,MAAM,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;AACzC,CAAC,CAAC,CAAC;AAEH;kBAAe,EAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC","sourcesContent":["import { module as userModule } from '../auth/index';\nimport { create } from '../profile/ipfs';\nimport * as Promise from 'bluebird';\nimport { constructed as contracts } from '../../contracts/index';\n\n/**\n * Create a new Tag\n * @type {Function}\n */\nconst execute = Promise.coroutine(function* (data: TagCreateRequest) {\n    const txData = yield contracts.instance.tags.add(data.tagName, data.gas);\n    const tx = yield userModule.auth.signData(txData, data.token);\n    return { tx, tagName: data.tagName };\n});\n\nexport default {execute, name: 'create'};\n"]}