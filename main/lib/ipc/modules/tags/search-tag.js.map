{"version":3,"file":"search-tag.js","sourceRoot":"","sources":["search-tag.ts"],"names":[],"mappings":";AAAA,MAAY,OAAO,WAAM,UAAU,CAAC,CAAA;AACpC,wBAAyC,uBAAuB,CAAC,CAAA;AAMjE,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAU,IAAuC;IAC/E,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACnB,CAAC;IACD,IAAI,SAAS,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC5D,IAAI,WAAW,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IACtE,MAAM,OAAO,GAAG,EAAE,CAAC;IACnB,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACrC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC9B,CAAC;IACD,OAAO,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACjC,SAAS,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAChE,EAAE,CAAC,CAAC,SAAS,KAAK,GAAG,CAAC,CAAC,CAAC;YACpB,KAAK,CAAC;QACV,CAAC;QACD,IAAI,WAAW,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACtE,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACrC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,CAAC;IACL,CAAC;IACD,MAAM,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;AAC1D,CAAC,CAAC,CAAC;AAEH;kBAAe,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { constructed as contracts } from '../../contracts/index';\n\n/**\n * Search a tag\n * @type {Function}\n */\nconst execute = Promise.coroutine(function*(data: {tagName: string, limit?: number}) {\n    if (!data.limit) {\n        data.limit = 1;\n    }\n    let currentId = yield contracts.instance.tags.getFirstTag();\n    let currentName = yield contracts.instance.tags.getTagName(currentId);\n    const results = [];\n    if (currentName.includes(data.tagName)) {\n        results.push(currentName);\n    }\n    while (results.length < data.limit) {\n        currentId = yield contracts.instance.tags.getNextTag(currentId);\n        if (currentId === '0') {\n            break;\n        }\n        let currentName = yield contracts.instance.tags.getTagName(currentId);\n        if (currentName.includes(data.tagName)) {\n            results.push(currentName);\n        }\n    }\n    return { collection: results, tagName: data.tagName };\n});\n\nexport default { execute, name: 'searchTag' };\n"]}