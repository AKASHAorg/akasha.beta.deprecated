{"version":3,"file":"profile-data.js","sourceRoot":"","sources":["profile-data.ts"],"names":[],"mappings":";AAAA,oCAAoC;AACpC,iDAAiE;AACjE,iCAAyD;AACzD,oDAAmG;AACnG,uDAA+C;AAC/C,uDAA+C;AAC/C,sEAA6D;AAC7D,mDAA2C;AAO3C,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAU,IAAwB;IAChE,MAAM,QAAQ,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACxE,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,MAAM,qBAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC;aAC7C,OAAO,CAAC,yBAAc,CAAC;aACvB,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC;;YAEtC,MAAM,sBAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC;iBAC9C,OAAO,CAAC,0BAAe,CAAC;iBACxB,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;IAE3C,MAAM,QAAQ,GAAG,MAAM,mBAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtE,MAAM,OAAO,GAAG,MAAM,yBAAc,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;IAC3D,MAAM,OAAO,GAAG,MAAM,yBAAc,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;IAC3D,MAAM,YAAY,GAAG,MAAM,6BAAiB,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;IACnE,MAAM,kBAAkB,GAAG,MAAM,oBAAS,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;IACjE,MAAM,CAAC,MAAM,CAAC,MAAM,CAChB;QACI,QAAQ,EAAE,QAAQ;QAClB,cAAc,EAAE,OAAO,CAAC,KAAK;QAC7B,cAAc,EAAE,OAAO,CAAC,KAAK;QAC7B,YAAY,EAAE,YAAY,CAAC,KAAK;QAChC,kBAAkB,EAAE,kBAAkB,CAAC,KAAK;QAC5C,CAAC,mBAAQ,CAAC,EAAE,0BAAe,CAAC,GAAG,CAAC,mBAAQ,CAAC;QACzC,OAAO,EAAE,IAAI,CAAC,OAAO;KACxB,EACD,OAAO,CAAC,CAAC;AAEjB,CAAC,CAAC,CAAC;;AAEH,kBAAe,EAAE,OAAO,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { constructed as contracts } from '../../contracts/index';\nimport { resolveProfile, getShortProfile } from './ipfs';\nimport { generalSettings, BASE_URL, SHORT_WAIT_TIME, FULL_WAIT_TIME } from '../../config/settings';\nimport followingCount from './following-count';\nimport followersCount from './followers-count';\nimport entryCountProfile from '../entry/entry-count-profile';\nimport subsCount from '../tags/subs-count';\n\n\n/**\n * Get profile data for an akasha profile address\n * @type {Function}\n */\nconst execute = Promise.coroutine(function*(data: ProfileDataRequest) {\n    const ipfsHash = yield contracts.instance.profile.getIpfs(data.profile);\n    const profile = (data.full) ?\n        yield resolveProfile(ipfsHash, data.resolveImages)\n            .timeout(FULL_WAIT_TIME)\n            .then((d) => d).catch((e) => null)\n        :\n        yield getShortProfile(ipfsHash, data.resolveImages)\n            .timeout(SHORT_WAIT_TIME)\n            .then((d) => d).catch((e) => null);\n\n    const akashaId = yield contracts.instance.profile.getId(data.profile);\n    const foCount = yield followingCount.execute({ akashaId });\n    const fwCount = yield followersCount.execute({ akashaId });\n    const entriesCount = yield entryCountProfile.execute({ akashaId });\n    const subscriptionsCount = yield subsCount.execute({ akashaId });\n    return Object.assign(\n        {\n            akashaId: akashaId,\n            followingCount: foCount.count,\n            followersCount: fwCount.count,\n            entriesCount: entriesCount.count,\n            subscriptionsCount: subscriptionsCount.count,\n            [BASE_URL]: generalSettings.get(BASE_URL),\n            profile: data.profile\n        },\n        profile);\n\n});\n\nexport default { execute, name: 'getProfileData' };\n"]}