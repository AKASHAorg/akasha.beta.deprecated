{"version":3,"file":"current-balance.js","sourceRoot":"","sources":["current-balance.ts"],"names":[],"mappings":";AAAA,oCAAoC;AACpC,kEAA8D;AAM9D,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAU,IAAoB;IAC5D,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,8BAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC;IAC1G,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;IAC/C,MAAM,SAAS,GAAG,MAAM,8BAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IACxF,MAAM,OAAO,GAAG,8BAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC1E,MAAM,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;AAC9D,CAAC,CAAC,CAAC;;AAEH,kBAAe,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { GethConnector } from '@akashaproject/geth-connector';\n\n/**\n * Get eth balance converted to specified unit\n * @type {Function}\n */\nconst execute = Promise.coroutine(function*(data: BalanceRequest) {\n    const etherBase = (data.etherBase) ? data.etherBase : GethConnector.getInstance().web3.eth.defaultAccount;\n    const unit = (data.unit) ? data.unit : 'ether';\n    const weiAmount = yield GethConnector.getInstance().web3.eth.getBalanceAsync(etherBase);\n    const balance = GethConnector.getInstance().web3.fromWei(weiAmount, unit);\n    return { balance: balance.toString(10), unit, etherBase };\n});\n\nexport default { execute, name: 'getBalance' };\n"]}