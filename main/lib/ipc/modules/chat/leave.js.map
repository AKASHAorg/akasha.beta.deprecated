{"version":3,"file":"leave.js","sourceRoot":"","sources":["leave.ts"],"names":[],"mappings":";AAAA,2BAAqB,YAAY,CAAC,CAAA;AAClC,MAAY,OAAO,WAAM,UAAU,CAAC,CAAA;AACpC,iCAA8B,+BAA+B,CAAC,CAAA;AAE9D,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,WAAU,IAA4B;IACpE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QAC1C,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;IACvD,CAAC;IAED,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI;QACvB,kBAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,8BAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,kBAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AAC1E,CAAC,CAAC,CAAC;AAEH;kBAAe,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC","sourcesContent":["import settings from './settings';\nimport * as Promise from 'bluebird';\nimport { GethConnector } from '@akashaproject/geth-connector';\n\nconst execute = Promise.coroutine(function*(data: { channels: string[] }) {\n    if (!data.channels || !data.channels.length) {\n        throw new Error('Must provide at least a channel');\n    }\n\n    data.channels.forEach((chan) => {\n        settings.TOPICS.delete(GethConnector.getInstance().web3.fromUtf8(chan));\n    });\n\n    return { channels: data.channels, numChannels: settings.TOPICS.size };\n});\n\nexport default { execute, name: 'leave' };\n"]}