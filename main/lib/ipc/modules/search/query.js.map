{"version":3,"file":"query.js","sourceRoot":"","sources":["query.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Promise from 'bluebird';\nimport { GethConnector } from '@akashaproject/geth-connector';\nimport { whisperIdentity } from '../chat/post';\nimport { SEARCH_REQUEST, SEARCH_PROVIDER, generalSettings } from '../../config/settings';\nimport getEntry from '../entry/get-entry';\nimport { slice } from 'ramda';\nimport { mixed } from '../models/records';\n\n\nconst execute = Promise.coroutine(function*(data: { text: string, pageSize: number, offset: number }) {\n    let results;\n    let cached;\n    if (mixed.hasShort(data.text)) {\n        cached = mixed.getShort(data.text);\n        results = slice(data.offset, data.pageSize + data.offset, cached.results).map((entryId) => {\n            return getEntry.execute({ entryId });\n        });\n    } else {\n        const requestPayLoad = GethConnector.getInstance().web3.fromUtf8(JSON.stringify(data));\n        if (!whisperIdentity.from) {\n            whisperIdentity.from = yield GethConnector.getInstance().web3.shh.newIdentityAsync();\n        }\n        const ttl = \"0x5\";\n        const to = generalSettings.get(SEARCH_PROVIDER);\n\n        if (!to) {\n            throw new Error(\"Must run handshake first.\");\n        }\n\n        const request = yield GethConnector.getInstance().web3\n            .shh\n            .postAsync({\n                from: whisperIdentity.from,\n                topics: [SEARCH_REQUEST],\n                to: to,\n                payload: requestPayLoad,\n                ttl: ttl\n            });\n\n        if (!request) {\n            throw new Error(\"Could not send search request.\");\n        }\n        const response = yield Promise.delay(5000).then(() => {\n            return Promise.fromCallback(\n                (cb) => {\n                    GethConnector.getInstance()\n                        .web3\n                        .shh\n                        .filter({ topics: [requestPayLoad], to: whisperIdentity.from })\n                        .get(cb)\n                })\n        });\n\n        if (!response.length) {\n            throw new Error('Search service timed out.');\n        }\n        let jsonResponse;\n        try {\n            jsonResponse = JSON.parse(GethConnector.getInstance().web3.toUtf8(response[0].payload));\n        } catch (err) {\n            jsonResponse = null;\n        }\n\n        if (!jsonResponse || !jsonResponse.entries) {\n            throw new Error('Invalid response from search service.')\n        }\n        console.log(jsonResponse.entries);\n\n        cached = {\n            text: data.text,\n            total: jsonResponse.count,\n            results: Array.from(jsonResponse.entries)\n        };\n\n        mixed.setShort(data.text, cached);\n        jsonResponse = null;\n        results = slice(0, data.pageSize, cached.results).map((entryId) => {\n            return getEntry.execute({ entryId });\n        });\n    }\n    const collection = yield Promise.all(results);\n    return { collection, total: cached.total, from: data };\n});\n\nexport default { execute, name: 'query' };\n"]}