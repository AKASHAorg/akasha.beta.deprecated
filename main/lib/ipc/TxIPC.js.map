{"version":3,"file":"TxIPC.js","sourceRoot":"","sources":["TxIPC.ts"],"names":[],"mappings":";AAAA,iCAAqD,+BAA+B,CAAC,CAAA;AACrF,gCAA0B,uBAAuB,CAAC,CAAA;AAClD,2BAAqB,aAAa,CAAC,CAAA;AACnC,4BAA6B,mBAAmB,CAAC,CAAA;AAGjD,oBAAoB,uBAAa;IAC7B;QACI,OAAO,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;IACvD,CAAC;IAED,aAAa,CAAC,WAAwB;QAClC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,WAAW,EAAE;aACb,YAAY,EAAE;aACd,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,cAAc;QACV,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEO,WAAW;QACf,IAAI,CAAC,gBAAgB,CACjB,kBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,UAAU,EAC5C,CAAC,KAAU,EAAE,IAAuB;YAChC,2BAAU,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,CACV,kBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,UAAU,EAC5C,wBAAY,CAAC,EAAE,QAAQ,EAAE,2BAAU,CAAC,QAAQ,EAAE,CAAC,CAClD,CAAC;QACN,CAAC,CAAC,CAAC;QACP,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEO,YAAY;QAChB,IAAI,CAAC,gBAAgB,CACjB,kBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,EAC3C,CAAC,KAAU,EAAE,IAAsB;YAC/B,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,2BAAU,CAAC,YAAY,EAAE,GAAG,2BAAU,CAAC,WAAW,EAAE,CAAC;YACpE,IAAI,CAAC,SAAS,CACV,kBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,EAC3C,wBAAY,CAAC,EAAE,QAAQ,EAAE,2BAAU,CAAC,QAAQ,EAAE,CAAC,CAClD,CAAC;QACN,CAAC,CAAC,CAAC;QACP,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEO,UAAU;QACd,8BAAa,CAAC,WAAW,EAAE,CAAC,EAAE,CAC1B,0BAAS,CAAC,QAAQ,EAClB,CAAC,MAAc;YACX,IAAI,CAAC,SAAS,CACV,kBAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,EAC3C,wBAAY,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,2BAAU,CAAC,QAAQ,EAAE,CAAC,CACjE,CAAC;QACN,CAAC,CACJ,CAAC;IACN,CAAC;AACL,CAAC;AAED;kBAAe,KAAK,CAAC","sourcesContent":["import { gethHelper, CONSTANTS, GethConnector } from '@akashaproject/geth-connector';\nimport ModuleEmitter from './event/ModuleEmitter';\nimport channels from '../channels';\nimport { mainResponse } from './event/responses';\nimport WebContents = Electron.WebContents;\n\nclass TxIPC extends ModuleEmitter {\n    constructor() {\n        super();\n        this.MODULE_NAME = 'tx';\n        this.DEFAULT_MANAGED = ['addToQueue', 'emitMined'];\n    }\n\n    initListeners(webContents: WebContents) {\n        this.webContents = webContents;\n        this._addToQueue()\n            ._listenMined()\n            ._manager();\n    }\n\n    attachEmitters() {\n        this._emitMined();\n        return true;\n    }\n\n    private _addToQueue() {\n        this.registerListener(\n            channels.server[this.MODULE_NAME].addToQueue,\n            (event: any, data: AddToQueueRequest) => {\n                gethHelper.addTxToWatch(data.tx);\n                this.fireEvent(\n                    channels.client[this.MODULE_NAME].addToQueue,\n                    mainResponse({ watching: gethHelper.watching })\n                );\n            });\n        return this;\n    }\n\n    private _listenMined() {\n        this.registerListener(\n            channels.server[this.MODULE_NAME].emitMined,\n            (event: any, data: EmitMinedRequest) => {\n                (data.watch) ? gethHelper.startTxWatch() : gethHelper.stopTxWatch();\n                this.fireEvent(\n                    channels.client[this.MODULE_NAME].emitMined,\n                    mainResponse({ watching: gethHelper.watching })\n                );\n            });\n        return this;\n    }\n\n    private _emitMined() {\n        GethConnector.getInstance().on(\n            CONSTANTS.TX_MINED,\n            (txHash: string) => {\n                this.fireEvent(\n                    channels.client[this.MODULE_NAME].emitMined,\n                    mainResponse({ mined: txHash, watching: gethHelper.watching })\n                );\n            }\n        );\n    }\n}\n\nexport default TxIPC;\n"]}