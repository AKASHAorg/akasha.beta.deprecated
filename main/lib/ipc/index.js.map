{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;AAAA,8CAAmD;AACnD,uCAAgC;AAChC,uCAAgC;AAChC,uCAAgC;AAChC,qCAA8B;AAC9B,mCAA4B;AAC5B,+CAAwC;AACxC,6CAAsC;AACtC,uCAAgC;AAChC,yCAAkC;AAClC,+CAAwC;AACxC,+CAAwC;AACxC,yDAAkD;AAClD,uCAAgC;AAChC,2CAAoC;AACpC,yCAAkC;AAIlC;IACI,MAAM,MAAM,GAAG,gBAAM,CAAC,WAAW,EAAE,CAAC;IACpC,MAAM,WAAW,GAAU;QACvB,IAAI,iBAAO,EAAE;QACb,IAAI,iBAAO,EAAE;QACb,IAAI,iBAAO,EAAE;QACb,IAAI,eAAK,EAAE;QACX,IAAI,qBAAW,EAAE;QACjB,IAAI,oBAAU,EAAE;QAChB,IAAI,iBAAO,EAAE;QACb,IAAI,kBAAQ,EAAE;QACd,IAAI,qBAAW,EAAE;QACjB,IAAI,qBAAW,EAAE;QACjB,IAAI,0BAAgB,EAAE;QACtB,IAAI,iBAAO,EAAE;QACb,IAAI,mBAAS,EAAE;QACf,IAAI,kBAAQ,EAAE;KACjB,CAAC;IACF,MAAM,CAAC;QACH,aAAa,EAAE,CAAC,WAAwB;YACpC,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC;YACxD,WAAW,CAAC,OAAO,CAAC,CAAC,GAAQ;gBACzB,GAAG,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;YACH,yBAAe,CAAC,CAAC,UAAU;gBACnB,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBACb,CAAC,gBAAM,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACjE,CAAC;YACT,CAAC,CAAC,CAAC;QACP,CAAC;QACD,MAAM;QACN,QAAQ,EAAE;YACN,WAAW,CAAC,OAAO,CAAC,CAAC,GAAQ;gBACzB,GAAG,CAAC,iBAAiB,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;QACP,CAAC;KACJ,CAAC;AACN,CAAC;AArCD,kCAqCC","sourcesContent":["import { checkForGenesis } from './config/genesis';\nimport GethIPC from './GethIPC';\nimport IpfsIPC from './IpfsIPC';\nimport AuthIPC from './AuthIPC';\nimport Logger from './Logger';\nimport TxIPC from './TxIPC';\nimport RegistryIPC from './RegistryIPC';\nimport ProfileIPC from './ProfileIPC';\nimport TagsIPC from './TagsIPC';\nimport EntryIPC from './EntryIPC';\nimport CommentsIPC from './CommentsIPC';\nimport LicensesIPC from './LicensesIPC';\nimport NotificationsIPC from './NotificationsIPC';\nimport ChatIPC from './ChatIPC';\nimport SearchIPC from './SearchIPC';\nimport UtilsIPC from './UtilsIPC';\n\nimport WebContents = Electron.WebContents;\n\nexport function initModules() {\n    const logger = Logger.getInstance();\n    const ipcChannels: any[] = [\n        new GethIPC(),\n        new IpfsIPC(),\n        new AuthIPC(),\n        new TxIPC(),\n        new RegistryIPC(),\n        new ProfileIPC(),\n        new TagsIPC(),\n        new EntryIPC(),\n        new CommentsIPC(),\n        new LicensesIPC(),\n        new NotificationsIPC(),\n        new ChatIPC(),\n        new SearchIPC(),\n        new UtilsIPC()\n    ];\n    return {\n        initListeners: (webContents: WebContents) => {\n            logger.registerLogger('akasha', { maxsize: 50 * 1024 });\n            ipcChannels.forEach((obj: any) => {\n                obj.initListeners(webContents);\n            });\n            checkForGenesis((errGenesis) => {\n                    if (errGenesis) {\n                        (Logger.getInstance().getLogger('akasha')).error(errGenesis);\n                    }\n            });\n        },\n        logger,\n        flushAll: () => {\n            ipcChannels.forEach((obj: any) => {\n                obj.purgeAllListeners();\n            });\n        }\n    };\n}\n\n"]}