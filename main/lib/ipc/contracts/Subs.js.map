{"version":3,"file":"Subs.js","sourceRoot":"","sources":["Subs.ts"],"names":[],"mappings":"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","sourcesContent":["import BaseContract from './BaseContract';\nimport * as Promise from 'bluebird';\n\nexport default class Subs extends BaseContract {\n    constructor(instance: any) {\n        super();\n        this.contract = instance;\n        this.contract.subsCount.callAsync = Promise.promisify(this.contract.subsCount.call);\n        this.contract.subsFirst.callAsync = Promise.promisify(this.contract.subsFirst.call);\n        this.contract.subsLast.callAsync = Promise.promisify(this.contract.subsLast.call);\n        this.contract.subsNext.callAsync = Promise.promisify(this.contract.subsNext.call);\n        this.contract.subsPrev.callAsync = Promise.promisify(this.contract.subsPrev.call);\n        this.contract.isSubscribed.callAsync = Promise.promisify(this.contract.isSubscribed.call);\n    }\n\n\n    public subscribe(tagName: string, gas: number = 2000000) {\n        if (!tagName) {\n            throw new Error('No tag provided');\n        }\n        const tagNameTr = this.gethInstance.web3.fromUtf8(tagName);\n        return this.evaluateData('subscribe', gas, tagNameTr);\n    }\n\n    public unSubscribe(tagName: string, gas: number = 2000000) {\n        if (!tagName) {\n            throw new Error('No tag provided');\n        }\n        const tagNameTr = this.gethInstance.web3.fromUtf8(tagName);\n        return this.evaluateData('unSubscribe', gas, tagNameTr);\n    }\n\n    public subsCount(id: string) {\n        const idTr = this.gethInstance.web3.fromUtf8(id);\n        return this.contract.subsCount.callAsync(idTr).then((result) => result.toString());\n    }\n\n    public subsFirst(id: string) {\n        const idTr = this.gethInstance.web3.fromUtf8(id);\n        return this.contract.subsFirst.callAsync(idTr).then((result) => result.toString());\n    }\n\n    public subsLast(id: string) {\n        const idTr = this.gethInstance.web3.fromUtf8(id);\n        return this.contract.subsLast.callAsync(idTr).then((result) => result.toString());\n    }\n\n    public subsNext(id: string, tagId: string) {\n        const idTr = this.gethInstance.web3.fromUtf8(id);\n        return this.contract.subsNext.callAsync(idTr, tagId).then((result) => result.toString());\n    }\n\n    public subsPrev(id: string, tagId: string) {\n        const idTr = this.gethInstance.web3.fromUtf8(id);\n        return this.contract.subsPrev.callAsync(idTr, tagId).then((result) => result.toString());\n    }\n\n    public isSubscribed(id: string, tagName: string) {\n        const idTr = this.gethInstance.web3.fromUtf8(id);\n        return this.contract.isSubscribed.callAsync(idTr, tagName);\n    }\n}\n"]}