{"version":3,"file":"Entries.js","sourceRoot":"","sources":["Entries.ts"],"names":[],"mappings":"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","sourcesContent":["import BaseContract from './BaseContract';\nimport * as Promise from 'bluebird';\n\nexport default class Entries extends BaseContract {\n    /**\n     *\n     * @param instance\n     */\n    constructor(instance: any) {\n        super();\n        this.contract = instance;\n        this.contract.getProfileEntriesCount.callAsync = Promise.promisify(this.contract.getProfileEntriesCount.call);\n        this.contract.getProfileEntryFirst.callAsync = Promise.promisify(this.contract.getProfileEntryFirst.call);\n        this.contract.getProfileEntryLast.callAsync = Promise.promisify(this.contract.getProfileEntryLast.call);\n        this.contract.getProfileEntryNext.callAsync = Promise.promisify(this.contract.getProfileEntryNext.call);\n        this.contract.getProfileEntryPrev.callAsync = Promise.promisify(this.contract.getProfileEntryPrev.call);\n        this.contract.getTagEntriesCount.callAsync = Promise.promisify(this.contract.getTagEntriesCount.call);\n        this.contract.getTagEntryFirst.callAsync = Promise.promisify(this.contract.getTagEntryFirst.call);\n        this.contract.getTagEntryLast.callAsync = Promise.promisify(this.contract.getTagEntryLast.call);\n        this.contract.getTagEntryNext.callAsync = Promise.promisify(this.contract.getTagEntryNext.call);\n        this.contract.getTagEntryPrev.callAsync = Promise.promisify(this.contract.getTagEntryPrev.call);\n        this.contract.isEditable.callAsync = Promise.promisify(this.contract.isEditable.call);\n        this.contract.getEntry.callAsync = Promise.promisify(this.contract.getEntry.call);\n        this.contract.getEntryFund.callAsync = Promise.promisify(this.contract.getEntryFund.call);\n        this.contract.entryExists.callAsync = Promise.promisify(this.contract.entryExists.call);\n    }\n\n    public publish(hash: string, tags: string[], gas: number = 3000000) {\n        const hashTr = this.splitIpfs(hash);\n        return this.evaluateData('publish', gas, hashTr, tags);\n    }\n\n    /**\n     *\n     * @param hash\n     * @param entryId\n     * @param gas\n     * @returns {Bluebird<U>}\n     */\n    public updateEntryContent(hash: string, entryId: string|number, gas: number = 2000000) {\n        const hashTr = this.splitIpfs(hash);\n        return this.evaluateData('updateEntryContent', gas, hashTr, entryId);\n    }\n\n    /**\n     *\n     * @param entryId\n     * @param gas\n     * @returns {Bluebird<U>}\n     */\n    public claimDeposit(entryId: string|number, gas: number = 2000000) {\n        return this.evaluateData('claimDeposit', gas, entryId);\n    }\n\n    /**\n     *\n     * @param profileAddress\n     * @returns {any}\n     */\n    public getProfileEntriesCount(profileAddress: string){\n        return this.contract\n            .getProfileEntriesCount\n            .callAsync(profileAddress).then((result) => result.toNumber());\n    }\n\n    /**\n     *\n     * @param profileAddress\n     * @returns {any}\n     */\n    public getProfileEntryFirst(profileAddress: string) {\n        return this.contract\n            .getProfileEntryFirst\n            .callAsync(profileAddress).then((result) => result.toString());\n    }\n\n    /**\n     *\n     * @param profileAddress\n     * @returns {any}\n     */\n    public getProfileEntryLast(profileAddress: string) {\n        return this.contract\n            .getProfileEntryLast\n            .callAsync(profileAddress).then((result) => result.toString());\n    }\n\n    /**\n     *\n     * @param profileAddress\n     * @param entryId\n     * @returns {any}\n     */\n    public getProfileEntryNext(profileAddress: string, entryId: string) {\n        return this.contract\n            .getProfileEntryNext\n            .callAsync(profileAddress, entryId).then((result) => result.toString());\n    }\n\n    /**\n     *\n     * @param profileAddress\n     * @param entryId\n     * @returns {any}\n     */\n    public getProfileEntryPrev(profileAddress: string, entryId: string) {\n        return this.contract\n            .getProfileEntryPrev\n            .callAsync(profileAddress, entryId).then((result) => result.toString());\n    }\n\n    /**\n     *\n     * @param tagName\n     * @returns {any}\n     */\n    public getTagEntriesCount(tagName: string) {\n        return this.contract\n            .getTagEntriesCount\n            .callAsync(tagName).then((result) => result.toNumber());\n    }\n\n    /**\n     *\n     * @param tagName\n     * @returns {any}\n     */\n    public getTagEntryFirst(tagName: string) {\n        return this.contract\n            .getTagEntryFirst\n            .callAsync(tagName).then((result) => result.toString());\n    }\n\n    /**\n     *\n     * @param tagName\n     * @returns {any}\n     */\n    public getTagEntryLast(tagName: string) {\n        return this.contract\n            .getTagEntryLast\n            .callAsync(tagName).then((result) => result.toString());\n    }\n\n    /**\n     *\n     * @param tagName\n     * @param entryId\n     * @returns {any}\n     */\n    public getTagEntryNext(tagName: string, entryId: string) {\n        return this.contract\n            .getTagEntryNext\n            .callAsync(tagName, entryId).then((result) => result.toString());\n    }\n\n    /**\n     *\n     * @param tagName\n     * @param entryId\n     * @returns {any}\n     */\n    public getTagEntryPrev(tagName: string, entryId: string) {\n        return this.contract\n            .getTagEntryPrev\n            .callAsync(tagName, entryId).then((result) => result.toString());\n    }\n\n    /**\n     *\n     * @param entryId\n     * @returns {any}\n     */\n    public isMutable(entryId: string) {\n        return this.contract\n            .isEditable\n            .callAsync(entryId).then((result) => result);\n    }\n\n    /**\n     *\n     * @param entryId\n     * @returns {any}\n     */\n    public getEntry(entryId: string) {\n        return this.contract\n            .getEntry\n            .callAsync(entryId).then((result) => {\n                return {\n                    blockNr: result.blockNr.toNumber(),\n                    publisher: result.publisher,\n                    ipfsHash: this.flattenIpfs(result.ipfsHash)\n                }\n            });\n    }\n\n    /**\n     *\n     * @param entryId\n     * @returns {any}\n     */\n    public getEntryFund(entryId: string) {\n        return this.contract\n            .getEntryFund\n            .callAsync(entryId).then((result) => result);\n    }\n\n    /**\n     *\n     * @param entryId\n     * @returns {any}\n     */\n    public entryExists(entryId: string) {\n        return this.contract\n            .entryExists\n            .callAsync(entryId).then((result) => result);\n    }\n\n}\n"]}