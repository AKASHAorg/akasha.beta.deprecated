{"version":3,"file":"Tags.js","sourceRoot":"","sources":["Tags.ts"],"names":[],"mappings":";AAAA,MAAY,OAAO,WAAM,UAAU,CAAC,CAAA;AACpC,+BAAyB,gBAAgB,CAAC,CAAA;AAE1C,mBAAkC,sBAAY;IAE1C,YAAY,QAAa;QACrB,OAAO,CAAC;QACR,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC9E,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACtF,CAAC;IAED,GAAG,CAAC,GAAW,EAAE,GAAY;QACzB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,QAAQ;aACf,MAAM;aACN,SAAS,CAAC,KAAK,CAAC;aAChB,IAAI,CAAC,CAAC,KAAc;YACjB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACR,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;YAC1C,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,QAAQ;iBACf,QAAQ,CAAC,GAAG,EAAE,EAAC,KAAA,GAAG,EAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACX,CAAC;AAEL,CAAC;AAxBD;sBAwBC,CAAA","sourcesContent":["import * as Promise from 'bluebird';\nimport BaseContract from './BaseContract';\n\nexport default class Tags extends BaseContract {\n\n    constructor(instance: any) {\n        super();\n        this.contract = Promise.promisifyAll(instance);\n        this.contract.exists.callAsync = Promise.promisify(this.contract.exists.call);\n        this.contract.getTagAt.callAsync = Promise.promisify(this.contract.getTagAt.call);\n        this.contract.getTagId.callAsync = Promise.promisify(this.contract.getTagId.call);\n    }\n\n    add(tag: string, gas?: number) {\n        const tagTr = this.gethInstance.web3.fromUtf8(tag);\n        return this.contract\n            .exists\n            .callAsync(tagTr)\n            .then((found: boolean) => {\n                if (found) {\n                    throw new Error('Tag already exists');\n                }\n                return this.contract\n                    .addAsync(tag, {gas});\n            });\n    }\n\n}\n"]}