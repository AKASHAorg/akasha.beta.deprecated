{"version":3,"file":"Main.js","sourceRoot":"","sources":["Main.ts"],"names":[],"mappings":"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","sourcesContent":["import BaseContract from './BaseContract';\nimport * as Promise from 'bluebird';\n\n\nexport default class Main extends BaseContract {\n    constructor(instance: any) {\n        super();\n        this.contract = Promise.promisifyAll(instance);\n        this.contract.getVoteOf.callAsync = Promise.promisify(this.contract.getVoteOf.call);\n        this.contract.openedToVotes.callAsync = Promise.promisify(this.contract.openedToVotes.call);\n        this.contract.voteEndDate.callAsync = Promise.promisify(this.contract.voteEndDate.call);\n        this.contract.getScoreOfEntry.callAsync = Promise.promisify(this.contract.getScoreOfEntry.call);\n        this.contract.getFundsAddress.callAsync = Promise.promisify(this.contract.getFundsAddress.call);\n        this.contract.getCommentsCount.callAsync = Promise.promisify(this.contract.getCommentsCount.call);\n        this.contract.getCommentAt.callAsync = Promise.promisify(this.contract.getCommentAt.call);\n        this.contract.getScoreOfComment.callAsync = Promise.promisify(this.contract.getScoreOfComment.call);\n    }\n\n    /**\n     *\n     * @param profile\n     * @param entryAddress\n     * @returns {any}\n     */\n    public getVoteOf(profile: string, entryAddress: string) {\n        return this.contract\n            .getVoteOf\n            .callAsync(profile, entryAddress);\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @returns {any}\n     */\n    public openedToVotes(entryAddress: string) {\n        return this.contract\n            .openedToVotes\n            .callAsync(entryAddress);\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @returns {any}\n     */\n    public voteEndDate(entryAddress: string) {\n        return this.contract\n            .voteEndDate\n            .callAsync(entryAddress);\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @returns {any}\n     */\n    public getScoreOfEntry(entryAddress: string) {\n        return this.contract\n            .getScoreOfEntry\n            .callAsync(entryAddress);\n    }\n\n    /**\n     *\n     * @returns {any}\n     */\n    public getFundsAddress() {\n        return this.contract\n            .getFundsAddress\n            .callAsync();\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @returns {any}\n     */\n    public getCommentsCount(entryAddress: string) {\n        return this.contract\n            .getCommentsCount\n            .callAsync(entryAddress);\n    }\n\n    /**\n     *\n     * @param entry\n     * @param commentId\n     * @returns {any}\n     */\n    public getCommentAt(entry: string, commentId: number) {\n        const commentIdTr = this.gethInstance.web3.fromDecimal(commentId);\n        return this.contract\n            .getCommentAt\n            .callAsync(entry, commentIdTr);\n    }\n\n    /**\n     *\n     * @param entry\n     * @param commentId\n     * @returns {any}\n     */\n    public getScoreOfComment(entry: string, commentId: number) {\n        const commentIdTr = this.gethInstance.web3.fromDecimal(commentId);\n        return this.contract\n            .getScoreOfComment\n            .callAsync(entry, commentIdTr);\n    }\n\n    /**\n     *\n     * @param hash\n     * @param tags\n     * @param gas\n     * @returns {any}\n     */\n    public publishEntry(hash: string[], tags: string[], gas?: number) {\n        const hashTr = hash.map((v) => {\n            return this.gethInstance.web3.fromUtf8(v);\n        });\n        const tagsTr = tags.map((v) => {\n           return this.gethInstance.web3.fromUtf8(v);\n        });\n        return this.extractData('publishEntry', hashTr, tagsTr, {gas});\n    }\n\n    /**\n     *\n     * @param hash\n     * @param entryAddress\n     * @param gas\n     * @returns {any}\n     */\n    public updateEntry(hash: string[], entryAddress: string, gas?: number) {\n        const hashTr = hash.map((v) => {\n            return this.gethInstance.web3.fromUtf8(v);\n        });\n        return this.extractData('updateEntry', hashTr, entryAddress, {gas});\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @param weight\n     * @param gas\n     * @param value\n     * @returns {any}\n     */\n    public upVoteEntry(entryAddress: string, weight: number, gas?: number, value?: number) {\n        const weightTr = this.gethInstance.web3.fromDecimal(weight);\n        return this.extractData('upVoteEntry', entryAddress, weightTr, {gas, value});\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @param weight\n     * @param gas\n     * @param value\n     * @returns {any}\n     */\n    public downVoteEntry(entryAddress: string, weight: number, gas?: number, value?: number) {\n        const weightTr = this.gethInstance.web3.fromDecimal(weight);\n        return this.extractData('downVoteEntry', entryAddress, weightTr, {gas, value});\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @param hash\n     * @param gas\n     * @returns {any}\n     */\n    public saveComment(entryAddress: string, hash: string[], gas?: number) {\n        const hashTr = hash.map((v) => {\n            return this.gethInstance.web3.fromUtf8(v);\n        });\n        return this.extractData('saveComment', entryAddress, hashTr, {gas});\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @param commentId\n     * @param hash\n     * @param gas\n     * @returns {any}\n     */\n    public updateComment(entryAddress: string, commentId: number, hash: string[], gas?: number) {\n        const hashTr = hash.map((v) => {\n            return this.gethInstance.web3.fromUtf8(v);\n        });\n        const commentIdTr = this.gethInstance.web3.fromDecimal(commentId);\n        return this.extractData('updateComment', entryAddress, commentIdTr, hashTr, {gas});\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @param weigth\n     * @param commentId\n     * @param gas\n     * @param value\n     * @returns {any}\n     */\n    public upVoteComment(entryAddress: string, weigth: number, commentId: number, gas?: number, value?: number) {\n        const weigthTr = this.gethInstance.web3.fromDecimal(weigth);\n        const commentIdTr = this.gethInstance.web3.fromDecimal(commentId);\n        return this.extractData('upVoteComment', entryAddress, weigthTr, commentIdTr, {gas, value});\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @param weigth\n     * @param commentId\n     * @param gas\n     * @param value\n     * @returns {any}\n     */\n    public downVoteComment(entryAddress: string, weigth: number, commentId: number, gas?: number, value?: number) {\n        const weigthTr = this.gethInstance.web3.fromDecimal(weigth);\n        const commentIdTr = this.gethInstance.web3.fromDecimal(commentId);\n        return this.extractData('downVoteCommentAsync', entryAddress, weigthTr, commentIdTr, {gas, value});\n    }\n}\n"]}