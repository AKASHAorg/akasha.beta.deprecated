{"version":3,"file":"Main.js","sourceRoot":"","sources":["Main.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Promise from 'bluebird';\nimport BaseContract from './BaseContract';\n\nexport default class Main extends BaseContract {\n    constructor(instance: any) {\n        super();\n        this.contract = Promise.promisifyAll(instance);\n        this.contract.getVoteOf.callAsync = Promise.promisify(this.contract.getVoteOf.call);\n        this.contract.openedToVotes.callAsync = Promise.promisify(this.contract.openedToVotes.call);\n        this.contract.voteEndDate.callAsync = Promise.promisify(this.contract.voteEndDate.call);\n        this.contract.getScoreOfEntry.callAsync = Promise.promisify(this.contract.getScoreOfEntry.call);\n        this.contract.getFundsAddress.callAsync = Promise.promisify(this.contract.getFundsAddress.call);\n        this.contract.getCommentsCount.callAsync = Promise.promisify(this.contract.getCommentsCount.call);\n        this.contract.getCommentAt.callAsync = Promise.promisify(this.contract.getCommentAt.call);\n        this.contract.getScoreOfComment.callAsync = Promise.promisify(this.contract.getScoreOfComment.call);\n    }\n\n    /**\n     *\n     * @param profile\n     * @param entryAddress\n     * @returns {any}\n     */\n    getVoteOf(profile: string, entryAddress: string) {\n        return this.contract\n            .getVoteOf\n            .callAsync(profile, entryAddress);\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @returns {any}\n     */\n    openedToVotes(entryAddress: string) {\n        return this.contract\n            .openedToVotes\n            .callAsync(entryAddress);\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @returns {any}\n     */\n    voteEndDate(entryAddress: string) {\n        return this.contract\n            .voteEndDate\n            .callAsync(entryAddress);\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @returns {any}\n     */\n    getScoreOfEntry(entryAddress: string) {\n        return this.contract\n            .getScoreOfEntry\n            .callAsync(entryAddress);\n    }\n\n    /**\n     *\n     * @returns {any}\n     */\n    getFundsAddress() {\n        return this.contract\n            .getFundsAddress\n            .callAsync();\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @returns {any}\n     */\n    getCommentsCount(entryAddress: string) {\n        return this.contract\n            .getCommentsCount\n            .callAsync(entryAddress);\n    }\n\n    /**\n     *\n     * @param entry\n     * @param commentId\n     * @returns {any}\n     */\n    getCommentAt(entry: string, commentId: number) {\n        const commentIdTr = this.gethInstance.web3.fromDecimal(commentId);\n        return this.contract\n            .getCommentAt\n            .callAsync(entry, commentIdTr);\n    }\n\n    /**\n     *\n     * @param entry\n     * @param commentId\n     * @returns {any}\n     */\n    getScoreOfComment(entry: string, commentId: number) {\n        const commentIdTr = this.gethInstance.web3.fromDecimal(commentId);\n        return this.contract\n            .getScoreOfComment\n            .callAsync(entry, commentIdTr);\n    }\n\n    /**\n     *\n     * @param hash\n     * @param tags\n     * @param gas\n     * @returns {any}\n     */\n    publishEntry(hash: string[], tags: string[], gas?: number) {\n        const hashTr = hash.map((v) => {\n            return this.gethInstance.web3.fromUtf8(v);\n        });\n        const tagsTr = tags.map((v) => {\n           return this.gethInstance.web3.fromUtf8(v);\n        });\n        return this.contract\n            .publishEntryAsync(hashTr, tagsTr, {gas});\n    }\n\n    /**\n     *\n     * @param hash\n     * @param entryAddress\n     * @param gas\n     * @returns {any}\n     */\n    updateEntry(hash: string[], entryAddress: string, gas?: number) {\n        const hashTr = hash.map((v) => {\n            return this.gethInstance.web3.fromUtf8(v);\n        });\n        return this.contract\n            .updateEntryAsync(hashTr, entryAddress, {gas});\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @param weight\n     * @param gas\n     * @returns {any}\n     */\n    upVoteEntry(entryAddress: string, weight: number, gas?: number) {\n        const weightTr = this.gethInstance.web3.fromDecimal(weight);\n        return this.contract\n            .upVoteEntryAsync(entryAddress, weightTr, {gas});\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @param weight\n     * @param gas\n     * @returns {any}\n     */\n    downVoteEntry(entryAddress: string, weight: number, gas?: number) {\n        const weightTr = this.gethInstance.web3.fromDecimal(weight);\n        return this.contract\n            .downVoteEntryAsync(entryAddress, weightTr, {gas});\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @param hash\n     * @param gas\n     * @returns {any}\n     */\n    saveComment(entryAddress: string, hash: string[], gas?: number) {\n        const hashTr = hash.map((v) => {\n            return this.gethInstance.web3.fromUtf8(v);\n        });\n        return this.contract\n            .saveCommentAsync(entryAddress, hashTr, {gas});\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @param commentId\n     * @param hash\n     * @param gas\n     * @returns {any}\n     */\n    updateComment(entryAddress: string, commentId: number, hash: string[], gas?: number) {\n        const hashTr = hash.map((v) => {\n            return this.gethInstance.web3.fromUtf8(v);\n        });\n        const commentIdTr = this.gethInstance.web3.fromDecimal(commentId);\n        return this.contract\n            .updateCommentAsync(entryAddress, commentIdTr, hashTr, {gas});\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @param weigth\n     * @param commentId\n     * @param gas\n     * @returns {any}\n     */\n    upVoteComment(entryAddress: string, weigth: number, commentId: number, gas?: number) {\n        const weigthTr = this.gethInstance.web3.fromDecimal(weigth);\n        const commentIdTr = this.gethInstance.web3.fromDecimal(commentId);\n        return this.contract\n            .upVoteCommentAsync(entryAddress, weigthTr, commentIdTr, {gas});\n    }\n\n    /**\n     *\n     * @param entryAddress\n     * @param weigth\n     * @param commentId\n     * @param gas\n     * @returns {any}\n     */\n    downVoteComment(entryAddress: string, weigth: number, commentId: number, gas?: number) {\n        const weigthTr = this.gethInstance.web3.fromDecimal(weigth);\n        const commentIdTr = this.gethInstance.web3.fromDecimal(commentId);\n        return this.contract\n            .downVoteCommentAsync(entryAddress, weigthTr, commentIdTr, {gas});\n    }\n}\n"]}