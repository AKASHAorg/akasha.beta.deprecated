{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";AAAA,0BAAoB,WAAW,CAAC,CAAA;AAChC,2BAAqB,YAAY,CAAC,CAAA;AAClC,uBAAiB,QAAQ,CAAC,CAAA;AAC1B,uBAAiB,QAAQ,CAAC,CAAA;AAC1B,yBAAmB,UAAU,CAAC,CAAA;AAC9B,0BAAoB,WAAW,CAAC,CAAA;AAChC,2BAAqB,YAAY,CAAC,CAAA;AAClC,wBAAkB,SAAS,CAAC,CAAA;AAC5B,gCAA0B,iBAAiB,CAAC,CAAA;AAC5C,+BAAsB,6BAA6B,CAAC,CAAA;AAEpD;IAQW,IAAI,CAAC,IAAS;QACjB,MAAM,OAAO,GAAG,IAAI,sBAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,QAAQ,GAAG,IAAI,kBAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACxD,MAAM,aAAa,GAAG,IAAI,uBAAa,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACxE,MAAM,OAAO,GAAG,IAAI,iBAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrD,MAAM,IAAI,GAAG,IAAI,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,IAAI,GAAG,IAAI,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,MAAM,GAAG,IAAI,gBAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAClD,MAAM,OAAO,GAAG,IAAI,iBAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrD,MAAM,QAAQ,GAAG,IAAI,kBAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACxD,MAAM,KAAK,GAAG,IAAI,eAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;QACnG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;AACL,CAAC;AAEY,mBAAW,GAAG,IAAI,SAAS,EAAE,CAAC","sourcesContent":["import Profile from './Profile';\nimport Registry from './Registry';\nimport Tags from './Tags';\nimport Feed from './Feed';\nimport Faucet from './Faucet';\nimport Entries from './Entries';\nimport Comments from './Comments';\nimport Votes from './Votes';\nimport RegistryStore from './RegistryStore';\nimport contracts from '@akashaproject/contracts.js';\n\nclass Contracts {\n    public instance: any;\n\n    /**\n     * Boostrap web3 contracts\n     * @param web3\n     * @returns {any}\n     */\n    public init(web3: any) {\n        const factory = new contracts.Class(web3);\n        const registry = new Registry(factory.objects.registry);\n        const registryStore = new RegistryStore(factory.objects.registry_store);\n        const profile = new Profile(factory.classes.Profile);\n        const tags = new Tags(factory.objects.tags);\n        const feed = new Feed(factory.objects.feed);\n        const faucet = new Faucet(factory.objects.faucet);\n        const entries = new Entries(factory.objects.entries);\n        const comments = new Comments(factory.objects.comments);\n        const votes = new Votes(factory.objects.votes);\n        this.instance = { profile, registry, registryStore, tags, feed, faucet, entries, comments, votes };\n        return this.instance;\n    }\n}\n\nexport const constructed = new Contracts();\n"]}