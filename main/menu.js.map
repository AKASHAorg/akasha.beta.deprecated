{"version":3,"file":"menu.js","sourceRoot":"","sources":["menu.ts"],"names":[],"mappings":"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","sourcesContent":["import { Menu, app, shell, session } from 'electron';\n\nconst installExtensions = async() => {\n    if (process.env.NODE_ENV === 'development') {\n        const installer = require('electron-devtools-installer'); // eslint-disable-line global-require\n\n        const extensions = [\n            'REACT_DEVELOPER_TOOLS',\n            'REDUX_DEVTOOLS'\n        ];\n        const forceDownload = !!process.env.UPGRADE_EXTENSIONS;\n        for (const name of extensions) {\n            try {\n                await installer.default(installer[name], forceDownload);\n            } catch (e) {\n            } // eslint-disable-line\n        }\n    }\n};\n\nexport async function initMenu(mainWindow: any) {\n    await installExtensions();\n\n    if (process.env.NODE_ENV === 'development') {\n        mainWindow.openDevTools();\n        mainWindow.webContents.on('context-menu', (e: any, props: any) => {\n            const { x, y } = props;\n\n            Menu.buildFromTemplate([{\n                label: 'Inspect element',\n                click() {\n                    mainWindow.inspectElement(x, y);\n                }\n            }]).popup(mainWindow);\n        });\n    }\n    const version = app.getVersion();\n    const template: any = [\n        {\n            label: 'Edit',\n            submenu: [\n                {\n                    role: 'undo'\n                },\n                {\n                    role: 'redo'\n                },\n                {\n                    type: 'separator'\n                },\n                {\n                    role: 'cut'\n                },\n                {\n                    role: 'copy'\n                },\n                {\n                    role: 'paste'\n                },\n                {\n                    role: 'pasteandmatchstyle'\n                },\n                {\n                    type: 'separator'\n                },\n                {\n                    role: 'delete'\n                },\n                {\n                    role: 'selectall'\n                }\n            ]\n        },\n        {\n            label: 'View',\n            submenu: [\n                {\n                    role: 'reload'\n                },\n                {\n                    role: 'togglefullscreen'\n                },\n                {\n                    type: 'separator'\n                },\n                {\n                    role: 'resetzoom'\n                },\n                {\n                    role: 'zoomin'\n                },\n                {\n                    role: 'zoomout'\n                }\n            ]\n        },\n        {\n            role: 'window',\n            submenu: [\n                {\n                    role: 'minimize'\n                },\n                {\n                    role: 'close'\n                }\n            ]\n        },\n        {\n            role: 'help',\n            submenu: [\n                {\n                    label: 'Learn More',\n                    click () {\n                        shell.openExternal('https://github.com/AkashaProject/Alpha/wiki/FAQ')\n                    }\n                },\n                {\n                    label: 'Report Issue',\n                    click () {\n                        shell.openExternal('https://github.com/AkashaProject/Alpha/issues/new')\n                    }\n                },\n                {\n                    type: 'separator'\n                },\n                {\n                    label: 'Clear Cache',\n                    click () {\n                        session.defaultSession.clearCache(function () {\n                            console.log('cleared cache');\n                        })\n                    }\n                }\n                ,\n                {\n                    label: 'Reset App Data',\n                    click () {\n                        session.defaultSession.clearStorageData(function () {\n                            console.log('cleared storage app data');\n                        })\n                    }\n                },\n                {\n                    type: 'separator'\n                },\n                {\n                    label: 'About AKASHA',\n                    click () {\n                        shell.openExternal('http://akasha.world')\n                    }\n                },\n                {\n                    label: `Version ${version}`\n                }\n            ]\n        }\n    ];\n\n    if (process.platform === 'darwin') {\n        template.unshift({\n            label: app.getName(),\n            submenu: [\n                {\n                    role: 'about'\n                },\n                {\n                    type: 'separator'\n                },\n                {\n                    role: 'services',\n                    submenu: []\n                },\n                {\n                    type: 'separator'\n                },\n                {\n                    role: 'hide'\n                },\n                {\n                    role: 'hideothers'\n                },\n                {\n                    role: 'unhide'\n                },\n                {\n                    type: 'separator'\n                },\n                {\n                    role: 'quit'\n                }\n            ]\n        });\n        // Window menu.\n        template[3].submenu = [\n            {\n                label: 'Close',\n                accelerator: 'CmdOrCtrl+W',\n                role: 'close'\n            },\n            {\n                label: 'Minimize',\n                accelerator: 'CmdOrCtrl+M',\n                role: 'minimize'\n            },\n            {\n                label: 'Zoom',\n                role: 'zoom'\n            },\n            {\n                type: 'separator'\n            },\n            {\n                label: 'Bring All to Front',\n                role: 'front'\n            }\n        ]\n    }\n\n    const menu = Menu.buildFromTemplate(template);\n    Menu.setApplicationMenu(menu);\n}\n"]}