{"version":3,"file":"menu.js","sourceRoot":"","sources":["menu.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2BAAqB,UAAU,CAAC,CAAA;AAEhC,MAAM,iBAAiB,GAAG;IACtB,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,CAAC,CAAC,CAAC;QACzC,MAAM,SAAS,GAAG,OAAO,CAAC,6BAA6B,CAAC,CAAC;QAEzD,MAAM,UAAU,GAAG;YACf,uBAAuB;YACvB,gBAAgB;SACnB,CAAC;QACF,MAAM,aAAa,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;QACvD,GAAG,CAAC,CAAC,MAAM,IAAI,IAAI,UAAU,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC;gBACD,MAAM,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,aAAa,CAAC,CAAC;YAC5D,CAAE;YAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACb,CAAC;QACL,CAAC;IACL,CAAC;AACL,CAAC,CAAA,CAAC;AAEF,kBAA+B,UAAe;;QAC1C,MAAM,iBAAiB,EAAE,CAAC;QAE1B,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,CAAC,CAAC,CAAC;YACzC,UAAU,CAAC,YAAY,EAAE,CAAC;YAC1B,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,CAAM,EAAE,KAAU;gBACzD,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC;gBAEvB,eAAI,CAAC,iBAAiB,CAAC,CAAC;wBACpB,KAAK,EAAE,iBAAiB;wBACxB,KAAK;4BACD,UAAU,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBACpC,CAAC;qBACJ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;QACP,CAAC;QACD,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;;AAjBqB,gBAAQ,WAiB7B,CAAA","sourcesContent":["import { Menu } from 'electron';\n\nconst installExtensions = async() => {\n    if (process.env.NODE_ENV === 'development') {\n        const installer = require('electron-devtools-installer'); // eslint-disable-line global-require\n\n        const extensions = [\n            'REACT_DEVELOPER_TOOLS',\n            'REDUX_DEVTOOLS'\n        ];\n        const forceDownload = !!process.env.UPGRADE_EXTENSIONS;\n        for (const name of extensions) {\n            try {\n                await installer.default(installer[name], forceDownload);\n            } catch (e) {\n            } // eslint-disable-line\n        }\n    }\n};\n\nexport async function initMenu(mainWindow: any) {\n    await installExtensions();\n\n    if (process.env.NODE_ENV === 'development') {\n        mainWindow.openDevTools();\n        mainWindow.webContents.on('context-menu', (e: any, props: any) => {\n            const { x, y } = props;\n\n            Menu.buildFromTemplate([{\n                label: 'Inspect element',\n                click() {\n                    mainWindow.inspectElement(x, y);\n                }\n            }]).popup(mainWindow);\n        });\n    }\n    mainWindow.setMenu(null);\n}\n"]}