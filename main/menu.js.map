{"version":3,"file":"menu.js","sourceRoot":"","sources":["menu.ts"],"names":[],"mappings":"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","sourcesContent":["import { app, Menu, shell } from 'electron';\nimport BrowserWindow = Electron.BrowserWindow;\n\nlet menu: any;\nlet template: any;\n\nconst installExtensions = async () => {\n    if (process.env.NODE_ENV === 'development') {\n        const installer = require('electron-devtools-installer'); // eslint-disable-line global-require\n\n        const extensions = [\n            'REACT_DEVELOPER_TOOLS',\n            'REDUX_DEVTOOLS'\n        ];\n        const forceDownload = !!process.env.UPGRADE_EXTENSIONS;\n        for (const name of extensions) {\n            try {\n                await installer.default(installer[name], forceDownload);\n            } catch (e) {} // eslint-disable-line\n        }\n    }\n};\n\nexport async function initMenu(mainWindow: any) {\n    await installExtensions();\n\n    if (process.env.NODE_ENV === 'development') {\n        mainWindow.openDevTools();\n        mainWindow.webContents.on('context-menu', (e: any, props: any) => {\n            const { x, y } = props;\n\n            Menu.buildFromTemplate([{\n                label: 'Inspect element',\n                click() {\n                    mainWindow.inspectElement(x, y);\n                }\n            }]).popup(mainWindow);\n        });\n    }\n\n    if (process.platform === 'darwin') {\n        template = [{\n            label: 'Electron',\n            submenu: [{\n                label: 'About ElectronReact',\n                selector: 'orderFrontStandardAboutPanel:'\n            }, {\n                type: 'separator'\n            }, {\n                label: 'Services',\n                submenu: []\n            }, {\n                type: 'separator'\n            }, {\n                label: 'Hide ElectronReact',\n                accelerator: 'Command+H',\n                selector: 'hide:'\n            }, {\n                label: 'Hide Others',\n                accelerator: 'Command+Shift+H',\n                selector: 'hideOtherApplications:'\n            }, {\n                label: 'Show All',\n                selector: 'unhideAllApplications:'\n            }, {\n                type: 'separator'\n            }, {\n                label: 'Quit',\n                accelerator: 'Command+Q',\n                click() {\n                    app.quit();\n                }\n            }]\n        }, {\n            label: 'Edit',\n            submenu: [{\n                label: 'Undo',\n                accelerator: 'Command+Z',\n                selector: 'undo:'\n            }, {\n                label: 'Redo',\n                accelerator: 'Shift+Command+Z',\n                selector: 'redo:'\n            }, {\n                type: 'separator'\n            }, {\n                label: 'Cut',\n                accelerator: 'Command+X',\n                selector: 'cut:'\n            }, {\n                label: 'Copy',\n                accelerator: 'Command+C',\n                selector: 'copy:'\n            }, {\n                label: 'Paste',\n                accelerator: 'Command+V',\n                selector: 'paste:'\n            }, {\n                label: 'Select All',\n                accelerator: 'Command+A',\n                selector: 'selectAll:'\n            }]\n        }, {\n            label: 'View',\n            submenu: (process.env.NODE_ENV === 'development') ? [{\n                label: 'Reload',\n                accelerator: 'Command+R',\n                click() {\n                    mainWindow.webContents.reload();\n                }\n            }, {\n                label: 'Toggle Full Screen',\n                accelerator: 'Ctrl+Command+F',\n                click() {\n                    mainWindow.setFullScreen(!mainWindow.isFullScreen());\n                }\n            }, {\n                label: 'Toggle Developer Tools',\n                accelerator: 'Alt+Command+I',\n                click() {\n                    mainWindow.toggleDevTools();\n                }\n            }] : [{\n                label: 'Toggle Full Screen',\n                accelerator: 'Ctrl+Command+F',\n                click() {\n                    mainWindow.setFullScreen(!mainWindow.isFullScreen());\n                }\n            }]\n        }, {\n            label: 'Window',\n            submenu: [{\n                label: 'Minimize',\n                accelerator: 'Command+M',\n                selector: 'performMiniaturize:'\n            }, {\n                label: 'Close',\n                accelerator: 'Command+W',\n                selector: 'performClose:'\n            }, {\n                type: 'separator'\n            }, {\n                label: 'Bring All to Front',\n                selector: 'arrangeInFront:'\n            }]\n        }, {\n            label: 'Help',\n            submenu: [{\n                label: 'Learn More',\n                click() {\n                    shell.openExternal('http://electron.atom.io');\n                }\n            }, {\n                label: 'Documentation',\n                click() {\n                    shell.openExternal('https://github.com/atom/electron/tree/master/docs#readme');\n                }\n            }, {\n                label: 'Community Discussions',\n                click() {\n                    shell.openExternal('https://discuss.atom.io/c/electron');\n                }\n            }, {\n                label: 'Search Issues',\n                click() {\n                    shell.openExternal('https://github.com/atom/electron/issues');\n                }\n            }]\n        }];\n\n        menu = Menu.buildFromTemplate(template);\n        Menu.setApplicationMenu(menu);\n    } else {\n        template = [{\n            label: '&File',\n            submenu: [{\n                label: '&Open',\n                accelerator: 'Ctrl+O'\n            }, {\n                label: '&Close',\n                accelerator: 'Ctrl+W',\n                click() {\n                    mainWindow.close();\n                }\n            }]\n        }, {\n            label: '&View',\n            submenu: (process.env.NODE_ENV === 'development') ? [{\n                label: '&Reload',\n                accelerator: 'Ctrl+R',\n                click() {\n                    mainWindow.webContents.reload();\n                }\n            }, {\n                label: 'Toggle &Full Screen',\n                accelerator: 'F11',\n                click() {\n                    mainWindow.setFullScreen(!mainWindow.isFullScreen());\n                }\n            }, {\n                label: 'Toggle &Developer Tools',\n                accelerator: 'Alt+Ctrl+I',\n                click() {\n                    mainWindow.toggleDevTools();\n                }\n            }] : [{\n                label: 'Toggle &Full Screen',\n                accelerator: 'F11',\n                click() {\n                    mainWindow.setFullScreen(!mainWindow.isFullScreen());\n                }\n            }]\n        }, {\n            label: 'Help',\n            submenu: [{\n                label: 'Learn More',\n                click() {\n                    shell.openExternal('http://electron.atom.io');\n                }\n            }, {\n                label: 'Documentation',\n                click() {\n                    shell.openExternal('https://github.com/atom/electron/tree/master/docs#readme');\n                }\n            }, {\n                label: 'Community Discussions',\n                click() {\n                    shell.openExternal('https://discuss.atom.io/c/electron');\n                }\n            }, {\n                label: 'Search Issues',\n                click() {\n                    shell.openExternal('https://github.com/atom/electron/issues');\n                }\n            }]\n        }];\n        menu = Menu.buildFromTemplate(template);\n        mainWindow.setMenu(menu);\n    }\n\n}\n"]}