{"version":3,"file":"init-modules.js","sourceRoot":"","sources":["init-modules.ts"],"names":[],"mappings":"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","sourcesContent":["import jsonSchemaWeb3 from '@akashaproject/jsonschema-web3';\nimport { CORE_MODULE, GENERAL_SETTINGS } from '@akashaproject/common/constants';\nimport IpfsConnector from '@akashaproject/ipfs-js-connector';\nimport core from '@akashaproject/core';\nimport commonModule from '@akashaproject/common';\nimport authModule from '@akashaproject/auth-web3';\nimport commentsModule from '@akashaproject/comments';\nimport entryModule from '@akashaproject/entry';\nimport gethModule from '@akashaproject/geth-web3';\nimport ipfsModule from '@akashaproject/ipfs';\nimport licencesModule from '@akashaproject/licences';\nimport notificationsModule from '@akashaproject/notifications';\nimport pinnerModule from '@akashaproject/pinner';\nimport profileModule from '@akashaproject/profile';\nimport registryModule from '@akashaproject/registry';\nimport searchModule from '@akashaproject/search';\nimport { init } from '@akashaproject/search/indexes';\nimport tagsModule from '@akashaproject/tags';\nimport txModule from '@akashaproject/tx';\nimport { BASE_URL, DEFAULT_IPFS_CONFIG } from './config/settings';\n\nconst bootstrap = async function bootstrap (serviceProvider, gS, logger) {\n  core.init();\n  const common = commonModule.init(serviceProvider, gS);\n  const auth = authModule.init(serviceProvider, gS);\n  const comments = commentsModule.init(serviceProvider, gS);\n  const entry = entryModule.init(serviceProvider, gS);\n  const geth = gethModule.init(serviceProvider, gS);\n  const ipfs = ipfsModule.init(serviceProvider, gS);\n  const licences = licencesModule.init(serviceProvider, gS);\n  const notifications = notificationsModule.init(serviceProvider, gS);\n  const pinner = pinnerModule.init(serviceProvider, gS);\n  const profile = profileModule.init(serviceProvider, gS);\n  const registry = registryModule.init(serviceProvider, gS);\n  const search = searchModule.init(serviceProvider, gS);\n  const tags = tagsModule.init(serviceProvider, gS);\n  const tx = txModule.init(serviceProvider, gS);\n  const serviceValidator = function () {\n    return { Validator: jsonSchemaWeb3 };\n  };\n  const ipfsLogger = logger.child({ module: 'ipfs' });\n  IpfsConnector.getInstance().setOption('config', DEFAULT_IPFS_CONFIG);\n  IpfsConnector.getInstance().setOption('repo', 'ipfs#akasha-beta');\n  // @TODO: reimplement web3 regen\n  // gS(CORE_MODULE.WEB3_API).instance = GethConnector.getInstance().web3;\n  gS(CORE_MODULE.IPFS_API).instance = IpfsConnector.getInstance();\n\n  IpfsConnector.getInstance().setLogger(ipfsLogger);\n  serviceProvider().service(CORE_MODULE.VALIDATOR_SCHEMA, serviceValidator);\n  serviceProvider().service(CORE_MODULE.IPFS_CONNECTOR, function () {\n    return IpfsConnector;\n  });\n  gS(CORE_MODULE.SETTINGS).set(GENERAL_SETTINGS.BASE_URL, BASE_URL);\n  const prefix = 'akasha#dapp#0';\n  await init(prefix)\n    .then(() => logger.debug('Finished init local db.'))\n    .catch(err => logger.error(err));\n  return {\n    [commonModule.moduleName]: common,\n    [authModule.moduleName]: auth,\n    [commentsModule.moduleName]: comments,\n    [entryModule.moduleName]: entry,\n    [gethModule.moduleName]: geth,\n    [ipfsModule.moduleName]: ipfs,\n    [licencesModule.moduleName]: licences,\n    [notificationsModule.moduleName]: notifications,\n    [pinnerModule.moduleName]: pinner,\n    [profileModule.moduleName]: profile,\n    [registryModule.moduleName]: registry,\n    [searchModule.moduleName]: search,\n    [tagsModule.moduleName]: tags,\n    [txModule.moduleName]: tx,\n  };\n};\n\nexport default bootstrap;\n"]}