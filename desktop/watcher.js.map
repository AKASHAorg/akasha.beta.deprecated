{"version":3,"file":"watcher.js","sourceRoot":"","sources":["watcher.ts"],"names":[],"mappings":";;AAAA,+DAA8D;AAC9D,yDAAgD;AAEhD,SAAwB,eAAe,CAAC,OAAO,EAAE,QAAQ;IAEvD,MAAM,cAAc,GAAG,IAAI,0BAAc,CACvC,uBAAW,CAAC,IAAI,EAChB;QACE,QAAQ;QACR,WAAW,EAAE,aAAa;KAC3B,CAAC,CAAC;IAEL,cAAc,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,IAAI;QAElC,OAAO,CACJ,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;aACzB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;IAEH,OAAO,EAAG,cAAc,EAAE,CAAC;AAC7B,CAAC;AAjBD,kCAiBC","sourcesContent":["import { CORE_MODULE } from '@akashaproject/common/constants';\nimport IpcChannelMain from './ipc-channel-main';\n\nexport default function startDataStream(modules, windowId) {\n  // create listener on main Channel\n  const ipcChannelMain = new IpcChannelMain(\n    CORE_MODULE.DATA,\n    {\n      windowId,\n      channelName: 'mainChannel',\n    });\n\n  ipcChannelMain.on(function (ev, args) {\n    // @TODO: add schema validation\n    modules\n      [args.module][args.method]\n      .execute(args.payload).then(data => ipcChannelMain.send({ data, args }));\n  });\n\n  return {  ipcChannelMain };\n}\n"]}