{"version":3,"file":"init-modules.js","sourceRoot":"","sources":["init-modules.ts"],"names":[],"mappings":"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","sourcesContent":["import jsonSchemaWeb3 from '@akashaproject/jsonschema-web3';\nimport { CORE_MODULE } from '@akashaproject/common/constants';\nimport { GethConnector } from '@akashaproject/geth-connector';\nimport { IpfsConnector } from '@akashaproject/ipfs-connector';\nimport { app } from 'electron';\nimport { join, sep } from 'path';\nimport core from '@akashaproject/core';\nimport commonModule from '@akashaproject/common';\nimport authModule from '@akashaproject/auth';\nimport commentsModule from '@akashaproject/comments';\nimport entryModule from '@akashaproject/entry';\nimport gethModule from '@akashaproject/geth';\nimport ipfsModule from '@akashaproject/ipfs';\nimport licencesModule from '@akashaproject/licences';\nimport notificationsModule from '@akashaproject/notifications';\nimport pinnerModule from '@akashaproject/pinner';\nimport profileModule from '@akashaproject/profile';\nimport registryModule from '@akashaproject/registry';\nimport searchModule from '@akashaproject/search';\nimport { init } from '@akashaproject/search/indexes';\nimport tagsModule from '@akashaproject/tags';\nimport txModule from '@akashaproject/tx';\n\nconst bootstrap = async function bootstrap(serviceProvider, gS, logger) {\n  core.init();\n  const common = commonModule.init(serviceProvider, gS);\n  const auth = authModule.init(serviceProvider, gS);\n  const comments = commentsModule.init(serviceProvider, gS);\n  const entry = entryModule.init(serviceProvider, gS);\n  const geth = gethModule.init(serviceProvider, gS);\n  const ipfs = ipfsModule.init(serviceProvider, gS);\n  const licences = licencesModule.init(serviceProvider, gS);\n  const notifications = notificationsModule.init(serviceProvider, gS);\n  const pinner = pinnerModule.init(serviceProvider, gS);\n  const profile = profileModule.init(serviceProvider, gS);\n  const registry = registryModule.init(serviceProvider, gS);\n  const search = searchModule.init(serviceProvider, gS);\n  const tags = tagsModule.init(serviceProvider, gS);\n  const tx = txModule.init(serviceProvider, gS);\n  const serviceValidator = function () {\n    return { Validator: jsonSchemaWeb3 };\n  };\n  const gethLogger = logger.child({ module: 'geth' });\n  const ipfsLogger = logger.child({ module: 'ipfs' });\n  gS(CORE_MODULE.WEB3_API).instance = GethConnector.getInstance().web3;\n  gS(CORE_MODULE.IPFS_API).instance = IpfsConnector.getInstance();\n  GethConnector.getInstance().setLogger(gethLogger);\n  IpfsConnector.getInstance().setLogger(ipfsLogger);\n\n  GethConnector.getInstance().setBinPath(join(app.getPath('userData'), 'go-ethereum'));\n  GethConnector.getInstance().setOptions({\n    datadir: join(GethConnector.getDefaultDatadir(), 'rinkeby'),\n    ipcpath: join(GethConnector.getDefaultDatadir().replace(':', '\\\\'), 'rinkeby', 'geth.ipc'),\n    networkid: 4,\n    syncmode: 'fast',\n    rinkeby: '',\n  });\n  serviceProvider().service(CORE_MODULE.VALIDATOR_SCHEMA, serviceValidator);\n  serviceProvider().service(CORE_MODULE.GETH_CONNECTOR, function () {\n    return GethConnector;\n  });\n  serviceProvider().service(CORE_MODULE.IPFS_CONNECTOR, function () {\n    return IpfsConnector;\n  });\n  const prefix = app.getPath('userData') + sep;\n  await init(prefix)\n    .then(() => logger.debug('Finished init local db.'))\n    .catch(err => logger.error(err));\n  return {\n    [commonModule.moduleName]: common,\n    [authModule.moduleName]: auth,\n    [commentsModule.moduleName]: comments,\n    [entryModule.moduleName]: entry,\n    [gethModule.moduleName]: geth,\n    [ipfsModule.moduleName]: ipfs,\n    [licencesModule.moduleName]: licences,\n    [notificationsModule.moduleName]: notifications,\n    [pinnerModule.moduleName]: pinner,\n    [profileModule.moduleName]: profile,\n    [registryModule.moduleName]: registry,\n    [searchModule.moduleName]: search,\n    [tagsModule.moduleName]: tags,\n    [txModule.moduleName]: tx,\n  };\n};\n\nexport default bootstrap;\n"]}
