{"version":3,"file":"main.js","sourceRoot":"","sources":["main.ts"],"names":[],"mappings":"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","sourcesContent":["import { app, BrowserWindow, shell } from 'electron';\nimport { GethConnector } from '@akashaproject/geth-connector';\nimport { IpfsConnector } from '@akashaproject/ipfs-connector';\nimport sp, { getService } from '@akashaproject/core/sp';\nimport initModules from './init-modules';\nimport { resolve } from 'path';\nimport { initMenu } from './menu';\nimport startDataStream from './watcher';\nimport * as Promise from 'bluebird';\n\nconst windowStateKeeper = require('electron-window-state');\n\nlet mainWindow = null;\nconst shutDown = Promise.coroutine(function* () {\n  yield GethConnector.getInstance().stop();\n  yield IpfsConnector.getInstance().stop();\n  return true;\n});\n\nconst stopServices = () => {\n  mainWindow.hide();\n  shutDown().delay(800).finally(() => process.exit(0));\n};\n\nconst startBrowser = function () {\n  const viewHtml = resolve(__dirname, '../..');\n  const mainWindowState = windowStateKeeper({\n    defaultWidth: 1280,\n    defaultHeight: 720,\n  });\n  mainWindow = new BrowserWindow({\n    minHeight: 720,\n    minWidth: 1280,\n    resizable: true,\n    x: mainWindowState.x,\n    y: mainWindowState.y,\n    width: mainWindowState.width,\n    height: mainWindowState.height,\n    show: false,\n    webPreferences: {\n      // nodeIntegration: false,\n      preload: resolve(__dirname, './preloader.js'),\n      scrollBounce: true,\n    },\n  });\n  mainWindowState.manage(mainWindow);\n  console.timeEnd('buildWindow');\n  mainWindow.loadURL(\n    process.env.HOT ? `http://localhost:3000/dist/index.html` :\n      `file://${viewHtml}/dist/index.html`,\n  );\n  mainWindow.once('close', (ev: Event) => {\n    ev.preventDefault();\n    stopServices();\n  });\n  // Init browserWindow menu\n  initMenu(mainWindow)\n  .then(() => console.info('Menu init -> done.'))\n  .catch(error => console.error(error));\n  // until all resources are loaded the renderer browser is hidden\n  mainWindow.once('ready-to-show', () => {\n    mainWindow.show();\n    mainWindow.focus();\n    console.timeEnd('total');\n  });\n  mainWindow.webContents.on('crashed', (e) => {\n    stopServices();\n  });\n  // prevent href link being opened inside app\n  const openDefault = (e, url) => {\n    e.preventDefault();\n    shell.openExternal(url);\n  };\n\n  mainWindow.webContents.on('will-navigate', openDefault);\n  mainWindow.webContents.on('new-window', openDefault);\n\n  mainWindow.on('unresponsive', () => {\n    console.error('APP is unresponsive');\n  });\n};\n\nconst bootstrap = function () {\n\n  if (process.env.NODE_ENV === 'development') {\n    require('electron-debug')({ showDevTools: true });\n  }\n\n  app.on('window-all-closed', () => {\n    if (process.platform !== 'darwin') app.quit();\n  });\n  // prevent multiple instances of AKASHA\n  const shouldQuit = app.makeSingleInstance((commandLine, workingDirectory) => {\n    if (mainWindow) {\n      if (mainWindow.isMinimized()) mainWindow.restore();\n      mainWindow.focus();\n    }\n  });\n\n  if (shouldQuit) {\n    app.quit();\n  }\n  app.on('ready', () => {\n    console.time('total');\n    console.time('buildWindow');\n    process.on('uncaughtException', (err: Error) => {\n      console.error(`uncaughtException ${err.message} ${err.stack}`);\n    });\n    process.on('warning', (warning) => {\n      console.warn(warning);\n    });\n    process.on('SIGINT', stopServices);\n    process.on('SIGTERM', stopServices);\n\n    // start app\n    initModules(sp, getService)\n    .then((modules) => {\n      startBrowser();\n      startDataStream(modules, mainWindow.id);\n    });\n  });\n};\n\nexport default bootstrap;\n"]}