{"version":3,"file":"votes-iterator.js","sourceRoot":"","sources":["votes-iterator.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Promise from 'bluebird';\nimport { CORE_MODULE, ENTRY_MODULE, PROFILE_MODULE } from '@akashaproject/common/constants';\n\nconst votesIteratorS = {\n  id: '/tagIterator',\n  type: 'object',\n  properties: {\n    limit: { type: 'number' },\n    toBlock: { type: 'number' },\n    lastIndex: { type: 'number' },\n    entryId: { type: 'string' },\n    ethAddress: { type: 'string', format: 'address' },\n    akashaId: { type: 'string' },\n    reversed: { type: 'boolean' },\n  },\n  required: ['toBlock'],\n};\n\nexport default function init (sp, getService) {\n  const execute = Promise.coroutine(function* (data) {\n\n    const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n    v.validate(data, votesIteratorS, { throwError: true });\n    const collection = [];\n    const sourceId = data.entryId || data.commentId;\n    const contracts = getService(CORE_MODULE.CONTRACTS);\n    const record = yield contracts.instance.Votes.getRecord(sourceId);\n    let maxResults = record[0].toString() === '0' ? 0 : data.limit || 5;\n    if (maxResults > record[0].toNumber()) {\n      maxResults = record[0].toNumber();\n    }\n    if (record[0].toNumber() <= data.totalLoaded) {\n      return { collection: [], lastBlock: 0 };\n    }\n    if (data.totalLoaded) {\n      const nextTotal = data.totalLoaded + maxResults;\n      if (nextTotal > record[0].toNumber()) {\n        maxResults = record[0].toNumber() - data.totalLoaded;\n      }\n    }\n    const filter = { target: data.entryId || data.commentId, voteType: data.entryId ? 0 : 1 };\n    const fetched = yield contracts.fromEvent(\n      contracts.instance.Votes.Vote, filter, data.toBlock, maxResults,\n      { lastIndex: data.lastIndex, reversed: data.reversed || false });\n    const resolve = getService(PROFILE_MODULE.resolveEthAddress);\n    for (const event of fetched.results) {\n      const weight = (event.args.weight).toString(10);\n      const author = yield resolve.execute({ ethAddress: event.args.voter });\n\n      collection.push(Object.assign(\n        { weight: event.args.negative ? '-' + weight : weight }, author));\n      if (collection.length === maxResults) {\n        break;\n      }\n    }\n\n    return { collection, lastBlock: fetched.fromBlock, lastIndex: fetched.lastIndex };\n  });\n\n  const votesIterator = { execute, name: 'votesIterator' };\n  const service = function () {\n    return votesIterator;\n  };\n  sp().service(ENTRY_MODULE.votesIterator, service);\n}\n"]}