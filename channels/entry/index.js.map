{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import entryCountProfileInit from './entry-count-profile';\nimport entryCountTagInit from './entry-count-tag';\nimport entryTagIteratorInit from './entry-tag-iterator';\nimport entryProfileIteratorInit from './entry-profile-iterator';\nimport getEntryInit from './get-entry';\nimport publishEntryInit from './publish-entry';\nimport canClaimInit from './can-claim';\nimport claimDepositInit from './claim-deposit';\nimport downVoteEntryInit from './downvote-entry';\nimport entryScoreInit from './entry-score';\nimport upVoteEntryInit from './upvote-entry';\nimport voteCostInit from './vote-cost';\nimport getVoteOfInit from './get-vote-of';\nimport votesIteratorInit from './votes-iterator';\nimport getEntryBalanceInit from './get-entry-balance';\nimport getEntryListInit from './get-entry-list';\nimport editEntryInit from './edit-entry';\nimport followingStreamIteratorInit from './following-stream-iterator';\nimport allStreamIteratorInit from './all-stream-iterator';\nimport getLatestEntryVersionInit from './get-latest-entry-version';\nimport getEntryIpfsHashInit from './get-entry-ipfs-hash';\nimport resolveEntriesIpfsHashInit from './resolve-entries-ipfs-hash';\nimport canClaimVoteInit from './can-claim-vote';\nimport claimVoteInit from './claim-vote';\nimport voteRatioInit from './vote-ratio';\nimport getVoteEndPeriodInit from './vote-endperiod';\nimport myVotesIteratorInit from './my-votes-iterator';\nimport syncEntriesInit from './sync-entries';\n\nimport helpersInit from './helpers';\nimport ipfsInit from './ipfs';\nimport { ENTRY_MODULE } from '@akashaproject/common/constants';\n\nconst init = function init(sp, getService) {\n\n  helpersInit(sp, getService);\n  ipfsInit(sp, getService);\n\n  const entryCountProfile = entryCountProfileInit(sp, getService);\n  const entryCountTag = entryCountTagInit(sp, getService);\n  const entryTagIterator = entryTagIteratorInit(sp, getService);\n  const entryProfileIterator = entryProfileIteratorInit(sp, getService);\n  const getEntry = getEntryInit(sp, getService);\n  const publishEntry = publishEntryInit(sp, getService);\n  const canClaim = canClaimInit(sp, getService);\n  const claimDeposit = claimDepositInit(sp, getService);\n  const downVoteEntry = downVoteEntryInit(sp, getService);\n  const entryScore = entryScoreInit(sp, getService);\n  const upVoteEntry = upVoteEntryInit(sp, getService);\n  const voteCost = voteCostInit(sp, getService);\n  const getVoteOf = getVoteOfInit(sp, getService);\n  const votesIterator = votesIteratorInit(sp, getService);\n  const getEntryBalance = getEntryBalanceInit(sp, getService);\n  const getEntryList = getEntryListInit(sp, getService);\n  const editEntry = editEntryInit(sp, getService);\n  const followingStreamIterator = followingStreamIteratorInit(sp, getService);\n  const allStreamIterator = allStreamIteratorInit(sp, getService);\n  const getLatestEntryVersion = getLatestEntryVersionInit(sp, getService);\n  const getEntryIpfsHash = getEntryIpfsHashInit(sp, getService);\n  const resolveEntriesIpfsHash = resolveEntriesIpfsHashInit(sp, getService);\n  const canClaimVote = canClaimVoteInit(sp, getService);\n  const claimVote = claimVoteInit(sp, getService);\n  const voteRatio = voteRatioInit(sp, getService);\n  const getVoteEndPeriod = getVoteEndPeriodInit(sp, getService);\n  const myVotesIterator = myVotesIteratorInit(sp, getService);\n  const syncEntries = syncEntriesInit(sp, getService);\n\n  return {\n    [ENTRY_MODULE.getProfileEntriesCount]: entryCountProfile,\n    [ENTRY_MODULE.getTagEntriesCount]: entryCountTag,\n    [ENTRY_MODULE.entryTagIterator]: entryTagIterator,\n    [ENTRY_MODULE.entryProfileIterator]: entryProfileIterator,\n    [ENTRY_MODULE.getEntry]: getEntry,\n    [ENTRY_MODULE.publish]: publishEntry,\n    [ENTRY_MODULE.canClaim]: canClaim,\n    [ENTRY_MODULE.claim]: claimDeposit,\n    [ENTRY_MODULE.downVote]: downVoteEntry,\n    [ENTRY_MODULE.getScore]: entryScore,\n    [ENTRY_MODULE.upVote]: upVoteEntry,\n    [ENTRY_MODULE.voteCost]: voteCost,\n    [ENTRY_MODULE.getVoteOf]: getVoteOf,\n    [ENTRY_MODULE.votesIterator]: votesIterator,\n    [ENTRY_MODULE.getEntryBalance]: getEntryBalance,\n    [ENTRY_MODULE.getEntryList]: getEntryList,\n    [ENTRY_MODULE.editEntry]: editEntry,\n    [ENTRY_MODULE.followingStreamIterator]: followingStreamIterator,\n    [ENTRY_MODULE.allStreamIterator]: allStreamIterator,\n    [ENTRY_MODULE.getLatestEntryVersion]: getLatestEntryVersion,\n    [ENTRY_MODULE.getEntryIpfsHash]: getEntryIpfsHash,\n    [ENTRY_MODULE.resolveEntriesIpfsHash]: resolveEntriesIpfsHash,\n    [ENTRY_MODULE.canClaimVote]: canClaimVote,\n    [ENTRY_MODULE.claimVote]: claimVote,\n    [ENTRY_MODULE.getVoteRatio]: voteRatio,\n    [ENTRY_MODULE.getVoteEndPeriod]: getVoteEndPeriod,\n    [ENTRY_MODULE.myVotesIterator]: myVotesIterator,\n    [ENTRY_MODULE.syncEntries]: syncEntries,\n  };\n};\n\nconst app = {\n  init,\n  moduleName: ENTRY_MODULE.$name,\n};\n\nexport default app;\n"]}