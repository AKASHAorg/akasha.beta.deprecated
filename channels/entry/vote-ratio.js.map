{"version":3,"file":"vote-ratio.js","sourceRoot":"","sources":["vote-ratio.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,UAAU,CAAC;AACpC,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,iCAAiC,CAAC;AAE5E,MAAM,QAAQ,GAAG;IACf,EAAE,EAAE,WAAW;IACf,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACV,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;KAC5B;IACD,QAAQ,EAAE,CAAC,SAAS,CAAC;CACtB,CAAC;AAEF,MAAM,CAAC,OAAO,UAAU,IAAI,CAAC,EAAE,EAAE,UAAU;IACzC,MAAM,OAAO,GAAG,OAAO;SACtB,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAyB;QAC7C,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACrE,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QACjD,MAAM,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACpD,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrE,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,SAAS,CACvC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAC7B,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACrF,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAChC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;gBACvB,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;aAC9C;QACH,CAAC,CAAC,CAAC;QACH,MAAM,YAAY,GAAG,SAAS,CAAC,MAAM,CACnC,UAAU,GAAG,EAAE,KAAK;YAClB,OAAO,GAAG,GAAG,KAAK,CAAC;QACrB,CAAC,EACD,CAAC,CACF,CAAC;QACF,MAAM,UAAU,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QACzC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE;YACzB,MAAM,UAAU,GAAG,UAAU,GAAG,YAAY,CAAC;YAC7C,KAAK,GAAG,UAAU,GAAG,CAAC,UAAU,GAAG,YAAY,CAAC,CAAC;SAClD;QAED,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;IACrF,CAAC,CAAC,CAAC;IAEH,MAAM,YAAY,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC;IACvD,MAAM,OAAO,GAAG;QACd,OAAO,YAAY,CAAC;IACtB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;IACjD,OAAO,YAAY,CAAC;AACtB,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { CORE_MODULE, ENTRY_MODULE } from '@akashaproject/common/constants';\n\nconst getScore = {\n  id: '/getScore',\n  type: 'object',\n  properties: {\n    entryId: { type: 'string' },\n  },\n  required: ['entryId'],\n};\n\nexport default function init(sp, getService) {\n  const execute = Promise\n  .coroutine(function* (data: { entryId: string }) {\n    const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n    v.validate(data, getScore, { throwError: true });\n    const contracts = getService(CORE_MODULE.CONTRACTS);\n    const score = yield contracts.instance.Votes.getRecord(data.entryId);\n    const fetched = yield contracts.fromEvent(\n      contracts.instance.Votes.Vote,\n      { target: data.entryId, voteType: 0 }, 0, 10000, { lastIndex: 0, reversed: true });\n    const downVotes = [];\n    fetched.results.forEach((event) => {\n      if (event.args.negative) {\n        downVotes.push(event.args.weight.toNumber());\n      }\n    });\n    const downVotesSum = downVotes.reduce(\n      function (sum, value) {\n        return sum + value;\n      },\n      0,\n    );\n    const finalScore = (score[1]).toNumber();\n    let ratio = -1;\n    if ((score[0].toNumber())) {\n      const upVotesSum = finalScore + downVotesSum;\n      ratio = upVotesSum / (upVotesSum + downVotesSum);\n    }\n\n    return { score: finalScore, upvoteRatio: ratio.toFixed(2), entryId: data.entryId };\n  });\n\n  const getVoteRatio = { execute, name: 'getVoteRatio' };\n  const service = function () {\n    return getVoteRatio;\n  };\n  sp().service(ENTRY_MODULE.getVoteRatio, service);\n  return getVoteRatio;\n}\n"]}