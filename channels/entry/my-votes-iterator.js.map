{"version":3,"file":"my-votes-iterator.js","sourceRoot":"","sources":["my-votes-iterator.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Promise from 'bluebird';\nimport { descend, head, last, prop, sortWith, take } from 'ramda';\nimport { CORE_MODULE, ENTRY_MODULE } from '@akashaproject/common/constants';\n\nconst myVotesIteratorS = {\n  id: '/myVotesIterator',\n  type: 'object',\n  properties: {\n    limit: { type: 'number' },\n    toBlock: { type: 'number' },\n    lastIndex: { type: 'number' },\n    ethAddress: { type: 'string', format: 'address' },\n    reversed: { type: 'boolean' },\n    totalLoaded: { type: 'number' },\n  },\n  required: ['toBlock'],\n};\n\nexport default function init (sp, getService) {\n  const execute = Promise.coroutine(function* (data) {\n\n    const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n    const web3Api = getService(CORE_MODULE.WEB3_API);\n    const contracts = getService(CORE_MODULE.CONTRACTS);\n    v.validate(data, myVotesIteratorS, { throwError: true });\n    const etherBase = (data.ethAddress) ? data.ethAddress : web3Api.instance.eth.defaultAccount;\n\n    const collection = [];\n    const record = yield contracts.instance.Votes.totalVotesOf(etherBase);\n    let maxResults = record[1].toString() === '0' ? 0 : data.limit || 5;\n    if (maxResults > record[1].toNumber()) {\n      maxResults = record[1].toNumber();\n    }\n    if (record[0].toNumber() <= data.totalLoaded) {\n      return { collection: [], lastBlock: 0 };\n    }\n    if (data.totalLoaded) {\n      const nextTotal = data.totalLoaded + maxResults;\n      if (nextTotal > record[1].toNumber()) {\n        maxResults = record[1].toNumber() - data.totalLoaded;\n      }\n    }\n    const filter = { voter: etherBase, voteType: 0 };\n    const fetched = yield contracts\n      .fromEvent(\n        contracts.instance.Votes.Vote, filter, data.toBlock, maxResults,\n        { lastIndex: data.lastIndex, reversed: data.reversed || false });\n    for (const event of fetched.results) {\n      const weight = (event.args.weight).toString(10);\n\n      collection.push({\n        weight: event.args.negative ? '-' + weight : weight,\n        entryId: event.args.target,\n        logIndex: event.logIndex,\n        blockNumber: event.blockNumber,\n        isVote: true,\n      });\n\n      if (collection.length === maxResults) {\n        break;\n      }\n    }\n    const entryCount = yield contracts.instance.Entries.getEntryCount(etherBase);\n\n    let entryMaxResults = entryCount.toNumber() === 0 ? 0 : data.limit || 5;\n    if (entryMaxResults > entryCount.toNumber()) {\n      entryMaxResults = entryCount.toNumber();\n    }\n\n    const fetchedEntries = yield contracts\n      .fromEvent(\n        contracts.instance.Entries.Publish, { author: etherBase }, data.toBlock,\n        entryMaxResults, { lastIndex: data.lastIndex, reversed: data.reversed || false });\n    for (const event of fetchedEntries.results) {\n      collection.push({\n        entryId: event.args.entryId,\n        blockNumber: event.blockNumber,\n        logIndex: event.logIndex,\n        isVote: false,\n      });\n    }\n    const sortedResults = take(\n      data.limit || 5,\n      sortWith(\n        [descend(prop('blockNumber')),\n          descend(prop('logIndex'))],\n        collection));\n    const lastLog = data.reversed ? head(sortedResults) : last(sortedResults);\n    const [lastIndex, lastBlock] = lastLog ? [lastLog.logIndex, lastLog.blockNumber] : [0, 0];\n\n    return { lastBlock, lastIndex, collection: sortedResults };\n  });\n\n  const myVotesIterator = { execute, name: 'myVotesIterator' };\n  const service = function () {\n    return myVotesIterator;\n  };\n  sp().service(ENTRY_MODULE.myVotesIterator, service);\n  return myVotesIterator;\n}\n"]}