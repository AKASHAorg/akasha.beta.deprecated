{"version":3,"file":"entry-profile-iterator.js","sourceRoot":"","sources":["entry-profile-iterator.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Promise from 'bluebird';\nimport { COMMON_MODULE, CORE_MODULE, ENTRY_MODULE } from '@akashaproject/common/constants';\n\nconst entryProfileIteratorS = {\n  id: '/entryProfileIterator',\n  type: 'object',\n  properties: {\n    limit: { type: 'number' },\n    toBlock: { type: 'number' },\n    akashaId: { type: 'string' },\n    ethAddress: { type: 'string', format: 'address' },\n    reversed: { type: 'boolean' },\n    totalLoaded: { type: 'number' },\n  },\n  required: ['toBlock'],\n};\n\nexport default function init (sp, getService) {\n  const execute = Promise.coroutine(function* (data) {\n\n    const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n    v.validate(data, entryProfileIteratorS, { throwError: true });\n    const address = yield (getService(COMMON_MODULE.profileHelpers)).profileAddress(data);\n    if (!address) {\n      throw new Error('No eth address specified!');\n    }\n    const entryCount = yield (getService(CORE_MODULE.CONTRACTS))\n      .instance.Entries.getEntryCount(address);\n\n    let maxResults = entryCount.toNumber() === 0 ? 0 : data.limit || 5;\n    if (maxResults > entryCount.toNumber()) {\n      maxResults = entryCount.toNumber();\n    }\n    if (!address || entryCount <= data.totalLoaded) {\n      return { collection: [], lastBlock: 0 };\n    }\n    if (data.totalLoaded) {\n      const nextTotal = data.totalLoaded + maxResults;\n      if (nextTotal > entryCount) {\n        maxResults = entryCount - data.totalLoaded;\n      }\n    }\n\n    return getService(ENTRY_MODULE.helpers).fetchFromPublish(Object.assign({}, data, {\n      limit: maxResults,\n      args: { author: address },\n      reversed: data.reversed || false,\n    }));\n  });\n\n  const entryProfileIterator = { execute, name: 'entryProfileIterator' };\n  const service = function () {\n    return entryProfileIterator;\n  };\n  sp().service(ENTRY_MODULE.entryProfileIterator, service);\n  return entryProfileIterator;\n}\n"]}