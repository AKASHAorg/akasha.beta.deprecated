{"version":3,"file":"entry-count-profile.js","sourceRoot":"","sources":["entry-count-profile.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,+DAA2F;AAE3F,MAAM,uBAAuB,GAAG;IAC9B,EAAE,EAAE,yBAAyB;IAC7B,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACV,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC5B,UAAU,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE;KAClD;CACF,CAAC;AAEF,cAA6B,EAAE,EAAE,UAAU;IACzC,MAAM,OAAO,GAAG,OAAO;SACtB,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAgD;QACpE,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,uBAAW,CAAC,gBAAgB,CAAC,CAAC,SAAS,EAAE,CAAC;QACnE,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,uBAAuB,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QAEhE,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,yBAAa,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACpF,MAAM,KAAK,GAAG,MAAM,UAAU,CAAC,uBAAW,CAAC,SAAS,CAAC;aACpD,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,MAAM,sBAAsB,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,wBAAwB,EAAE,CAAC;IAC3E,MAAM,OAAO,GAAG;QACd,OAAO,sBAAsB,CAAC;IAChC,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,wBAAY,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAC;IAC3D,OAAO,sBAAsB,CAAC;AAChC,CAAC;AAlBD,uBAkBC","sourcesContent":["import * as Promise from 'bluebird';\nimport { COMMON_MODULE, CORE_MODULE, ENTRY_MODULE } from '@akashaproject/common/constants';\n\nconst getProfileEntriesCountS = {\n  id: '/getProfileEntriesCount',\n  type: 'object',\n  properties: {\n    akashaId: { type: 'string' },\n    ethAddress: { type: 'string', format: 'address' },\n  },\n};\n\nexport default function init(sp, getService) {\n  const execute = Promise\n  .coroutine(function* (data: { ethAddress?: string, akashaId?: string }) {\n    const v = new getService(CORE_MODULE.VALIDATOR_SCHEMA).Validator();\n    v.validate(data, getProfileEntriesCountS, { throwError: true });\n\n    const address = yield getService(COMMON_MODULE.profileHelpers).profileAddress(data);\n    const count = yield getService(CORE_MODULE.CONTRACTS)\n    .instance.Entries.getEntryCount(address);\n    return { count: count.toString(10) };\n  });\n\n  const getProfileEntriesCount = { execute, name: 'getProfileEntriesCount' };\n  const service = function () {\n    return getProfileEntriesCount;\n  };\n  sp().service(ENTRY_MODULE.getProfileEntriesCount, service);\n  return getProfileEntriesCount;\n}\n"]}