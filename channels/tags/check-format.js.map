{"version":3,"file":"check-format.js","sourceRoot":"","sources":["check-format.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,+DAA2E;AAE9D,QAAA,iBAAiB,GAAG;IAC/B,EAAE,EAAE,cAAc;IAClB,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACV,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;KAC5B;IACD,QAAQ,EAAE,CAAC,SAAS,CAAC;CACtB,CAAC;AAEF,SAAwB,IAAI,CAAC,EAAE,EAAE,UAAU;IACzC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAI;QAC/C,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,uBAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACrE,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,yBAAiB,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QAE1D,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,uBAAW,CAAC,SAAS,CAAC,CAAC;aACrD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3C,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;IACrD,MAAM,OAAO,GAAG;QACd,OAAO,WAAW,CAAC;IACrB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,uBAAW,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IAE/C,OAAO,WAAW,CAAC;AACrB,CAAC;AAjBD,uBAiBC","sourcesContent":["import * as Promise from 'bluebird';\nimport { CORE_MODULE, TAGS_MODULE } from '@akashaproject/common/constants';\n\nexport const checkFormatSchema = {\n  id: '/checkFormat',\n  type: 'object',\n  properties: {\n    tagName: { type: 'string' },\n  },\n  required: ['tagName'],\n};\n\nexport default function init(sp, getService) {\n  const execute = Promise.coroutine(function* (data) {\n    const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n    v.validate(data, checkFormatSchema, { throwError: true });\n\n    const status = yield (getService(CORE_MODULE.CONTRACTS))\n      .instance.Tags.checkFormat(data.tagName);\n    return { status, tagName: data.tagName };\n  });\n\n  const checkFormat = { execute, name: 'checkFormat' };\n  const service = function () {\n    return checkFormat;\n  };\n  sp().service(TAGS_MODULE.checkFormat, service);\n\n  return checkFormat;\n}\n"]}