{"version":3,"file":"subscribe.js","sourceRoot":"","sources":["subscribe.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Promise from 'bluebird';\nimport { isNil } from 'ramda';\nimport { CORE_MODULE, NOTIFICATIONS_MODULE } from '@akashaproject/common/constants';\n\nconst installedFilters = {\n  feed: null,\n  donations: null,\n  comments: null,\n  votes: null,\n};\nconst subscribe = {\n  id: '/subscribeSchema',\n  type: 'object',\n  properties: {\n    settings: {\n      type: 'object',\n      properties: {\n        feed: { type: 'boolean' },\n        donations: { type: 'boolean' },\n        comments: { type: 'boolean' },\n        votes: { type: 'boolean' },\n      },\n      required: ['feed', 'donations', 'comments', 'votes'],\n    },\n    profile: {\n      type: 'object',\n      properties: {\n        akashaId: { type: 'string' },\n        ethAddress: { type: 'string', format: 'address' },\n      },\n    },\n    fromBlock: { type: 'number' },\n  },\n  required: ['profile', 'fromBlock'],\n};\n\nexport default function init(sp, getService) {\n\n  const execute = Promise.coroutine(function* (data, cb) {\n    const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n    v.validate(data, subscribe, { throwError: true });\n\n    const watchFilter = Object.assign({}, data.profile, { fromBlock: data.fromBlock });\n    if (data.settings) {\n      Object.keys(installedFilters).forEach((eventType) => {\n        if (!data.settings[eventType] && installedFilters[eventType]) {\n          installedFilters[eventType].stopWatching(() =>\n            console.log('stopped watching event', eventType));\n\n          installedFilters[eventType] = null;\n          if (eventType === 'votes') {\n            getService(NOTIFICATIONS_MODULE.entriesCache).reset();\n          }\n        }\n      });\n    }\n\n    if ((!data.settings ||\n      isNil(data.settings.feed) ||\n      data.settings.feed) &&\n      !installedFilters.feed) {\n\n      installedFilters.feed = yield getService(NOTIFICATIONS_MODULE.feed)\n      .execute(watchFilter, cb);\n\n    }\n\n    if ((!data.settings ||\n      isNil(data.settings.donations) ||\n      data.settings.donations) &&\n      !installedFilters.donations) {\n\n      installedFilters.donations = yield getService(NOTIFICATIONS_MODULE.donations)\n      .execute(watchFilter, cb);\n\n    }\n\n    if ((!data.settings ||\n      isNil(data.settings.comments) ||\n      data.settings.comments) &&\n      !installedFilters.comments) {\n\n      installedFilters.comments = yield getService(NOTIFICATIONS_MODULE.comments)\n      .execute(watchFilter, cb);\n\n    }\n\n    if ((!data.settings ||\n      isNil(data.settings.votes) ||\n      data.settings.votes) && !installedFilters.votes) {\n\n      installedFilters.votes = yield (getService(NOTIFICATIONS_MODULE.votes))\n      .execute(watchFilter, cb);\n    }\n\n    return { watching: true };\n  });\n\n  const subscribeT = { execute, name: 'subscribe', hasStream: true };\n  const service = function () {\n    return subscribeT;\n  };\n  sp().service(NOTIFICATIONS_MODULE.subscribe, service);\n\n  return subscribeT;\n}\n"]}