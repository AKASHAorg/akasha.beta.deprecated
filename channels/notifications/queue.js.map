{"version":3,"file":"queue.js","sourceRoot":"","sources":["queue.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,OAAO,CAAC;AACvC,OAAO,EAAE,oBAAoB,EAAE,MAAM,iCAAiC,CAAC;AAEvE,MAAM,CAAC,OAAO,UAAU,IAAI,CAAE,EAAE,EAAE,UAAU;IAE1C,MAAM,aAAa;QAAnB;YACS,UAAK,GAAG,EAAE,CAAC;YAEV,iBAAY,GAAG,IAAI,CAAC;YACpB,eAAU,GAAG,CAAC,CAAC;QAgCzB,CAAC;QA9BQ,IAAI,CAAE,EAAO,EAAE,YAAkB;YACtC,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC5B;YACD,IAAI,YAAY,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;gBACvD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC/B;YACD,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE;gBAC7B,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAChB,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACxB,CAAC;QAEM,KAAK;YACV,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACxB,CAAC;QAEO,IAAI,CAAE,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACnD,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC9B,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;aAC5B;YAED,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACrB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACf;QACH,CAAC;KACF;IAED,MAAM,KAAK,GAAG,IAAI,aAAa,EAAE,CAAC;IAClC,MAAM,OAAO,GAAG;QACd,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,oBAAoB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAClD,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import { contains, uniq } from 'ramda';\nimport { NOTIFICATIONS_MODULE } from '@akashaproject/common/constants';\n\nexport default function init (sp, getService) {\n\n  class Notifications {\n    public queue = [];\n    private timeout;\n    private COLLECT_TIME = 3000;\n    private BATCH_SIZE = 3;\n\n    public push (cb: any, notification?: any) {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n      if (notification && !contains(notification, this.queue)) {\n        this.queue.push(notification);\n      }\n      this.timeout = setTimeout(() => {\n        this.emit(cb);\n      }, this.COLLECT_TIME);\n    }\n\n    public clear () {\n      clearTimeout(this.timeout);\n      this.queue.length = 0;\n    }\n\n    private emit (cb) {\n      this.queue = uniq(this.queue);\n      const count = (this.queue.length > this.BATCH_SIZE) ?\n        this.BATCH_SIZE : this.queue.length;\n\n      for (let i = 0; i < count; i++) {\n        cb('', this.queue.shift());\n      }\n\n      if (this.queue.length) {\n        this.push(cb);\n      }\n    }\n  }\n\n  const queue = new Notifications();\n  const service = function () {\n    return queue;\n  };\n  sp().service(NOTIFICATIONS_MODULE.queue, service);\n  return queue;\n}\n"]}