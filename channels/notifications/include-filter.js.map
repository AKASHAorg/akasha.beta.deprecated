{"version":3,"file":"include-filter.js","sourceRoot":"","sources":["include-filter.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,6CAAsC;AACtC,+DAAuE;AAEvE,cAA6B,EAAE,EAAE,UAAU;IAEzC,MAAM,OAAO,GAAG,OAAO;SACtB,SAAS,CAAC,QAAQ,CAAC,EAAE,IAA4B;QAChD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,EAAE;YACvC,mBAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,MAAM,aAAa,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC;IACzD,MAAM,OAAO,GAAG;QACd,OAAO,aAAa,CAAC;IACvB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,gCAAoB,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;IAC1D,OAAO,aAAa,CAAC;AACvB,CAAC;AAhBD,uBAgBC","sourcesContent":["import * as Promise from 'bluebird';\nimport { filter } from './set-filter';\nimport { NOTIFICATIONS_MODULE } from '@akashaproject/common/constants';\n\nexport default function init(sp, getService) {\n\n  const execute = Promise\n  .coroutine(function* (data: { profiles: string[] }) {\n    data.profiles.forEach((profileAddress) => {\n      filter.appendAddress(profileAddress);\n    });\n    return Promise.resolve({ profiles: data.profiles });\n  });\n\n  const includeFilter = { execute, name: 'includeFilter' };\n  const service = function () {\n    return includeFilter;\n  };\n  sp().service(NOTIFICATIONS_MODULE.includeFilter, service);\n  return includeFilter;\n}\n"]}