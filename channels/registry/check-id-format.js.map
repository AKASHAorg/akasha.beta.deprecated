{"version":3,"file":"check-id-format.js","sourceRoot":"","sources":["check-id-format.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,+DAA+E;AAElE,QAAA,mBAAmB,GAAG;IACjC,EAAE,EAAE,gBAAgB;IACpB,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACV,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE;KAC3C;IACD,QAAQ,EAAE,CAAC,UAAU,CAAC;CACvB,CAAC;AAEF,cAA6B,EAAE,EAAE,UAAU;IACzC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAI;QAC/C,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,uBAAW,CAAC,gBAAgB,CAAC,CAAC,SAAS,EAAE,CAAC;QACnE,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,2BAAmB,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QAE5D,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,uBAAW,CAAC,SAAS,CAAC;aACpD,QAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,MAAM,aAAa,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC;IACzD,MAAM,OAAO,GAAG;QACd,OAAO,aAAa,CAAC;IACvB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,2BAAe,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;IAErD,OAAO,aAAa,CAAC;AACvB,CAAC;AAjBD,uBAiBC","sourcesContent":["import * as Promise from 'bluebird';\nimport { CORE_MODULE, REGISTRY_MODULE } from '@akashaproject/common/constants';\n\nexport const checkIdFormatSchema = {\n  id: '/checkIdFormat',\n  type: 'object',\n  properties: {\n    akashaId: { type: 'string', minLength: 2 },\n  },\n  required: ['akashaId'],\n};\n\nexport default function init(sp, getService) {\n  const execute = Promise.coroutine(function* (data) {\n    const v = new getService(CORE_MODULE.VALIDATOR_SCHEMA).Validator();\n    v.validate(data, checkIdFormatSchema, { throwError: true });\n\n    const idValid = yield getService(CORE_MODULE.CONTRACTS)\n      .instance.ProfileRegistrar.check_format(data.akashaId);\n    return { idValid, akashaId: data.akashaId };\n  });\n\n  const checkIdFormat = { execute, name: 'checkIdFormat' };\n  const service = function () {\n    return checkIdFormat;\n  };\n  sp().service(REGISTRY_MODULE.checkIdFormat, service);\n\n  return checkIdFormat;\n}\n"]}