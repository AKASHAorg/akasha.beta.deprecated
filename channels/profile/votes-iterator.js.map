{"version":3,"file":"votes-iterator.js","sourceRoot":"","sources":["votes-iterator.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Promise from 'bluebird';\nimport { COMMON_MODULE, CORE_MODULE, PROFILE_MODULE } from '@akashaproject/common/constants';\n\nexport const votesIterator = {\n  id: '/votesIterator',\n  type: 'object',\n  properties: {\n    ethAddress: { type: 'string', format: 'address' },\n    akashaId: { type: 'string' },\n    lastBlock: { type: 'number' },\n    lastIndex: { type: 'number' },\n    limit: { type: 'number' },\n    reversed: { type: 'boolean' },\n  },\n  required: ['lastBlock'],\n};\n\nexport default function init(sp, getService) {\n\n  const execute = Promise.coroutine(function* (data) {\n    const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n    v.validate(data, votesIterator, { throwError: true });\n\n    const collection = [];\n    const maxResults = data.limit || 5;\n    const web3Api = getService(CORE_MODULE.WEB3_API);\n    const contracts = getService(CORE_MODULE.CONTRACTS);\n    const address = yield (getService(COMMON_MODULE.profileHelpers)).profileAddress(data);\n    const toBlock = (!data.lastBlock) ?\n      yield web3Api.instance.eth.getBlockNumber() : data.lastBlock;\n    const fetched = yield contracts.fromEvent(\n      contracts.instance.Votes.Vote,\n      { voter: address, voteType: data.voteType },\n      toBlock,\n      maxResults,\n      { lastIndex: data.lastIndex, reversed: data.reversed || false },\n    );\n\n    for (const event of fetched.results) {\n      collection.push({\n        voter: event.args.voter,\n        target: event.args.target,\n        voteType: (event.args.voteType).toString(),\n        weight: (event.args.weight).toString(),\n        negative: event.args.negative,\n      });\n    }\n    return {\n      collection,\n      lastBlock: fetched.fromBlock,\n      lastIndex: fetched.lastIndex,\n      akashaId: data.akashaId,\n      limit: maxResults,\n    };\n  });\n  const votesIteratorService = { execute, name: 'votesIterator' };\n  const service = function () {\n    return votesIteratorService;\n  };\n  sp().service(PROFILE_MODULE.votesIterator, service);\n  return votesIteratorService;\n}\n"]}