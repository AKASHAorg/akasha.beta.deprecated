{"version":3,"file":"comments-iterator.js","sourceRoot":"","sources":["comments-iterator.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Promise from 'bluebird';\nimport { COMMON_MODULE, CORE_MODULE, PROFILE_MODULE } from '@akashaproject/common/constants';\nimport { unpad } from 'ethereumjs-util';\n\nexport const commentsIteratorSchema = {\n  id: '/commentsIterator',\n  type: 'object',\n  properties: {\n    ethAddress: { type: 'string', format: 'address' },\n    akashaId: { type: 'string' },\n    lastBlock: { type: 'number' },\n    lastIndex: { type: 'number' },\n    limit: { type: 'number' },\n    reversed: { type: 'boolean' },\n  },\n  required: ['lastBlock'],\n};\n\nexport default function init (sp, getService) {\n\n  const execute = Promise\n    .coroutine(function* (data) {\n      const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n      v.validate(data, commentsIteratorSchema, { throwError: true });\n\n      const collection = [];\n      const maxResults = data.limit || 5;\n      const address = yield (getService(COMMON_MODULE.profileHelpers)).profileAddress(data);\n      const toBlock = (!data.lastBlock) ?\n        yield (getService(CORE_MODULE.WEB3_API))\n          .instance.eth.getBlockNumber() : data.lastBlock;\n\n      const contracts = getService(CORE_MODULE.CONTRACTS);\n      const fetched = yield contracts.fromEvent(\n        contracts.instance.Comments.Publish,\n        { author: address },\n        toBlock,\n        maxResults,\n        { lastIndex: data.lastIndex, reversed: data.reversed || false },\n      );\n\n      for (const event of fetched.results) {\n        collection.push({\n          author: event.args.author,\n          entryId: event.args.entryId,\n          parent: unpad(event.args.parent),\n          commentId: event.args.id,\n        });\n      }\n      return {\n        collection,\n        lastBlock: fetched.fromBlock,\n        lastIndex: fetched.lastIndex,\n        akashaId: data.akashaId,\n        limit: maxResults,\n      };\n    });\n\n  const commentsIterator = { execute, name: 'commentsIterator' };\n  const service = function () {\n    return commentsIterator;\n  };\n  sp().service(PROFILE_MODULE.commentsIterator, service);\n  return commentsIterator;\n}\n"]}