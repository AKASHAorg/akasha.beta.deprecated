{"version":3,"file":"is-follower.js","sourceRoot":"","sources":["is-follower.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,UAAU,CAAC;AACpC,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,iCAAiC,CAAC;AAE7F,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC9B,EAAE,EAAE,aAAa;IACjB,IAAI,EAAE,OAAO;IACb,KAAK,EAAE;QACL,IAAI,EAAE,QAAQ;QACd,UAAU,EAAE;YACV,kBAAkB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE;YACzD,mBAAmB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE;YAC1D,gBAAgB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YACpC,iBAAiB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;SACtC;KACF;IACD,QAAQ,EAAE,CAAC;CACZ,CAAC;AAEF,MAAM,CAAC,OAAO,UAAU,IAAI,CAAE,EAAE,EAAE,UAAU;IAE1C,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAC/B,QAAQ,CAAC,EAAE,IAAI;QACb,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACrE,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,gBAAgB,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QACzD,MAAM,cAAc,GAAG,UAAU,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAChE,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YAChC,IAAI,eAAe,CAAC;YACpB,IAAI,gBAAgB,CAAC;YACrB,OAAO,cAAc;iBAClB,cAAc,CACb,EAAE,QAAQ,EAAE,GAAG,CAAC,gBAAgB,EAAE,UAAU,EAAE,GAAG,CAAC,kBAAkB,EAAE,CAAC;iBACxE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gBACd,eAAe,GAAG,KAAK,CAAC;gBACxB,OAAO,cAAc,CAAC,cAAc,CAClC,EAAE,QAAQ,EAAE,GAAG,CAAC,iBAAiB,EAAE,UAAU,EAAE,GAAG,CAAC,mBAAmB,EAAE,CAAC,CAAC;YAC9E,CAAC,CAAC;iBACD,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gBACd,gBAAgB,GAAG,KAAK,CAAC;gBACzB,OAAO,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC;qBACrC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;YAE9D,CAAC,CAAC;iBACD,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACf,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,gBAAgB,EAAE,CAAC;YACvD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/C,OAAO,EAAE,UAAU,EAAE,CAAC;IACxB,CAAC,CAAC,CAAC;IACL,MAAM,UAAU,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;IACnD,MAAM,OAAO,GAAG;QACd,OAAO,UAAU,CAAC;IACpB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IAEjD,OAAO,UAAU,CAAC;AACpB,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { COMMON_MODULE, CORE_MODULE, PROFILE_MODULE } from '@akashaproject/common/constants';\n\nexport const isFollowerSchema = {\n  id: '/isFollower',\n  type: 'array',\n  items: {\n    type: 'object',\n    properties: {\n      ethAddressFollower: { type: 'string', format: 'address' },\n      ethAddressFollowing: { type: 'string', format: 'address' },\n      akashaIdFollower: { type: 'string' },\n      akashaIdFollowing: { type: 'string' },\n    },\n  },\n  minItems: 1,\n};\n\nexport default function init (sp, getService) {\n\n  const execute = Promise.coroutine(\n    function* (data) {\n      const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n      v.validate(data, isFollowerSchema, { throwError: true });\n      const profileHelpers = getService(COMMON_MODULE.profileHelpers);\n      const requests = data.map((req) => {\n        let addressFollower;\n        let addressFollowing;\n        return profileHelpers\n          .profileAddress(\n            { akashaId: req.akashaIdFollower, ethAddress: req.ethAddressFollower })\n          .then((data1) => {\n            addressFollower = data1;\n            return profileHelpers.profileAddress(\n              { akashaId: req.akashaIdFollowing, ethAddress: req.ethAddressFollowing });\n          })\n          .then((data1) => {\n            addressFollowing = data1;\n            return getService(CORE_MODULE.CONTRACTS)\n              .instance.Feed.follows(addressFollower, addressFollowing);\n\n          })\n          .then((result) => {\n            return { result, addressFollower, addressFollowing };\n          });\n      });\n\n      const collection = yield Promise.all(requests);\n      return { collection };\n    });\n  const isFollower = { execute, name: 'isFollower' };\n  const service = function () {\n    return isFollower;\n  };\n  sp().service(PROFILE_MODULE.isFollower, service);\n\n  return isFollower;\n}\n"]}