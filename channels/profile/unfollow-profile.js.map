{"version":3,"file":"unfollow-profile.js","sourceRoot":"","sources":["unfollow-profile.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,+DAA6F;AAC7F,qDAAuD;AAEvD,SAAwB,IAAI,CAAC,EAAE,EAAE,UAAU;IACzC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE;QACnD,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,uBAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACrE,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,oCAAmB,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5D,MAAM,SAAS,GAAG,UAAU,CAAC,uBAAW,CAAC,SAAS,CAAC,CAAC;QAEpD,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,yBAAa,CAAC,cAAc,CAAC,CAAC;aAC/D,cAAc,CAAC,IAAI,CAAC,CAAC;QAEtB,MAAM,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI;aACrC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;QAE5C,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC7D,UAAU,CAAC,uBAAW,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAC5C,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,MAAM,eAAe,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IAC9E,MAAM,OAAO,GAAG;QACd,OAAO,eAAe,CAAC;IACzB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,0BAAc,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;IAEtD,OAAO,eAAe,CAAC;AACzB,CAAC;AAxBD,uBAwBC","sourcesContent":["import * as Promise from 'bluebird';\nimport { COMMON_MODULE, CORE_MODULE, PROFILE_MODULE } from '@akashaproject/common/constants';\nimport { followProfileSchema } from './follow-profile';\n\nexport default function init(sp, getService) {\n  const execute = Promise.coroutine(function* (data, cb) {\n    const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n    v.validate(data, followProfileSchema, { throwError: true });\n    const contracts = getService(CORE_MODULE.CONTRACTS);\n\n    const address = yield (getService(COMMON_MODULE.profileHelpers))\n    .profileAddress(data);\n\n    const txData = contracts.instance.Feed\n    .unFollow.request(address, { gas: 400000 });\n\n    const receipt = yield contracts.send(txData, data.token, cb);\n    getService(CORE_MODULE.STASH).mixed.flush();\n    return { receipt, akashaId: data.akashaId };\n  });\n\n  const unFollowProfile = { execute, name: 'unFollowProfile', hasStream: true };\n  const service = function () {\n    return unFollowProfile;\n  };\n  sp().service(PROFILE_MODULE.unFollowProfile, service);\n\n  return unFollowProfile;\n}\n"]}