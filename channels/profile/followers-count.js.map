{"version":3,"file":"followers-count.js","sourceRoot":"","sources":["followers-count.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,UAAU,CAAC;AACpC,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,iCAAiC,CAAC;AAE7F,MAAM,CAAC,MAAM,uBAAuB,GAAG;IACrC,EAAE,EAAE,oBAAoB;IACxB,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACV,UAAU,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE;QACjD,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;KAC7B;CACF,CAAC;AAEF,MAAM,CAAC,OAAO,UAAU,IAAI,CAAE,EAAE,EAAE,UAAU;IAE1C,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAI;QAC/C,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACrE,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,uBAAuB,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QAEhE,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;aAC7D,cAAc,CAAC,IAAI,CAAC,CAAC;QAExB,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ;aAC7D,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAEhC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,MAAM,cAAc,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC;IAC9D,MAAM,OAAO,GAAG;QACd,OAAO,cAAc,CAAC;IACxB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;IAErD,OAAO,cAAc,CAAC;AACxB,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { COMMON_MODULE, CORE_MODULE, PROFILE_MODULE } from '@akashaproject/common/constants';\n\nexport const getFollowersCountSchema = {\n  id: '/getFollowersCount',\n  type: 'object',\n  properties: {\n    ethAddress: { type: 'string', format: 'address' },\n    akashaId: { type: 'string' },\n  },\n};\n\nexport default function init (sp, getService) {\n\n  const execute = Promise.coroutine(function* (data) {\n    const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n    v.validate(data, getFollowersCountSchema, { throwError: true });\n\n    const address = yield (getService(COMMON_MODULE.profileHelpers))\n      .profileAddress(data);\n\n    const count = yield (getService(CORE_MODULE.CONTRACTS)).instance\n      .Feed.totalFollowers(address);\n\n    return { count: count.toString(10), akashaId: data.akashaId };\n  });\n\n  const followersCount = { execute, name: 'getFollowersCount' };\n  const service = function () {\n    return followersCount;\n  };\n  sp().service(PROFILE_MODULE.followersCount, service);\n\n  return followersCount;\n}\n"]}