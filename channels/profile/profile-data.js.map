{"version":3,"file":"profile-data.js","sourceRoot":"","sources":["profile-data.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Promise from 'bluebird';\nimport { COMMON_MODULE, CORE_MODULE, GENERAL_SETTINGS, PROFILE_MODULE } from '@akashaproject/common/constants';\nimport { unpad } from 'ethereumjs-util';\n\nexport const getProfileDataSchema = {\n  id: '/getProfileData',\n  type: 'object',\n  properties: {\n    akashaId: { type: 'string' },\n    ethAddress: { type: 'string', format: 'address' },\n    short: { type: 'boolean' },\n    full: { type: 'boolean' },\n    resolveImages: { type: 'boolean' },\n  },\n};\n\nexport default function init(sp, getService) {\n\n  const execute: any = Promise.coroutine(function* (data: any, cb) {\n    const v = new getService(CORE_MODULE.VALIDATOR_SCHEMA).Validator();\n    v.validate(data, getProfileDataSchema, { throwError: true });\n\n    let profile;\n    let akashaId;\n    const web3Api = getService(CORE_MODULE.WEB3_API);\n    const contracts = getService(CORE_MODULE.CONTRACTS);\n    const settings = getService(CORE_MODULE.SETTINGS);\n    const dbIndex = getService(CORE_MODULE.DB_INDEX);\n    const followingCount = getService(PROFILE_MODULE.followingCount);\n    const followersCount = getService(PROFILE_MODULE.followersCount);\n    const resolveEthAddress = getService(PROFILE_MODULE.resolveEthAddress);\n    const entryCountProfile = getService(PROFILE_MODULE.entryCountProfile);\n    const resolveProfile = getService(PROFILE_MODULE.resolveProfile);\n    const getShortProfile = getService(PROFILE_MODULE.getShortProfile);\n\n    const ethAddress = yield getService(COMMON_MODULE.profileHelpers).profileAddress(data);\n    if (data.ethAddress) {\n      const resolved = yield resolveEthAddress.execute({ ethAddress: data.ethAddress });\n      akashaId = resolved.akashaId;\n    }\n    akashaId = akashaId || data.akashaId;\n    const akashaIdHash = yield contracts.instance.ProfileRegistrar.hash(akashaId || '');\n    const [, , donationsEnabled,\n      fn, digestSize, hash] = yield contracts.instance.ProfileResolver.resolve(akashaIdHash);\n    const foCount = yield followingCount.execute({ ethAddress });\n    const fwCount = yield followersCount.execute({ ethAddress });\n    const entriesCount = yield entryCountProfile.execute({ ethAddress });\n    const commentsCount = yield contracts.instance.Comments.totalCommentsOf(ethAddress);\n    const [karma, essence] = yield contracts.instance.Essence.getCollected(ethAddress);\n    const partialProfile = {\n      akashaId,\n      ethAddress,\n      donationsEnabled,\n      followingCount: foCount.count,\n      followersCount: fwCount.count,\n      entriesCount: entriesCount.count,\n      commentsCount: commentsCount.toString(10),\n      [GENERAL_SETTINGS.BASE_URL]: settings.get(GENERAL_SETTINGS.BASE_URL),\n      karma: (web3Api.instance.fromWei(karma, 'ether')).toFormat(5),\n      essence: (web3Api.instance.fromWei(essence, 'ether')).toFormat(5),\n    };\n    cb('', partialProfile);\n    if (!!unpad(hash)) {\n      const ipfsHash = getService(COMMON_MODULE.ipfsHelpers).encodeHash(fn, digestSize, hash);\n      if (data.short) {\n        profile = { ipfsHash };\n      } else {\n        profile = (data.full) ?\n          yield resolveProfile(ipfsHash, data.resolveImages)\n          .timeout(settings.get(GENERAL_SETTINGS.FULL_WAIT_TIME) || 25000)\n          .then((d) => d).catch((e) => null)\n          :\n          yield getShortProfile(ipfsHash, data.resolveImages)\n          .timeout(settings.get(GENERAL_SETTINGS.OP_WAIT_TIME) || 15000)\n          .then((d) => d).catch((e) => null);\n      }\n\n      dbIndex.profiles.searchIndex.concurrentAdd(\n        {},\n        [{ akashaId, id: ethAddress }],\n        (err) => {\n          if (err) {\n            console.warn('error storing PROFILE index', err);\n          }\n        });\n    }\n\n    return Object.assign({}, partialProfile, profile);\n\n  });\n\n  const profileData = { execute, name: 'getProfileData', hasStream: true };\n  const service = function () {\n    return profileData;\n  };\n  sp().service(PROFILE_MODULE.profileData, service);\n  return profileData;\n\n}\n"]}