{"version":3,"file":"current-balance.js","sourceRoot":"","sources":["current-balance.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Promise from 'bluebird';\nimport { CORE_MODULE, PROFILE_MODULE } from '@akashaproject/common/constants';\n\nexport const getBalanceSchema = {\n  id: '/getBalance',\n  type: 'object',\n  properties: {\n    ethAddress: { type: 'string', format: 'address' },\n    unit: { type: 'string' },\n  },\n};\nexport default function init(sp, getService) {\n\n  const execute = Promise\n  .coroutine(function* (data) {\n    const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n    v.validate(data, getBalanceSchema, { throwError: true });\n\n    const web3Api = getService(CORE_MODULE.WEB3_API);\n    const contracts = getService(CORE_MODULE.CONTRACTS);\n    const etherBase = (data.ethAddress) ?\n      data.ethAddress : web3Api.instance.eth.defaultAccount;\n\n    const unit = (data.unit) ? data.unit : 'ether';\n    const fromWei = web3Api.instance.utils.fromWei;\n    const weiAmount = yield web3Api.instance.eth.getBalance(etherBase);\n    const [free, bonded, cycling] = yield contracts\n    .instance.AETH.getTokenRecords(etherBase);\n\n    const [\n      manaTotal,\n      manaSpent,\n      manaRemaining] = yield contracts.instance.Essence.mana(etherBase);\n\n    const [karma, essence] = yield contracts.instance.Essence.getCollected(etherBase);\n    const essenceValue = yield contracts.instance.Essence.aethValueFrom(essence);\n    const symbol = 'AETH'; // yield contracts.instance.AETH.symbol();\n    const totalAeth = free.plus(bonded).plus(cycling);\n    const balance = fromWei(web3Api.instance.utils.toBN(weiAmount), unit);\n    return {\n      balance: balance.toFormat(5),\n      [symbol]: {\n        total: (fromWei(web3Api.instance.utils.toBN(totalAeth))).toFormat(7),\n        free: (fromWei(web3Api.instance.utils.toBN(free))).toFormat(5),\n        bonded: (fromWei(web3Api.instance.utils.toBN(bonded))).toFormat(5),\n        cycling: (fromWei(web3Api.instance.utils.toBN(cycling))).toFormat(5),\n      },\n      mana: {\n        total: (fromWei(web3Api.instance.utils.toBN(manaTotal))).toFormat(5),\n        spent: (fromWei(web3Api.instance.utils.toBN(manaSpent))).toFormat(5),\n        remaining: (fromWei(web3Api.instance.utils.toBN(manaRemaining))).toFormat(5),\n      },\n      karma: { total: (fromWei(web3Api.instance.utils.toBN(karma))).toFormat(5) },\n      essence: {\n        total: (fromWei(web3Api.instance.utils.toBN(essence))).toFormat(5),\n        aethValue: (fromWei(web3Api.instance.utils.toBN(essenceValue))).toFormat(5),\n      }\n      , unit, etherBase,\n    };\n  });\n\n  const currentBalance = { execute, name: 'getBalance' };\n  const service = function () {\n    return currentBalance;\n  };\n  sp().service(PROFILE_MODULE.getBalance, service);\n  return currentBalance;\n}\n"]}