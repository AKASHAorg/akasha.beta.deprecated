{"version":3,"file":"current-balance.js","sourceRoot":"","sources":["current-balance.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Promise from 'bluebird';\nimport { CORE_MODULE, PROFILE_MODULE } from '@akashaproject/common/constants';\n\nexport const getBalanceSchema = {\n  id: '/getBalance',\n  type: 'object',\n  properties: {\n    ethAddress: { type: 'string', format: 'address' },\n    unit: { type: 'string' },\n  },\n};\nexport default function init(sp, getService) {\n\n  const execute = Promise\n  .coroutine(function* (data) {\n    const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n    v.validate(data, getBalanceSchema, { throwError: true });\n\n    const web3Api = getService(CORE_MODULE.WEB3_API);\n    const contracts = getService(CORE_MODULE.CONTRACTS);\n    const etherBase = (data.ethAddress) ?\n      data.ethAddress : web3Api.instance.eth.defaultAccount;\n\n    const unit = (data.unit) ? data.unit : 'ether';\n    const fromWei = web3Api.instance.fromWei;\n    const weiAmount = yield web3Api.instance.eth.getBalanceAsync(etherBase);\n    const [free, bonded, cycling] = yield contracts\n    .instance.AETH.getTokenRecords(etherBase);\n\n    const [\n      manaTotal,\n      manaSpent,\n      manaRemaining] = yield contracts.instance.Essence.mana(etherBase);\n\n    const [karma, essence] = yield contracts.instance.Essence.getCollected(etherBase);\n    const essenceValue = yield contracts.instance.Essence.aethValueFrom(essence);\n    const symbol = 'AETH'; // yield contracts.instance.AETH.symbol();\n    const totalAeth = free.plus(bonded).plus(cycling);\n    const balance = fromWei(weiAmount, unit);\n    return {\n      balance: balance.toFormat(5),\n      [symbol]: {\n        total: (fromWei(totalAeth)).toFormat(7),\n        free: (fromWei(free)).toFormat(5),\n        bonded: (fromWei(bonded)).toFormat(5),\n        cycling: (fromWei(cycling)).toFormat(5),\n      },\n      mana: {\n        total: (fromWei(manaTotal)).toFormat(5),\n        spent: (fromWei(manaSpent)).toFormat(5),\n        remaining: (fromWei(manaRemaining)).toFormat(5),\n      },\n      karma: { total: (fromWei(karma)).toFormat(5) },\n      essence: {\n        total: (fromWei(essence)).toFormat(5),\n        aethValue: (fromWei(essenceValue)).toFormat(5),\n      }\n      , unit, etherBase,\n    };\n  });\n\n  const currentBalance = { execute, name: 'getBalance' };\n  const service = function () {\n    return currentBalance;\n  };\n  sp().service(PROFILE_MODULE.getBalance, service);\n  return currentBalance;\n}\n"]}