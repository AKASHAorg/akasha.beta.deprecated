{"version":3,"file":"contracts.js","sourceRoot":"","sources":["contracts.ts"],"names":[],"mappings":"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","sourcesContent":["import * as BlPromise from 'bluebird';\nimport * as hash from 'object-hash';\nimport * as initContracts from '@akashaproject/contracts.js';\nimport { descend, filter, head, isNil, last, prop, sortWith, take, uniq } from 'ramda';\nimport { AUTH_MODULE, CORE_MODULE } from '@akashaproject/common/constants';\n\nexport default function init(sp, getService) {\n\n  class Contracts {\n    public instance: any;\n    public watchers: any[] = [];\n\n    public static watchTx(tx: string) {\n      const timeout = 300000;\n      const start = new Date().getTime();\n      return new BlPromise((resolve, reject) => {\n        const getReceipt = function () {\n          getService(CORE_MODULE.WEB3_API)\n          .instance\n          .eth.getTransactionReceipt(tx, (err, receipt) => {\n            if (receipt != null) {\n              return resolve({\n                tx,\n                receipt: {\n                  gasUsed: receipt.gasUsed,\n                  cumulativeGasUsed: receipt.cumulativeGasUsed,\n                  transactionHash: receipt.transactionHash,\n                  blockNumber: receipt.blockNumber,\n                  success: receipt.status === '0x1',\n                  logs: receipt.logs,\n                },\n              });\n            }\n\n            if (new Date().getTime() - start > timeout) {\n              return reject(new Error('Tx: ' + tx + ' timed out'));\n            }\n\n            setTimeout(getReceipt, 2000);\n          });\n\n        };\n        getReceipt();\n      });\n    }\n\n    /**\n     * Init web3 contract js bindings\n     */\n    public async init() {\n      this.instance = await initContracts(\n        getService(CORE_MODULE.WEB3_API).instance.currentProvider);\n    }\n\n    public reset() {\n      this.instance = null;\n    }\n\n    // send transaction and watch status\n    public async send(data: any, token: string, cb) {\n      const tx = await getService(AUTH_MODULE.auth).signData(data.params[0], token);\n      cb(null, { tx });\n      return Contracts.watchTx(tx);\n    }\n\n    public createWatcher(ethEvent: any, args: any, fromBlock: number) {\n      const currentWatcher = ethEvent(args, { fromBlock });\n      this.watchers.push(currentWatcher);\n      return currentWatcher;\n    }\n\n    public stopAllWatchers() {\n      this.watchers.forEach((watcher) => {\n        return watcher.stopWatching(() => {\n        });\n      });\n      this.watchers.length = 0;\n      return BlPromise.delay(1000);\n    }\n\n    public fromEvent(\n      ethEvent: any, args: any, toBlock: number | string, limit: number,\n      options: { lastIndex?: number, reversed?: boolean, stopOnFirst?: boolean },\n    ) {\n      const step = 5300;\n      const hashedEvent = hash(Array.from(arguments));\n      if (getService(CORE_MODULE.STASH).eventCache.hasFull(hashedEvent) &&\n        !options.reversed) {\n        return Promise.resolve(\n          getService(CORE_MODULE.STASH).eventCache.getFull(hashedEvent));\n      }\n      return new Promise((resolve, reject) => {\n        let results = [];\n        let filterIndex;\n        if (!options.reversed) {\n          filterIndex = (record) => record.blockNumber < toBlock ||\n            (record.blockNumber === toBlock && record.logIndex < options.lastIndex);\n        } else {\n          filterIndex = (record) => record.blockNumber > toBlock;\n        }\n\n        const fetch = (to) => {\n          let fromBlock = (options.reversed) ? toBlock : to - step;\n          if (fromBlock < 0) {\n            fromBlock = 0;\n          }\n          const event = ethEvent(\n            args,\n            { fromBlock, toBlock: (options.reversed) ? 'latest' : to });\n          event.get((err, data) => {\n            if (err) {\n              return reject(err);\n            }\n            const filteredData = (!isNil(options.lastIndex))\n              ? filter(filterIndex, data) : data; // @_@\n\n            results = uniq(results.concat(filteredData));\n            if (results.length < limit && fromBlock > 0 && !options.reversed) {\n              if (!options.stopOnFirst || !results.length) {\n                return fetch(fromBlock);\n              }\n            }\n\n            const sortedResults = take(\n              limit,\n              sortWith(\n                [\n                  descend(prop('blockNumber')),\n                  descend(prop('logIndex')),\n                ],\n                results),\n            );\n            const lastLog = options.reversed ?\n              head(sortedResults) : last(sortedResults);\n            const lastIndex = lastLog ? lastLog.logIndex : 0;\n            let lastBlock;\n            if (options.reversed) {\n              lastBlock = lastLog ? lastLog.blockNumber : fromBlock;\n            } else {\n              lastBlock = lastLog ?\n                (sortedResults.length === limit && fromBlock !== 0) ?\n                  lastLog.blockNumber : 0 : 0;\n            }\n            const result = { results: sortedResults, fromBlock: lastBlock, lastIndex };\n            getService(CORE_MODULE.STASH).eventCache.setFull(hashedEvent, result);\n            return resolve(result);\n          });\n        };\n        fetch(toBlock);\n      });\n\n    }\n\n    public fromEventFilter(ethEvent: any, args: any, toBlock: number | string, limit: number,\n                           options: { lastIndex?: number, reversed?: boolean },\n                           aditionalFilter: (data) => boolean) {\n      const step = 8300;\n      const hashedEvent = hash(Array.from(arguments));\n      if (getService(CORE_MODULE.STASH).eventCache.hasFull(hashedEvent) &&\n        !options.reversed) {\n        return Promise.resolve(\n          getService(CORE_MODULE.STASH).eventCache.getFull(hashedEvent));\n      }\n      return new Promise((resolve, reject) => {\n        let results = [];\n        let filterIndex;\n        if (!options.reversed) {\n          filterIndex = (record) => record.blockNumber < toBlock ||\n            (record.blockNumber === toBlock && record.logIndex < options.lastIndex);\n        } else {\n          filterIndex = (record) => record.blockNumber > toBlock;\n        }\n        const fetch = (to) => {\n          let fromBlock = (options.reversed) ? toBlock : to - step;\n          if (fromBlock < 0) {\n            fromBlock = 0;\n          }\n          const event = ethEvent(args, {\n            fromBlock,\n            toBlock: (options.reversed) ? 'latest' : to,\n          });\n          event.get((err, data) => {\n            if (err) {\n              return reject(err);\n            }\n\n            const filteredData = filter(aditionalFilter, filter(filterIndex, data));\n            results = uniq(results.concat(filteredData));\n            if (results.length < limit && fromBlock > 0 && !options.reversed) {\n              return fetch(fromBlock);\n            }\n\n            const sortedResults = take(\n              limit,\n              sortWith(\n                [\n                  descend(prop('blockNumber')),\n                  descend(prop('logIndex')),\n                ],\n                results));\n            const lastLog = options.reversed ?\n              head(sortedResults) : last(sortedResults);\n            const lastIndex = lastLog ? lastLog.logIndex : 0;\n            let lastBlock;\n            if (options.reversed) {\n              lastBlock = lastLog ? lastLog.blockNumber : fromBlock;\n            } else {\n              lastBlock = lastLog ?\n                (sortedResults.length === limit && fromBlock !== 0) ?\n                  lastLog.blockNumber : 0 : 0;\n            }\n            const result = { results: sortedResults, fromBlock: lastBlock, lastIndex };\n            getService(CORE_MODULE.STASH).eventCache.setFull(hashedEvent, result);\n            return resolve(result);\n          });\n        };\n        fetch(toBlock);\n      });\n\n    }\n\n  }\n\n  const contracts = new Contracts();\n  const service = function () {\n    return contracts;\n  };\n  sp().service(CORE_MODULE.CONTRACTS, service);\n\n}\n"]}