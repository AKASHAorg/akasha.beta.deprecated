{"version":3,"file":"stash.js","sourceRoot":"","sources":["stash.ts"],"names":[],"mappings":"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","sourcesContent":["import * as LRU from 'lru-cache';\nimport { CORE_MODULE } from '@akashaproject/common/constants';\n\nexport default function init(sp) {\n  class Entries {\n\n    public options = { max: 64, maxAge: 1000 * 60 * 60 };\n    protected FULL_PREFIX = 'F-';\n    protected SHORT_PREFIX = 'S-';\n    protected entries;\n\n    constructor() {\n      this.loadOptions();\n    }\n\n    get records() {\n      return this.entries;\n    }\n\n    setOptions(newOptions: {}) {\n      this.options = Object.assign({}, this.options, newOptions);\n      return this;\n    }\n\n    loadOptions() {\n      if (this.entries) {\n        this.entries.reset();\n      }\n      this.entries = LRU(this.options);\n    }\n\n    setFull(hash, data) {\n      this.entries.set(`${this.FULL_PREFIX}${hash}`, data);\n    }\n\n    getFull(hash) {\n      return this.entries.get(`${this.FULL_PREFIX}${hash}`);\n    }\n\n    hasFull(hash) {\n      return this.entries.has(`${this.FULL_PREFIX}${hash}`);\n    }\n\n    setShort(hash, data) {\n      this.entries.set(`${this.SHORT_PREFIX}${hash}`, data);\n    }\n\n    getShort(hash) {\n      return this.entries.get(`${this.SHORT_PREFIX}${hash}`);\n    }\n\n    hasShort(hash) {\n      return this.entries.has(`${this.SHORT_PREFIX}${hash}`);\n    }\n\n    removeFull(hash) {\n      this.entries.del(`${this.FULL_PREFIX}${hash}`);\n    }\n\n    removeShort(hash) {\n      this.entries.del(`${this.SHORT_PREFIX}${hash}`);\n    }\n\n    flush() {\n      this.entries.reset();\n    }\n\n  }\n\n  const entries = new Entries();\n  const profiles = new Entries();\n  const comments = new Entries();\n  const mixed = new Entries();\n  const eventCache = new Entries();\n  mixed.setOptions({ max: 1024, maxAge: 1000 * 60 * 15 });\n  eventCache.setOptions({ max: 2048, maxAge: 1000 * 60 * 120 });\n\n  const stash = { entries, profiles, comments, mixed, eventCache };\n  const service = function () {\n    return stash;\n  };\n  sp().service(CORE_MODULE.STASH, service);\n}\n"]}