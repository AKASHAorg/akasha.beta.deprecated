{"version":3,"file":"stash.js","sourceRoot":"","sources":["stash.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AACjC,+DAA4D;AAE5D,cAA6B,EAAE;IAC3B;QAOI;YALO,YAAO,GAAG,EAAC,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAAC,CAAC;YACzC,gBAAW,GAAG,IAAI,CAAC;YACnB,iBAAY,GAAG,IAAI,CAAC;YAI1B,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;QAED,UAAU,CAAC,UAAc;YACrB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YAC3D,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,WAAW;YACP,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;aACxB;YACD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC;QAED,OAAO,CAAC,IAAI,EAAE,IAAI;YACd,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;QACzD,CAAC;QAED,OAAO,CAAC,IAAI;YACR,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,CAAC;QAC1D,CAAC;QAED,OAAO,CAAC,IAAI;YACR,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,CAAC;QAC1D,CAAC;QAED,QAAQ,CAAC,IAAI,EAAE,IAAI;YACf,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;QAC1D,CAAC;QAED,QAAQ,CAAC,IAAI;YACT,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,CAAC,CAAC;QAC3D,CAAC;QAED,QAAQ,CAAC,IAAI;YACT,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,CAAC,CAAC;QAC3D,CAAC;QAED,UAAU,CAAC,IAAI;YACX,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,CAAC;QACnD,CAAC;QAED,WAAW,CAAC,IAAI;YACZ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,CAAC,CAAC;QACpD,CAAC;QAED,KAAK;YACD,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC;QAED,IAAI,OAAO;YACP,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;KAEJ;IAED,MAAM,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;IAC9B,MAAM,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;IAC/B,MAAM,QAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;IAC/B,MAAM,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC;IAC5B,MAAM,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;IACjC,KAAK,CAAC,UAAU,CAAC,EAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAAC,CAAC,CAAC;IACtD,UAAU,CAAC,UAAU,CAAC,EAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,EAAC,CAAC,CAAC;IAE5D,MAAM,KAAK,GAAG,EAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAC,CAAC;IAC/D,MAAM,OAAO,GAAG,cAAc,OAAO,KAAK,CAAC,CAAA,CAAC,CAAC;IAC7C,EAAE,EAAE,CAAC,OAAO,CAAC,uBAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAC7C,CAAC;AA7ED,uBA6EC","sourcesContent":["import * as LRU from 'lru-cache';\nimport {CORE_MODULE} from '@akashaproject/common/constants';\n\nexport default function init(sp) {\n    class Entries {\n\n        public options = {max: 64, maxAge: 1000 * 60 * 60};\n        protected FULL_PREFIX = 'F-';\n        protected SHORT_PREFIX = 'S-';\n        protected entries;\n\n        constructor() {\n            this.loadOptions();\n        }\n\n        setOptions(newOptions: {}) {\n            this.options = Object.assign({}, this.options, newOptions);\n            return this;\n        }\n\n        loadOptions() {\n            if (this.entries) {\n                this.entries.reset();\n            }\n            this.entries = LRU(this.options);\n        }\n\n        setFull(hash, data) {\n            this.entries.set(`${this.FULL_PREFIX}${hash}`, data);\n        }\n\n        getFull(hash) {\n            return this.entries.get(`${this.FULL_PREFIX}${hash}`);\n        }\n\n        hasFull(hash) {\n            return this.entries.has(`${this.FULL_PREFIX}${hash}`);\n        }\n\n        setShort(hash, data) {\n            this.entries.set(`${this.SHORT_PREFIX}${hash}`, data);\n        }\n\n        getShort(hash) {\n            return this.entries.get(`${this.SHORT_PREFIX}${hash}`);\n        }\n\n        hasShort(hash) {\n            return this.entries.has(`${this.SHORT_PREFIX}${hash}`);\n        }\n\n        removeFull(hash) {\n            this.entries.del(`${this.FULL_PREFIX}${hash}`);\n        }\n\n        removeShort(hash) {\n            this.entries.del(`${this.SHORT_PREFIX}${hash}`);\n        }\n\n        flush() {\n            this.entries.reset();\n        }\n\n        get records() {\n            return this.entries;\n        }\n\n    }\n\n    const entries = new Entries();\n    const profiles = new Entries();\n    const comments = new Entries();\n    const mixed = new Entries();\n    const eventCache = new Entries();\n    mixed.setOptions({max: 1024, maxAge: 1000 * 60 * 15});\n    eventCache.setOptions({max: 2048, maxAge: 1000 * 60 * 120});\n\n    const stash = {entries, profiles, comments, mixed, eventCache};\n    const service = function () { return stash;};\n    sp().service(CORE_MODULE.STASH, service);\n}\n"]}