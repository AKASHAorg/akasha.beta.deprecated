{"version":3,"file":"responses.js","sourceRoot":"","sources":["responses.ts"],"names":[],"mappings":"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","sourcesContent":["import { CORE_MODULE, GENERAL_SETTINGS } from '@akashaproject/common/constants';\n\nexport default function init(sp, getService) {\n\n  class GethStatus {\n    public shouldLogout: boolean = false;\n    public shouldUnlockVault: boolean = false;\n    private gethProcess: boolean;\n    private gethApi: boolean;\n    private gethNetworkID: number;\n    private gethKey: string;\n    private gethVersion: string;\n    private gethAkashaKey: string;\n\n    public get process() {\n      return this.gethProcess;\n    }\n\n    public set process(status: boolean) {\n      this.gethProcess = status;\n    }\n\n    public get api() {\n      return this.gethApi;\n    }\n\n    public set api(status: boolean) {\n      this.gethApi = status;\n    }\n\n    public get networkID() {\n      return this.gethNetworkID;\n    }\n\n    public set networkID(id: number) {\n      this.gethNetworkID = id;\n    }\n\n    public get version() {\n      return this.gethVersion;\n    }\n\n    public set version(nr: string) {\n      this.gethVersion = nr;\n    }\n\n    public get ethKey() {\n      getService(CORE_MODULE.WEB3_API).instance.eth.getAccounts((err, accList) => {\n        if (err) {\n          throw err;\n        }\n        if (accList[0] !== this.gethKey) {\n          console.log('default account changed');\n          if (this.gethKey) {\n            location.reload();\n          }\n\n          if (!accList[0]) {\n            this.shouldUnlockVault = true;\n          }\n          this.gethKey = accList[0];\n          if (this.shouldUnlockVault && this.gethKey) {\n            this.shouldUnlockVault = false;\n          }\n          this.shouldLogout = true;\n        }\n      });\n      return this.gethKey;\n    }\n\n    public set ethKey(address: string) {\n      this.gethKey = address;\n    }\n\n    public get akashaKey() {\n      return this.gethAkashaKey;\n    }\n\n    public set akashaKey(address: string) {\n      this.gethAkashaKey = address;\n    }\n\n  }\n\n  const gethStatus = new GethStatus();\n\n  const mainResponse = (rawData: any, request: any) => {\n    if (rawData.error) {\n      return {\n        data: {},\n        services: {\n          ipfs: Object.assign(\n            getService(CORE_MODULE.IPFS_API).instance.serviceStatus,\n            {\n              [GENERAL_SETTINGS.BASE_URL]:\n                getService(CORE_MODULE.SETTINGS).get(GENERAL_SETTINGS.BASE_URL),\n            }),\n          geth: {\n            process: gethStatus.process,\n            api: gethStatus.api,\n            networkID: gethStatus.networkID,\n            ethAddress: gethStatus.ethKey,\n            version: gethStatus.version,\n            shouldLogout: gethStatus.shouldLogout,\n            shouldUnlockVault: gethStatus.shouldUnlockVault,\n          },\n        },\n        error: { message: rawData.error.message }, request,\n      };\n    }\n    return {\n      data: rawData,\n      services: {\n        ipfs: Object.assign(\n          getService(CORE_MODULE.IPFS_API).instance.serviceStatus,\n          {\n            [GENERAL_SETTINGS.BASE_URL]:\n              getService(CORE_MODULE.SETTINGS).get(GENERAL_SETTINGS.BASE_URL),\n          }),\n        geth: {\n          process: gethStatus.process,\n          api: gethStatus.api,\n          networkID: gethStatus.networkID,\n          ethAddress: gethStatus.ethKey,\n          version: gethStatus.version,\n          shouldLogout: gethStatus.shouldLogout,\n          shouldUnlockVault: gethStatus.shouldUnlockVault,\n        },\n      }, request,\n    };\n  };\n  const emitResponse = { gethStatus, mainResponse };\n  const service = function () {\n    return emitResponse;\n  };\n  sp().service(CORE_MODULE.RESPONSES, service);\n}\n"]}