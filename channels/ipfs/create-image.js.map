{"version":3,"file":"create-image.js","sourceRoot":"","sources":["create-image.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,+DAA2E;AAE9D,QAAA,WAAW,GAAG,qBAAqB,IAAgB,EAAE,IAAI,GAAG,WAAW;IAClF,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;IACxC,OAAO,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AACnC,CAAC,CAAC;AAEF,cAA6B,EAAE,EAAE,UAAU;IACzC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAc;QACzD,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YACjC,OAAO,UAAU,CAAC,uBAAW,CAAC,cAAc,CAAC;iBAC5C,WAAW,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACjD,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/C,MAAM,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YACzC,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,mBAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,MAAM,YAAY,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;IACtD,MAAM,OAAO,GAAG;QACd,OAAO,YAAY,CAAC;IACtB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,uBAAW,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IAC/C,OAAO,YAAY,CAAC;AACtB,CAAC;AArBD,uBAqBC","sourcesContent":["import * as Promise from 'bluebird';\nimport { CORE_MODULE, IPFS_MODULE } from '@akashaproject/common/constants';\n\nexport const createImage = function createImage(data: Uint8Array, type = 'image/jpg') {\n  const blob = new Blob([data], { type });\n  return URL.createObjectURL(blob);\n};\n\nexport default function init(sp, getService) {\n  const execute = Promise.coroutine(function* (data: string[]) {\n    const requests = data.map((hash) => {\n      return getService(CORE_MODULE.IPFS_CONNECTOR)\n      .getInstance().api.getFile(hash).then((uintData) => {\n        return { data: uintData, hash };\n      });\n    });\n    const collection = yield Promise.all(requests);\n    const response = collection.map((record) => {\n      return { [record.hash]: createImage(record.data) };\n    });\n    return { collection: response };\n  });\n\n  const createImages = { execute, name: 'createImage' };\n  const service = function () {\n    return createImages;\n  };\n  sp().service(IPFS_MODULE.createImage, service);\n  return createImages;\n}\n"]}