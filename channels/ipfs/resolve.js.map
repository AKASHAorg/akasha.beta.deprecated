{"version":3,"file":"resolve.js","sourceRoot":"","sources":["resolve.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,UAAU,CAAC;AACpC,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAC;AAE3E,MAAM,CAAC,OAAO,UAAU,IAAI,CAAE,EAAE,EAAE,UAAU;IAC1C,MAAM,OAAO,GAAG,OAAO;SACpB,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAI;QACxB,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnF,CAAC,CAAC,CAAC;IAEL,MAAM,OAAO,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;IAC7C,MAAM,OAAO,GAAG;QACd,OAAO,OAAO,CAAC;IACjB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC3C,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { CORE_MODULE, IPFS_MODULE } from '@akashaproject/common/constants';\n\nexport default function init (sp, getService) {\n  const execute = Promise\n    .coroutine(function* (data) {\n      return (getService(CORE_MODULE.IPFS_CONNECTOR)).getInstance().api.get(data.hash);\n    });\n\n  const resolve = { execute, name: 'resolve' };\n  const service = function () {\n    return resolve;\n  };\n  sp().service(IPFS_MODULE.resolve, service);\n  return resolve;\n}\n"]}