{"version":3,"file":"request-aeth.js","sourceRoot":"","sources":["request-aeth.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,2CAA0C;AAC1C,2CAAyE;AAEzE,SAAwB,IAAI,CAAC,EAAE,EAAE,UAAU;IACzC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE;QACnD,MAAM,UAAU,GAAG,UAAU,CAAC,uBAAW,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,4BAAgB,CAAC,UAAU,CAAC,CAAC;QACrF,MAAM,YAAY,GAAG,UAAU,CAAC,uBAAW,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,4BAAgB,CAAC,YAAY,CAAC,CAAC;QACzF,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,YAAY,CAAC,UAAU,GAAG;YACvD,OAAO,iBAAI,CAAC,UAAU,CAAC;iBACtB,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;iBACvC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC;iBACpD,GAAG,CAAC,GAAG,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YACpB,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;gBACxB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC9B;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;SACxD;QAED,UAAU,CAAC,uBAAW,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;aACrD,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QACxD,OAAO,QAAQ,CAAC;IAElB,CAAC,CAAC,CAAC;IAEH,MAAM,YAAY,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IACxE,MAAM,OAAO,GAAG;QACd,OAAO,YAAY,CAAC;IACtB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,uBAAW,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;IAChD,OAAO,YAAY,CAAC;AACtB,CAAC;AAhCD,uBAgCC","sourcesContent":["import * as Promise from 'bluebird';\nimport { post as POST } from 'superagent';\nimport { AUTH_MODULE, CORE_MODULE, GENERAL_SETTINGS } from './constants';\n\nexport default function init(sp, getService) {\n  const execute = Promise.coroutine(function* (data, cb) {\n    const FAUCET_URL = getService(CORE_MODULE.SETTINGS).get(GENERAL_SETTINGS.FAUCET_URL);\n    const FAUCET_TOKEN = getService(CORE_MODULE.SETTINGS).get(GENERAL_SETTINGS.FAUCET_TOKEN);\n    const response = yield Promise.fromCallback(function (cb1) {\n      return POST(FAUCET_URL)\n      .set('Content-Type', 'application/json')\n      .send({ address: data.address, token: FAUCET_TOKEN })\n      .end(cb1);\n    }).then((body: any) => {\n      if (body.ok && body.text) {\n        return JSON.parse(body.text);\n      }\n      return body;\n    });\n\n    if (!response.tx) {\n      throw new Error('The request could not be completed.');\n    }\n\n    getService(CORE_MODULE.CONTRACTS).watchTx(response.tx)\n    .then(success => cb('', success)).catch(err => cb(err));\n    return response;\n\n  });\n\n  const requestEther = { execute, name: 'requestEther', hasStream: true };\n  const service = function () {\n    return requestEther;\n  };\n  sp().service(AUTH_MODULE.requestEther, service);\n  return requestEther;\n}\n"]}