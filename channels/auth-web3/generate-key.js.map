{"version":3,"file":"generate-key.js","sourceRoot":"","sources":["generate-key.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,+DAA8D;AAG9D,SAAwB,IAAI,CAAC,EAAE,EAAE,UAAU;IAEzC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAI;QAG/C,OAAO,IAAI,CAAC;IACd,CAAC,CAAC,CAAC;IACH,MAAM,cAAc,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC;IAC3D,MAAM,OAAO,GAAG;QACd,OAAO,cAAc,CAAC;IACxB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,uBAAW,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;IAClD,OAAO,cAAc,CAAC;AACxB,CAAC;AAbD,uBAaC","sourcesContent":["import * as Promise from 'bluebird';\nimport { AUTH_MODULE } from '@akashaproject/common/constants';\n// import Auth from './Auth';\n\nexport default function init(sp, getService) {\n// this functionality is delegated to Metamask as exposing personal module over rpc is not safe\n  const execute = Promise.coroutine(function* (data) {\n    // const address = yield Auth.generateKey(data.password);\n    // return { address };\n    return true;\n  });\n  const generateEthKey = { execute, name: 'generateEthKey' };\n  const service = function () {\n    return generateEthKey;\n  };\n  sp().service(AUTH_MODULE.generateEthKey, service);\n  return generateEthKey;\n}\n"]}