{"version":3,"file":"peers.js","sourceRoot":"","sources":["peers.ts"],"names":[],"mappings":"","sourcesContent":["// import * as Promise from 'bluebird';\n// import { roomFactory } from './join';\n// import IpfsConnector from '@akashaproject/ipfs-js-connector';\n//\n// const execute = Promise.coroutine(function* (data: { roomName: string }) {\n//     const room = roomFactory.getChanPrefix() + data.roomName;\n//     return Promise.fromCallback( cb =>\n//         IpfsConnector.getInstance().api.apiClient.pubsub.peers(room, (err, resp: string[]) => {\n//             if (err) {\n//                return cb(err);\n//             }\n//             cb('', { count: resp.length });\n//         })\n//     );\n// });\n//\n// export default { execute, name: 'peerCount' };\n"]}