{"version":3,"file":"comments-count.js","sourceRoot":"","sources":["comments-count.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,UAAU,CAAC;AACpC,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAC;AAE/E,MAAM,cAAc,GAAG;IACrB,EAAE,EAAE,gBAAgB;IACpB,IAAI,EAAE,OAAO;IACb,KAAK,EAAE;QACL,IAAI,EAAE,QAAQ;KACf;IACD,WAAW,EAAE,IAAI;IACjB,QAAQ,EAAE,CAAC;CACZ,CAAC;AAEF,MAAM,CAAC,OAAO,UAAU,IAAI,CAAC,EAAE,EAAE,UAAU;IACzC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAc;QACzD,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACrE,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,cAAc,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QACvD,MAAM,UAAU,GAAG,EAAE,CAAC;QACtB,MAAM,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACpD,KAAK,MAAM,OAAO,IAAI,IAAI,EAAE;YAC1B,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACvE,UAAU,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;SACvD;QAED,OAAO,EAAE,UAAU,EAAE,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,MAAM,aAAa,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC;IACzD,MAAM,OAAO,GAAG;QACd,OAAO,aAAa,CAAC;IACvB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;IACrD,OAAO,aAAa,CAAC;AACvB,CAAC","sourcesContent":["import * as Promise from 'bluebird';\nimport { COMMENTS_MODULE, CORE_MODULE } from '@akashaproject/common/constants';\n\nconst commentsCountS = {\n  id: '/commentsCount',\n  type: 'array',\n  items: {\n    type: 'string',\n  },\n  uniqueItems: true,\n  minItems: 1,\n};\n\nexport default function init(sp, getService) {\n  const execute = Promise.coroutine(function* (data: string[]) {\n    const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n    v.validate(data, commentsCountS, { throwError: true });\n    const collection = [];\n    const contracts = getService(CORE_MODULE.CONTRACTS);\n    for (const entryId of data) {\n      const count = yield contracts.instance.Comments.totalComments(entryId);\n      collection.push({ entryId, count: count.toNumber() });\n    }\n\n    return { collection };\n  });\n\n  const commentsCount = { execute, name: 'commentsCount' };\n  const service = function () {\n    return commentsCount;\n  };\n  sp().service(COMMENTS_MODULE.commentsCount, service);\n  return commentsCount;\n}\n"]}