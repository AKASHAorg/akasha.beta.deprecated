{"version":3,"file":"upvote-comment.js","sourceRoot":"","sources":["upvote-comment.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,+DAA+E;AAElE,QAAA,MAAM,GAAG;IACpB,EAAE,EAAE,SAAS;IACb,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACV,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC3B,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QACzB,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC7B,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;KAC3B;IACD,QAAQ,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,CAAC;CACtD,CAAC;AAEF,SAAwB,IAAI,CAAC,EAAE,EAAE,UAAU;IACzC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE;QAEnD,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,uBAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACrE,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QAE/C,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE;YACvC,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;SAC3D;QACD,MAAM,SAAS,GAAG,UAAU,CAAC,uBAAW,CAAC,SAAS,CAAC,CAAC;QACpD,MAAM,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAK;aACtC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;QACxF,MAAM,WAAW,GAAG,MAAM,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAEjE,OAAO,EAAE,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,MAAM,MAAM,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IAC5D,MAAM,OAAO,GAAG;QACd,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,2BAAe,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC9C,OAAO,MAAM,CAAC;AAChB,CAAC;AAvBD,uBAuBC","sourcesContent":["import * as Promise from 'bluebird';\nimport { COMMENTS_MODULE, CORE_MODULE } from '@akashaproject/common/constants';\n\nexport const upvote = {\n  id: '/upvote',\n  type: 'object',\n  properties: {\n    entryId: { type: 'string' },\n    token: { type: 'string' },\n    commentId: { type: 'string' },\n    weight: { type: 'number' },\n  },\n  required: ['entryId', 'token', 'commentId', 'weight'],\n};\n\nexport default function init(sp, getService) {\n  const execute = Promise.coroutine(function* (data, cb) {\n\n    const v = new (getService(CORE_MODULE.VALIDATOR_SCHEMA)).Validator();\n    v.validate(data, upvote, { throwError: true });\n\n    if (data.weight < 1 || data.weight > 10) {\n      throw new Error('Vote weight value must be between 1-10');\n    }\n    const contracts = getService(CORE_MODULE.CONTRACTS);\n    const txData = contracts.instance.Votes\n    .voteComment.request(data.weight, data.entryId, data.commentId, false, { gas: 300000 });\n    const transaction = yield contracts.send(txData, data.token, cb);\n\n    return { tx: transaction.tx, receipt: transaction.receipt };\n  });\n\n  const upvote = { execute, name: 'upvote', hasStream: true };\n  const service = function () {\n    return upvote;\n  };\n  sp().service(COMMENTS_MODULE.upvote, service);\n  return upvote;\n}\n"]}