{"version":3,"file":"downvote-comment.js","sourceRoot":"","sources":["downvote-comment.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,+DAA+E;AAElE,QAAA,QAAQ,GAAG;IACtB,EAAE,EAAE,WAAW;IACf,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACV,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC3B,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QACzB,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC7B,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;KAC3B;IACD,QAAQ,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,CAAC;CACtD,CAAC;AAEF,SAAwB,IAAI,CAAC,EAAE,EAAE,UAAU;IACzC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE;QAEnD,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,uBAAW,CAAC,gBAAgB,CAAC,CAAC,SAAS,EAAE,CAAC;QACnE,MAAM,SAAS,GAAG,UAAU,CAAC,uBAAW,CAAC,SAAS,CAAC,CAAC;QAEpD,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,gBAAQ,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QAEjD,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE;YACvC,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;SAC3D;QAED,MAAM,MAAM,GAAG,SAAS,CAAC,QAAQ;aAChC,KAAK,CAAC,WAAW;aACjB,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;QAC3E,MAAM,WAAW,GAAG,MAAM,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACjE,OAAO,EAAE,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,MAAM,QAAQ,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IAChE,MAAM,OAAO,GAAG;QACd,OAAO,QAAQ,CAAC;IAClB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,2BAAe,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAChD,OAAO,QAAQ,CAAC;AAElB,CAAC;AA1BD,uBA0BC","sourcesContent":["import * as Promise from 'bluebird';\nimport { COMMENTS_MODULE, CORE_MODULE } from '@akashaproject/common/constants';\n\nexport const downvote = {\n  id: '/downvote',\n  type: 'object',\n  properties: {\n    entryId: { type: 'string' },\n    token: { type: 'string' },\n    commentId: { type: 'string' },\n    weight: { type: 'number' },\n  },\n  required: ['entryId', 'token', 'commentId', 'weight'],\n};\n\nexport default function init(sp, getService) {\n  const execute = Promise.coroutine(function* (data, cb) {\n\n    const v = new getService(CORE_MODULE.VALIDATOR_SCHEMA).Validator();\n    const contracts = getService(CORE_MODULE.CONTRACTS);\n\n    v.validate(data, downvote, { throwError: true });\n\n    if (data.weight < 1 || data.weight > 10) {\n      throw new Error('Vote weight value must be between 1-10');\n    }\n\n    const txData = contracts.instance\n    .Votes.voteComment\n    .request(data.weight, data.entryId, data.commentId, true, { gas: 250000 });\n    const transaction = yield contracts.send(txData, data.token, cb);\n    return { tx: transaction.tx, receipt: transaction.receipt };\n  });\n\n  const downVote = { execute, name: 'downvote', hasStream: true };\n  const service = function () {\n    return downVote;\n  };\n  sp().service(COMMENTS_MODULE.downVote, service);\n  return downVote;\n\n}\n"]}