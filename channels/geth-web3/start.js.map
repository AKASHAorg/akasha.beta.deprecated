{"version":3,"file":"start.js","sourceRoot":"","sources":["start.ts"],"names":[],"mappings":";;AAAA,oCAAoC;AACpC,+DAA2E;AAE3E,cAA6B,EAAE,EAAE,UAAU;IACzC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC;QACzC,MAAM,OAAO,GAAG,UAAU,CAAC,uBAAW,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QAI/C,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QAe3C,MAAM,UAAU,CAAC,uBAAW,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC;QAC/C,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC;IACH,MAAM,YAAY,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC;IACvD,MAAM,OAAO,GAAG;QACd,OAAO,YAAY,CAAC;IACtB,CAAC,CAAC;IACF,EAAE,EAAE,CAAC,OAAO,CAAC,uBAAW,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;IAChD,OAAO,YAAY,CAAC;AACtB,CAAC;AA/BD,uBA+BC","sourcesContent":["import * as Promise from 'bluebird';\nimport { CORE_MODULE, GETH_MODULE } from '@akashaproject/common/constants';\n\nexport default function init(sp, getService) {\n  const execute = Promise.coroutine(function* () {\n    const web3Api = getService(CORE_MODULE.WEB3_API);\n    let connected = web3Api.instance.isConnected();\n    // @TODO: reimplement this at app lvl\n    // if (!connected) {\n    // web3Api.instance = regenWeb3();\n    connected = web3Api.instance.isConnected();\n    // }\n    // if (connected) {\n    //     gethStatus.process = true;\n    //     gethStatus.api = true;\n    //     gethStatus.version = yield web3Api.instance.version.getNodeAsync();\n    //     gethStatus.networkID = yield web3Api.instance.version.getNetworkAsync();\n\n    // @TODO: reimplement this at app lvl\n    // const accounts = yield web3Api.instance.eth.getAccountsAsync();\n    // if (accounts.length) {\n\n    // gethStatus.ethKey = accounts[0];\n    // }\n    // }\n    yield getService(CORE_MODULE.CONTRACTS).init();\n    return { started: connected };\n  });\n  const startService = { execute, name: 'startService' };\n  const service = function () {\n    return startService;\n  };\n  sp().service(GETH_MODULE.startService, service);\n  return startService;\n}\n"]}